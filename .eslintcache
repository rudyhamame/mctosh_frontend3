[{"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\index.js":"1","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\AppRouter.js":"2","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\Login\\Login.jsx":"3","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\App.js":"4","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\Posts.jsx":"5","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Greeting\\Greeting.jsx":"6","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Header.jsx":"7","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Terminology\\Terminology.jsx":"8","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\InputPost\\SearchPosts\\SearchPosts.jsx":"9","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\MountPosts\\MountPosts.jsx":"10","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Footer\\Footer.jsx":"11","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\InputPost\\InputPost.jsx":"12","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Nav.jsx":"13","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\SearchUsers\\SearchUsers.jsx":"14","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Menu\\Menu.jsx":"15","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Notifications\\Notifications.jsx":"16","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Dim\\Dim.jsx":"17","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\MessengerIcon\\MessengerIcon.jsx":"18","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Profile\\ProfileIcon.jsx":"19","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Logout\\Logout.jsx":"20","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Refresh\\Refresh.jsx":"21","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\SubApps\\Chat\\Chat.js":"22","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\Friends.jsx":"23","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\DropHorizontally.jsx":"24","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\FriendsList\\FriendsList.jsx":"25","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\AddFriend\\AddFriend.jsx":"26","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\SubApps\\StudyPlannner\\StudyPlanner.js":"27","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\SubApps\\StudyPlannner\\components\\SchoolPlanner\\SchoolPlanner.jsx":"28","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\firebase.js":"29"},{"size":506,"mtime":1689231643000,"results":"30","hashOfConfig":"31"},{"size":649,"mtime":1689231643000,"results":"32","hashOfConfig":"31"},{"size":13342,"mtime":1690082334823,"results":"33","hashOfConfig":"31"},{"size":70472,"mtime":1690082379260,"results":"34","hashOfConfig":"31"},{"size":830,"mtime":1689231643000,"results":"35","hashOfConfig":"31"},{"size":5057,"mtime":1689231643000,"results":"36","hashOfConfig":"31"},{"size":866,"mtime":1689231643000,"results":"37","hashOfConfig":"31"},{"size":7534,"mtime":1689231643000,"results":"38","hashOfConfig":"31"},{"size":7532,"mtime":1689231643000,"results":"39","hashOfConfig":"31"},{"size":472,"mtime":1689231643000,"results":"40","hashOfConfig":"31"},{"size":184,"mtime":1689231643000,"results":"41","hashOfConfig":"31"},{"size":5044,"mtime":1689231643000,"results":"42","hashOfConfig":"31"},{"size":812,"mtime":1689231643000,"results":"43","hashOfConfig":"31"},{"size":931,"mtime":1689231643000,"results":"44","hashOfConfig":"31"},{"size":1901,"mtime":1689231643000,"results":"45","hashOfConfig":"31"},{"size":1753,"mtime":1689231643000,"results":"46","hashOfConfig":"31"},{"size":1571,"mtime":1689231643000,"results":"47","hashOfConfig":"31"},{"size":283,"mtime":1689231643000,"results":"48","hashOfConfig":"31"},{"size":574,"mtime":1689231643000,"results":"49","hashOfConfig":"31"},{"size":1584,"mtime":1689231643000,"results":"50","hashOfConfig":"31"},{"size":318,"mtime":1689231643000,"results":"51","hashOfConfig":"31"},{"size":6577,"mtime":1689231643000,"results":"52","hashOfConfig":"31"},{"size":5371,"mtime":1689231643000,"results":"53","hashOfConfig":"31"},{"size":2212,"mtime":1689231643000,"results":"54","hashOfConfig":"31"},{"size":625,"mtime":1689231643000,"results":"55","hashOfConfig":"31"},{"size":663,"mtime":1689231643000,"results":"56","hashOfConfig":"31"},{"size":2053,"mtime":1679269862576,"results":"57","hashOfConfig":"31"},{"size":99943,"mtime":1691185730063,"results":"58","hashOfConfig":"31"},{"size":526,"mtime":1689231643000,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"ffl9pf",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\index.js",[],["127","128"],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\AppRouter.js",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\Login\\Login.jsx",["129","130"],"import React, { useState } from \"react\";\nimport AppRouter from \"../AppRouter\";\nimport \"../Login/login.css\";\nimport ReactDOM from \"react-dom\";\nimport { Redirect, BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst Login = () => {\n  //.........................STATE............................//\n  const [is_loading, setIs_loading] = useState(null);\n  const [signup_ok, setSignup_ok] = useState(null);\n  const [login_ok, setLogin_ok] = useState(null);\n  const [authReport, setAuthReport] = useState(null);\n\n  React.useEffect(() => {\n    if (login_ok && authReport) {\n      login_listener();\n      sessionStorage.setItem(\"state\", JSON.stringify(authReport));\n    }\n  });\n  //.........................DECLARATION......................//\n\n  //.........................formControl & formControl (functions)..........................//\n  //........Server answer..........\n    const serverReply = (answer) => {\n      document.getElementById(\"server_answer_message\").textContent = answer;\n  \n      document.getElementById(\"server_answer\").style.width = \"fit-content\";\n      setTimeout(() => {\n        document.getElementById(\"server_answer\").style.width = \"0\";\n        document.getElementById(\"server_answer_message\").textContent = \"\";\n      }, 8000);\n    };\n  \n  const formControl = (text) => {\n    let Login_firstname_input = document.getElementById(\n      \"Login_firstname_input\"\n    );\n    let Login_lastname_input = document.getElementById(\"Login_lastname_input\");\n    // let Login_email_input = document.getElementById(\"Login_email_input\");\n    // let Login_dob_input = document.getElementById(\"Login_dob_input\");\n    let Login_signup_button = document.getElementById(\"Login_signup_button\");\n    let Login_login_button = document.getElementById(\"Login_login_button\");\n    let Login_loginShow_text = document.getElementById(\"Login_loginShow_text\");\n    let Login_signupShow_text = document.getElementById(\n      \"Login_signupShow_text\"\n    );\n    switch (text) {\n      case \"signup\":\n        setLogin_ok(null);\n        Login_firstname_input.style.display = \"initial\";\n        Login_lastname_input.style.display = \"initial\";\n        // Login_email_input.style.display = \"initial\";\n        // Login_dob_input.style.display = \"initial\";\n        Login_signup_button.style.display = \"initial\";\n        Login_login_button.style.display = \"none\";\n        Login_loginShow_text.style.display = \"initial\";\n        Login_signupShow_text.style.display = \"none\";\n        break;\n\n      case \"login\":\n        setSignup_ok(null);\n        Login_signup_button.style.display = \"none\";\n        Login_signupShow_text.style.display = \"initial\";\n        Login_login_button.style.display = \"initial\";\n        // Login_email_input.style.display = \"none\";\n        // Login_dob_input.style.display = \"none\";\n        Login_loginShow_text.style.display = \"none\";\n        Login_firstname_input.style.display = \"none\";\n        Login_lastname_input.style.display = \"none\";\n        break;\n    }\n  };\n\n  ////////////////////////////////////////////CHECK AND GET CREDENTIALS//////////////////////////////////////\n  const login = (event) => {\n    let login;\n    // event.preventDefault();\n    let Login_username_input = document.getElementById(\"Login_username_input\");\n    let Login_password_input = document.getElementById(\"Login_password_input\");\n    if (Login_password_input.value && Login_username_input.value) {\n      setIs_loading(true);\n      let url = \"https://backendstep.onrender.com/api/user/login/\";\n      let req = new Request(url, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          username: Login_username_input.value,\n          password: Login_password_input.value,\n        }),\n      });\n      fetch(req)\n        .then((response) => {\n          if (response.status === 201) {\n            login = true;\n            return response.json(response);\n          }\n          if (response.status === 401) {\n            serverReply(\"UNSUCCESSFUL LOG IN. WRONG USERNAME AND/OR PASSWORD\")\n            setLogin_ok(false)\n            setIs_loading(false);\n            return response.json(response);\n          }\n        })\n        .then((userdata) => {\n          if (userdata && login === true) {\n            setAuthReport({\n              my_id: userdata.user._id,\n              username: userdata.user.info.username,\n              firstname: userdata.user.info.firstname,\n              lastname: userdata.user.info.lastname,\n              // dob: userdata.user.info.dob,\n              token: userdata.token,\n              isConnected: true,\n              notes: userdata.user.notes,\n              friends: userdata.user.friends,\n              friend_requests: userdata.user.friend_requests,\n              notifications: userdata.user.notifications,\n              posts: userdata.user.posts,\n              courses:userdata.user.schoolPlanner.courses,\n              lectures:userdata.user.schoolPlanner.lectures\n            });\n            serverReply(\"YOU HAVE SUCCESSFULLY LOGGED IN!\")\n            setLogin_ok(true)\n          } else {\n            serverReply(\"UNSUCCESSFUL LOG IN. WRONG USERNAME AND/OR PASSWORD\")\n            setIs_loading(false);\n            setLogin_ok(false)\n          }\n        });\n    } else {\n      serverReply(\"UNSUCCESSFUL LOG IN. WRONG USERNAME AND/OR PASSWORD\")\n      setLogin_ok(false)\n      setIs_loading(false);\n    }\n  };\n  //..............................................................................................\n  /////////////////////////////////////////Login listener/////////////////////////////////////////\n  const login_listener = () => {\n    let app_page_width = parseInt(\n      window.getComputedStyle(document.querySelector(\"#root\")).width\n    );\n    if (authReport) {\n      document.getElementById(\"Login_loginFrom_form\").style.height = \"0\";\n      document.getElementById(\"Login_loginFrom_form\").style.padding = \"0\";\n      if (app_page_width > 1000) {\n        document.getElementById(\"Login_loginLogo_text\").style.fontSize =\n          \"100pt\";\n        document.getElementById(\n          \"Login_loginLogo_container\"\n        ).style.marginBottom = \"150px\";\n        document.getElementById(\"Login_subLoginLogo_text\").style.fontSize =\n          \"50pt\";\n      }\n      if (1000 > app_page_width > 700) {\n        document.getElementById(\"Login_loginLogo_text\").style.fontSize = \"90pt\";\n        document.getElementById(\n          \"Login_loginLogo_container\"\n        ).style.marginBottom = \"140px\";\n        document.getElementById(\"Login_subLoginLogo_text\").style.fontSize =\n          \"40pt\";\n      }\n      if (app_page_width < 700) {\n        document.getElementById(\"Login_loginLogo_text\").style.fontSize = \"70pt\";\n        document.getElementById(\n          \"Login_loginLogo_container\"\n        ).style.marginBottom = \"130px\";\n        document.getElementById(\"Login_subLoginLogo_text\").style.fontSize =\n          \"30pt\";\n      }\n\n      setTimeout(() => {\n        setIs_loading(false);\n        ReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n      }, 5000);\n    }\n  };\n  //.............................................................................................................\n  ////////////////////////////////////////////SIGN UP AS USER AND PROFILE//////////////////////////////////////\n  const signup = (event) => {\n\n    event.preventDefault();\n    setIs_loading(true);\n    let Login_username_input = document.getElementById(\"Login_username_input\");\n    let Login_password_input = document.getElementById(\"Login_password_input\");\n    let Login_firstname_input = document.getElementById(\n      \"Login_firstname_input\"\n    );\n    let Login_lastname_input = document.getElementById(\"Login_lastname_input\");\n    // let Login_email_input = document.getElementById(\"Login_email_input\");\n    // let Login_dob_input = document.getElementById(\"Login_dob_input\");\n    //................................user....................................................\n    if (\n      Login_username_input.value &&\n      Login_password_input.value &&\n      Login_firstname_input.value &&\n      Login_lastname_input.value \n      // Login_email_input.value\n      // Login_dob_input.value\n    ) {\n      const url = \"https://backendstep.onrender.com/api/user/signup\";\n      const options = {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          username: Login_username_input.value,\n          password: Login_password_input.value,\n          firstname: Login_firstname_input.value,\n          lastname: Login_lastname_input.value,\n          // email: Login_email_input.value,\n          // dob: Login_dob_input.value,\n        }),\n      };\n      let req = new Request(url, options);\n      fetch(req)\n        .then((response) => {\n          if (response.status === 201) {\n            setIs_loading(false);\n            serverReply(\"YOU HAVE SUCCESSFULLY SIGNED UP!\")\n            setSignup_ok(true)\n            return response.json()\n            // document.getElementById(\"Login_loginFrom_form\").reset();\n          } else {\n            setIs_loading(false);\n            setSignup_ok(false)\n            serverReply(\"UNSUCCESSFUL SIGN UP. PLEASE FILL OUT THE FORM WITH VALID INFORMATION\")\n          }\n        })\n        .catch((err) => {\n          console.log(\"error:\", err.message);\n        });\n    } else {\n      setIs_loading(false);\n      setSignup_ok(false)\n      serverReply(\"UNSUCCESSFUL SIGN UP. PLEASE FILL OUT THE FORM WITH VALID INFORMATION\")\n    }\n  };\n  ////////////////////////////////////////////Create PROFILE//////////////////////////////////////\n\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        <article id=\"Login_article\" className=\"fc\">\n          <main id=\"Login_main\">\n            <section id=\"Login_column1_container\">\n            </section>\n            <section className=\"fc\" id=\"Login_column2_container\">\n            <section id=\"Login_loginLogo_container\">\n              <h1 id=\"Login_loginLogo_text\">MCTOSH</h1>\n              <h4 id=\"Login_subLoginLogo_text\">Virtual Medicine</h4>\n            </section>\n            <section id=\"Login_loginForm_container\">\n              <section id=\"Login_loginFrom_form\" className=\"fc\">\n                <input\n                  id=\"Login_firstname_input\"\n                  type=\"text\"\n                  style={{ display: \"none\" }}\n                  placeholder=\"first name\"\n                />\n                <input\n                  id=\"Login_lastname_input\"\n                  type=\"text\"\n                  style={{ display: \"none\" }}\n                  placeholder=\"last name\"\n                />\n                <input\n                  id=\"Login_username_input\"\n                  type=\"text\"\n                  placeholder=\"username\"\n                  onKeyPress={(event) => {\n                    if (event.which === 13) {\n                      login();\n                    }\n                  }}\n                />\n                <input\n                  id=\"Login_password_input\"\n                  type=\"password\"\n                  placeholder=\"password\"\n                  onKeyPress={(event) => {\n                    if (event.which === 13) {\n                      login();\n                    }\n                  }}\n                />\n                {/* <input\n                  id=\"Login_email_input\"\n                  type=\"email\"\n                  placeholder=\"email address\"\n                  style={{ display: \"none\" }}\n                /> */}\n                {/* <input\n                  id=\"Login_dob_input\"\n                  type=\"date\"\n                  style={{ display: \"none\" }}\n                /> */}\n                <button id=\"Login_login_button\" onClick={login}>\n                  Log in\n                </button>\n\n                <button\n                  id=\"Login_signup_button\"\n                  onClick={signup}\n                  style={{ display: \"none\" }}\n                >\n                  Sign up\n                </button>\n                <h4\n                  style={{ display: \"none\" }}\n                  id=\"Login_loginShow_text\"\n                  onClick={() => formControl(\"login\")}\n                >\n                  Log in?\n                </h4>\n                <h4\n                  id=\"Login_signupShow_text\"\n                  onClick={() => formControl(\"signup\")}\n                >\n                  Sign up?\n                </h4>\n              </section>\n            </section>\n            </section>\n            <section id=\"Login_column3_container\">\n            </section>\n          </main>\n          <footer id=\"Login_footer\">\n            <section id=\"Login_copyright_container\">\n              <h4 id=\"Login_copyright_text\">©2020 Rudy Hamame</h4>\n            </section>\n          </footer>\n          {is_loading === true && (\n            <div id=\"Login_loaderImg_div\" className=\"loaderImg_div fc\">\n              <img src=\"/img/loader.gif\" alt=\"\" width=\"100px\" />\n            </div>\n          )}\n        </article>\n        <div\n          id=\"server_answer\"\n          onClick={() => {\n            document.getElementById(\"server_answer\").style.width = \"0\";\n          }}\n        >\n          <p id=\"server_answer_message\"></p>\n        </div>\n      </Route>\n      <Redirect to=\"/\" />\n    </Router>\n  );\n};\n\nexport default Login;\n","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\App.js",["131","132","133","134","135","136","137","138","139","140","141","142"],"//...........import..................\nimport React from \"react\";\n\n//........import CSS...........\nimport \"./App.css\";\nimport \"./Footer/footer.css\";\nimport \"./Header/header.css\";\nimport \"./Parts/Friends/AddFriend/add_friend.css\";\nimport \"./Main/Posts/posts.css\";\nimport \"./Main/main.css\";\nimport \"./Parts/Friends/friends.css\";\nimport \"./Header/SearchUsers/search_users.css\";\nimport \"./Main/Posts/InputPost/SearchPosts/search_posts.css\";\nimport \"./Header/Logo/logo.css\";\nimport \"./Header/Nav/Notifications/notifications.css\";\nimport \"./Header/Nav/nav.css\";\nimport \"./Main/Posts/InputPost/inputPosts.css\";\nimport \"./Main/Posts/MountPosts/mount_posts.css\";\nimport \"./Header/Nav/Menu/menu.css\";\nimport \"./Parts/Friends/FriendsList/friendslist.css\";\nimport \"./SubApps/Chat/chat.css\";\nimport \"./Main/Terminology/terminology.css\";\nimport \"./Main/Greeting/greeting.css\";\nimport { Route } from \"react-router-dom\";\nimport Terminology from \"./Main/Terminology/Terminology\";\nimport Posts from \"./Main/Posts/Posts\";\nimport Greeting from \"./Main/Greeting/Greeting\";\nimport SearchPosts from \"./Main/Posts/InputPost/SearchPosts/SearchPosts\";\nimport Header from \"./Header/Header\";\nimport Chat from \"./SubApps/Chat/Chat\";\n// import Study from \"./SubApps/StudyPlannner/components/Study/Study\";\nimport SchoolPlanner from \"./SubApps/StudyPlannner/components/SchoolPlanner/SchoolPlanner\";\nimport axios from \"axios\";\n//...........component..................\nclass App extends React.Component {\n  //..........states...........\n  constructor(props) {\n    super(props);\n    this.state = {\n      my_id: JSON.parse(sessionStorage.getItem(\"state\")).my_id,\n      username: JSON.parse(sessionStorage.getItem(\"state\")).username,\n      firstname: JSON.parse(sessionStorage.getItem(\"state\")).firstname,\n      lastname: JSON.parse(sessionStorage.getItem(\"state\")).lastname,\n      dob: JSON.parse(sessionStorage.getItem(\"state\")).dob,\n      token: JSON.parse(sessionStorage.getItem(\"state\")).token,\n      isConnected: true,\n      isOnline: false,\n      friends: JSON.parse(sessionStorage.getItem(\"state\")).friends,\n      chat: [],\n      terminology: [],\n      posts: JSON.parse(sessionStorage.getItem(\"state\")).posts,\n      lectures: JSON.parse(sessionStorage.getItem(\"state\")).lectures,\n      app_is_loading: false,\n      friend_target: null,\n      server_answer: null,\n      friendID_selected: null,\n      searching_on: false,\n      friendsPosts_retrieved: false,\n      retrievingFriendsPosts_DONE: false,\n      retrievingTerminology_DONE: false,\n      retrievingStudySessions_DONE: false,\n      notifications: [],\n      timer: {\n        hours: 0,\n        mins: 0,\n        secs: 0,\n      },\n      study_session: null,\n      profile: false,\n      friendAddedSuccessfully: null,\n      posts_updated: false,\n      posts_deleted: false,\n      image: null,\n    };\n  }\n  ////////////////////////////////////////Variables//////////////\n  // posts = [];\n  // lectures = [];\n  memory = {\n    courses: [],\n  };\n  /////////////////////////////////////////////////////Lifecycle//////////////////////////\n  componentDidMount() {\n    console.log(this.state.my_id);\n    this.setState({\n      my_id: JSON.parse(sessionStorage.getItem(\"state\")).my_id,\n      username: JSON.parse(sessionStorage.getItem(\"state\")).username,\n      firstname: JSON.parse(sessionStorage.getItem(\"state\")).firstname,\n      lastname: JSON.parse(sessionStorage.getItem(\"state\")).lastname,\n      dob: JSON.parse(sessionStorage.getItem(\"state\")).dob,\n      token: JSON.parse(sessionStorage.getItem(\"state\")).token,\n    });\n    this.updateUserInfo();\n  }\n\n  componentDidUpdate() {\n    this.buildNotifications();\n  }\n  componentWillUnmount() {\n    // if (this.props.path === \"/study\") {\n    //   let input = window.confirm(\n    //     \"Do you want this study session to be counted?\"\n    //   );\n    //   if (input) this.updateBeforeLeave();\n    // }\n    // if (this.props.path === \"/\") {\n    //   this.availableToChat(false);\n    // }\n  }\n\n  //......MAKE YOURSELF AVAILABLE TO CHAT......\n  availableToChat = (isConnected) => {\n    let url =\n      \"https://backendstep.onrender.com/api/user/isOnline/\" + this.state.my_id;\n    let options = {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        isConnected: isConnected,\n      }),\n    };\n\n    let req = new Request(url, options);\n    fetch(req)\n      .then((response) => {\n        if (response.status === 201 && this.state.isConnected === false) {\n          sessionStorage.removeItem(\"Header_timer_h1\");\n          sessionStorage.removeItem(\"state\");\n          window.location.reload();\n          return response.json();\n        }\n      })\n      .catch((err) => {\n        console.log(\"error:\", err.message);\n      });\n  };\n\n  //......END OF MAKE YOURSELF AVAILABLE TO CHAT......\n\n  //............................................Retrieving Area..........................................................................\n  posts_alreadyBuilt = [];\n  posts_comments = [];\n  BuildingPosts = () => {\n    console.log(this.state.posts_alreadyBuilt);\n    let ul = document.getElementById(\"MountPosts_content_container\");\n    // if (this.state.posts.length > 0) {\n    //   this.state.posts.sort((a, b) => {\n    //     return new Date(b.date) - new Date(a.date);\n    //   });\n    // }\n    for (var i = 0; i < this.state.posts.length; i++) {\n      console.log(this.state.posts);\n      if (\n        this.state.posts[i]._id !== this.state.posts_alreadyBuilt[i] ||\n        (this.state.posts[i]._id === this.state.posts_alreadyBuilt[i] &&\n          this.state.posts[i].comments.length !==\n            this.state.posts_comments[i]) ||\n        this.state.posts_deleted\n      ) {\n        if (\n          this.state.posts[i]._id === this.state.posts_alreadyBuilt[i] &&\n          this.state.posts[i].comments.length !== this.state.posts_comments[i]\n        ) {\n          let commentlist_ul = document.getElementById(\n            \"commentlist_ul\" + this.state.posts[i]._id\n          );\n          if (this.state.posts[i].comments.length === 1) {\n            let commentlist_ul = document.createElement(\"ul\");\n            commentlist_ul.setAttribute(\n              \"id\",\n              \"commentlist_ul\" + this.state.posts[i]._id\n            );\n            commentlist_ul.setAttribute(\"class\", \"fc commentlist_ul\");\n            let comments_div = document.getElementById(\n              \"commentDiv\" + this.state.posts[i]._id\n            );\n            let li = document.createElement(\"li\");\n            li.setAttribute(\"class\", \"comment_li\");\n            li.textContent =\n              this.state.posts[i].comments[\n                this.state.posts[i].comments.length - 1\n              ];\n            commentlist_ul.prepend(li);\n            comments_div.appendChild(commentlist_ul);\n            this.state.posts_comments[i] = this.state.posts[i].comments.length;\n          } else {\n            let li = document.createElement(\"li\");\n            li.setAttribute(\"class\", \"comment_li\");\n            li.textContent =\n              this.state.posts[i].comments[\n                this.state.posts[i].comments.length - 1\n              ];\n            commentlist_ul.prepend(li);\n            this.state.posts_comments[i] = this.state.posts[i].comments.length;\n          }\n        } else {\n          this.setState({\n            app_is_loading: true,\n          });\n          let date_p = document.createElement(\"p\");\n          let category_p = document.createElement(\"p\");\n          let subject_p = document.createElement(\"p\");\n          let reference_p = document.createElement(\"p\");\n          let page_p = document.createElement(\"p\");\n          let li = document.createElement(\"li\");\n          let details_div = document.createElement(\"div\");\n          let note_options_div = document.createElement(\"div\");\n          //.............................comments.......................\n\n          //............date.................................\n          let date = this.state.posts[i].date;\n          let date_timezone = new Date(date);\n          let date_string = date_timezone.toDateString();\n          let time_string = date_timezone.toLocaleTimeString();\n          //.............................................\n          //...............................note..................................\n          let note_p = document.createElement(\"p\");\n          note_p.textContent = this.state.posts[i].note;\n          note_p.setAttribute(\"class\", \"note_p\");\n          note_options_div.setAttribute(\"class\", \"fr note_options_div\");\n          note_options_div.setAttribute(\"id\", \"note_options_div\" + i);\n          note_options_div.appendChild(note_p);\n          //.......................Options....................................\n          let options_div = document.createElement(\"div\");\n          //............................Poster name.......................\n          let postername_p = document.createElement(\"p\");\n          postername_p.setAttribute(\"class\", \"postername_p\");\n          details_div.appendChild(postername_p);\n          //..................................\n\n          if (this.state.posts[i].id === this.state.my_id) {\n            postername_p.textContent = \"Mine\";\n            let p_delete = document.createElement(\"p\");\n            let p_edit = document.createElement(\"p\");\n            p_delete.style.cursor = \"pointer\";\n            p_edit.style.cursor = \"pointer\";\n            p_delete.textContent = \"Delete\";\n            p_edit.textContent = \"Edit\";\n            options_div.appendChild(p_delete);\n            options_div.appendChild(p_edit);\n            p_delete.addEventListener(\"click\", () => {\n              this.deletePost(options_div.id);\n            });\n\n            p_edit.addEventListener(\"click\", () =>\n              this.editPost(options_div.id)\n            );\n            note_options_div.appendChild(options_div);\n            options_div.setAttribute(\n              \"class\",\n              \"fc MountPosts_postOptionsContainer\"\n            );\n            options_div.setAttribute(\"id\", this.state.posts[i]._id);\n          } else {\n            postername_p.textContent =\n              this.state.posts[i].firstname +\n              \" \" +\n              this.state.posts[i].lastname;\n          }\n          //........................................................................\n\n          //.....................................................................\n          li.className = \"fc\";\n\n          date_p.innerHTML =\n            \"<i class='far fa-clock'></i>\" +\n            \"  \" +\n            date_string +\n            \", \" +\n            time_string;\n          category_p.textContent = \"System: \" + this.state.posts[i].category;\n          subject_p.textContent = \"Discipline: \" + this.state.posts[i].subject;\n          reference_p.textContent =\n            \"Reference: \" + this.state.posts[i].reference;\n          page_p.textContent = \"Page #: \" + this.state.posts[i].page_num;\n          date_p.className = \"MountPosts_date\";\n          details_div.appendChild(date_p);\n          details_div.appendChild(category_p);\n          details_div.appendChild(subject_p);\n          details_div.setAttribute(\"class\", \"fr details_div\");\n          //...................comments...............\n          let comments_div = document.createElement(\"div\");\n          let comment_input = document.createElement(\"input\");\n          let commentlist_ul = document.createElement(\"ul\");\n          comments_div.appendChild(comment_input);\n          comments_div.setAttribute(\"class\", \"fc comments_div\");\n          comments_div.setAttribute(\n            \"id\",\n            \"commentDiv\" + this.state.posts[i]._id\n          );\n          comment_input.setAttribute(\n            \"id\",\n            \"comment_input\" + this.state.posts[i]._id\n          );\n          comment_input.setAttribute(\"class\", \"comment_input\");\n          commentlist_ul.setAttribute(\n            \"id\",\n            \"commentlist_ul\" + this.state.posts[i]._id\n          );\n          comment_input.setAttribute(\"placeholder\", \"Enter a comment\");\n          comment_input.addEventListener(\"keypress\", (event) => {\n            this.postComment(event, comments_div.id, comment_input.id);\n          });\n          this.state.posts[i].comments.forEach((comment) => {\n            let comment_li = document.createElement(\"li\");\n            comment_li.textContent = comment;\n            comment_li.setAttribute(\"class\", \"comment_li\");\n            commentlist_ul.setAttribute(\"class\", \"fc commentlist_ul\");\n            commentlist_ul.prepend(comment_li);\n            comments_div.appendChild(commentlist_ul);\n          });\n          //.....................................................\n\n          if (\n            !(\n              this.state.posts[i].reference === \"\" &&\n              this.state.posts[i].page_num !== null\n            )\n          ) {\n            if (this.state.posts[i].reference !== \"\")\n              details_div.appendChild(reference_p);\n            if (this.state.posts[i].page_num !== null)\n              details_div.appendChild(page_p);\n          }\n          li.setAttribute(\"id\", \"li\" + this.state.posts[i]._id);\n          li.appendChild(details_div);\n          li.appendChild(note_options_div);\n          li.appendChild(comments_div);\n          ul.appendChild(li);\n          this.state.posts_alreadyBuilt[i] = this.state.posts[i]._id;\n          this.state.posts_comments[i] = this.state.posts[i].comments.length;\n          this.setState({\n            app_is_loading: false,\n            //   posts_updated: true,\n          });\n        }\n      }\n\n      // if (this.state.posts.length < this.state.posts_alreadyBuilt.length) {\n      //   this.state.posts_alreadyBuilt = [];\n      //   ul.innerHTML = \"\";\n      // }\n    }\n  };\n  //////////////////////////// Profile///////////////////////////////////////////////\n  profilePosts = [];\n  BuildingPostsProfile = () => {\n    let ul = document.getElementById(\"MountPosts_content_container\");\n    for (var i = 0; i < this.state.posts.length; i++) {\n      if (this.state.posts[i].id === this.state.my_id) {\n        if (this.state.posts.length >= this.profilePosts.length) {\n          if (this.state.posts[i]._id !== this.profilePosts[i]) {\n            if (\n              this.state.posts[i]._id === this.profilePosts[i] &&\n              this.state.posts[i].comments.length !==\n                this.state.posts_comments[i]\n            ) {\n              let commentlist_ul = document.getElementById(\n                \"commentlist_ul\" + this.state.posts[i]._id\n              );\n              if (this.state.posts[i].comments.length === 1) {\n                let commentlist_ul = document.createElement(\"ul\");\n                commentlist_ul.setAttribute(\n                  \"id\",\n                  \"commentlist_ul\" + this.state.posts[i]._id\n                );\n                commentlist_ul.setAttribute(\"class\", \"fc commentlist_ul\");\n                let comments_div = document.getElementById(\n                  \"commentDiv\" + this.state.posts[i]._id\n                );\n                let li = document.createElement(\"li\");\n                li.setAttribute(\"class\", \"comment_li\");\n                li.textContent =\n                  this.state.posts[i].comments[\n                    this.state.posts[i].comments.length - 1\n                  ];\n                commentlist_ul.prepend(li);\n                comments_div.appendChild(commentlist_ul);\n                this.state.posts_comments[i] =\n                  this.state.posts[i].comments.length;\n              } else {\n                let li = document.createElement(\"li\");\n                li.setAttribute(\"class\", \"comment_li\");\n                li.textContent =\n                  this.state.posts[i].comments[\n                    this.state.posts[i].comments.length - 1\n                  ];\n                commentlist_ul.prepend(li);\n                this.state.posts_comments[i] =\n                  this.state.posts[i].comments.length;\n              }\n            } else {\n              this.setState({\n                app_is_loading: true,\n              });\n              let date_p = document.createElement(\"p\");\n              let category_p = document.createElement(\"p\");\n              let subject_p = document.createElement(\"p\");\n              let reference_p = document.createElement(\"p\");\n              let page_p = document.createElement(\"p\");\n              let li = document.createElement(\"li\");\n              let details_div = document.createElement(\"div\");\n              let note_options_div = document.createElement(\"div\");\n              //.............................comments.......................\n\n              //............date.................................\n              let date = this.state.posts[i].date;\n              let date_timezone = new Date(date);\n              let date_string = date_timezone.toDateString();\n              let time_string = date_timezone.toLocaleTimeString();\n              //.............................................\n              //...............................note..................................\n              let note_p = document.createElement(\"p\");\n              note_p.textContent = this.state.posts[i].note;\n              note_p.setAttribute(\"class\", \"note_p\");\n              note_options_div.setAttribute(\"class\", \"fr note_options_div\");\n              note_options_div.setAttribute(\"id\", \"note_options_div\" + i);\n              note_options_div.appendChild(note_p);\n              //.......................Options....................................\n              let options_div = document.createElement(\"div\");\n              options_div.setAttribute(\"class\", \"options_div\");\n              //............................Poster name.......................\n              let postername_p = document.createElement(\"p\");\n              postername_p.setAttribute(\"class\", \"postername_p\");\n              details_div.appendChild(postername_p);\n              //..................................\n\n              postername_p.textContent = \"Mine\";\n              let p_delete = document.createElement(\"p\");\n              let p_edit = document.createElement(\"p\");\n              p_delete.style.cursor = \"pointer\";\n              p_edit.style.cursor = \"pointer\";\n              p_delete.textContent = \"Delete\";\n              p_edit.textContent = \"Edit\";\n              options_div.appendChild(p_delete);\n              options_div.appendChild(p_edit);\n              p_delete.addEventListener(\"click\", () =>\n                this.deletePost(options_div.id)\n              );\n              p_edit.addEventListener(\"click\", () =>\n                this.editPost(options_div.id)\n              );\n              note_options_div.appendChild(options_div);\n              options_div.setAttribute(\n                \"class\",\n                \"fc MountPosts_postOptionsContainer\"\n              );\n              options_div.setAttribute(\"id\", this.state.posts[i]._id);\n\n              //........................................................................\n\n              //.....................................................................\n              li.className = \"fc\";\n\n              date_p.innerHTML =\n                \"<i class='far fa-clock'></i>\" +\n                \"  \" +\n                date_string +\n                \", \" +\n                time_string;\n              category_p.textContent =\n                \"Category: \" + this.state.posts[i].category;\n              subject_p.textContent = \"Subject: \" + this.state.posts[i].subject;\n              reference_p.textContent =\n                \"Reference: \" + this.state.posts[i].reference;\n              page_p.textContent = \"Page #: \" + this.state.posts[i].page_num;\n              date_p.className = \"MountPosts_date\";\n              details_div.appendChild(date_p);\n              details_div.appendChild(category_p);\n              details_div.appendChild(subject_p);\n              details_div.setAttribute(\"class\", \"fr details_div\");\n              //...................comments...............\n              let comments_div = document.createElement(\"div\");\n              let comment_input = document.createElement(\"input\");\n              let commentlist_ul = document.createElement(\"ul\");\n              comments_div.appendChild(comment_input);\n              comments_div.setAttribute(\"class\", \"fc comments_div\");\n              comments_div.setAttribute(\n                \"id\",\n                \"commentDiv\" + this.state.posts[i]._id\n              );\n              comment_input.setAttribute(\n                \"id\",\n                \"comment_input\" + this.state.posts[i]._id\n              );\n              comment_input.setAttribute(\"class\", \"comment_input\");\n              commentlist_ul.setAttribute(\n                \"id\",\n                \"commentlist_ul\" + this.state.posts[i]._id\n              );\n              comment_input.setAttribute(\"placeholder\", \"Enter a comment\");\n              comment_input.addEventListener(\"keypress\", (event) => {\n                this.postComment(event, comments_div.id, comment_input.id);\n              });\n              this.state.posts[i].comments.forEach((comment) => {\n                let comment_li = document.createElement(\"li\");\n                comment_li.textContent = comment;\n                comment_li.setAttribute(\"class\", \"comment_li\");\n                commentlist_ul.setAttribute(\"class\", \"fc commentlist_ul\");\n                commentlist_ul.prepend(comment_li);\n                comments_div.appendChild(commentlist_ul);\n              });\n              //.....................................................\n\n              if (\n                !(\n                  this.state.posts[i].reference === \"\" &&\n                  this.state.posts[i].page_num !== null\n                )\n              ) {\n                if (this.state.posts[i].reference !== \"\")\n                  details_div.appendChild(reference_p);\n                if (this.state.posts[i].page_num !== null)\n                  details_div.appendChild(page_p);\n              }\n              li.setAttribute(\"id\", \"li\" + this.state.posts[i]._id);\n              li.appendChild(details_div);\n              li.appendChild(note_options_div);\n              li.appendChild(comments_div);\n              ul.prepend(li);\n              this.profilePosts[i] = this.state.posts[i]._id;\n              // this.state.posts_comments[i] = this.state.posts[i].comments.length;\n              this.setState({\n                app_is_loading: false,\n              });\n            }\n          }\n        }\n        // if (this.state.posts.length < this.state.posts_alreadyBuilt.length) {\n        //   this.state.posts_alreadyBuilt = [];\n        //   ul.innerHTML = \"\";\n        // }\n      }\n    }\n    if (this.profilePosts.length === 0) {\n    }\n  };\n  ////////////////////////// RetrievingMyStudySessions////////////////////////////////\n  RetrievingMyStudySessions = () => {\n    let secs_sessionInworking = 0;\n    let mins_sessionInworking = 0;\n    let hours_sessionInworking = 0;\n    let total_hours = 0;\n    let total_mins = 0;\n    let total_secs = 0;\n    let secs_totalInworking = 0;\n    let mins_totalInworking = 0;\n\n    // document.getElementById(\"Posts_studySessions_area\").innerHTML = \"\";\n    // && ul to fix unknown problem\n    if (this.state.study_session) {\n      for (var i = 0; i < this.state.study_session.length; i++) {\n        let ul = document.getElementById(\"Greeting_studySessions_area\");\n        let p1 = document.createElement(\"p\");\n        let p2 = document.createElement(\"p\");\n        let li = document.createElement(\"li\");\n        let div = document.createElement(\"div\");\n\n        //............date.................................\n        let date = this.state.study_session[i].date;\n        let date_timezone = new Date(date);\n        let date_string = date_timezone.toDateString();\n\n        //.............................................\n        secs_sessionInworking = this.state.study_session[i].length.secs;\n        mins_sessionInworking = this.state.study_session[i].length.mins;\n        hours_sessionInworking = this.state.study_session[i].length.hours;\n        if (\n          secs_sessionInworking < 10 ||\n          mins_sessionInworking < 10 ||\n          hours_sessionInworking < 10\n        ) {\n          if (secs_sessionInworking < 10)\n            secs_sessionInworking = \"0\" + secs_sessionInworking;\n          if (mins_sessionInworking < 10)\n            mins_sessionInworking = \"0\" + mins_sessionInworking;\n          if (hours_sessionInworking < 10)\n            hours_sessionInworking = \"0\" + hours_sessionInworking;\n        }\n        li.className = \"fc\";\n        p1.textContent = \"On \" + date_string;\n        p2.textContent =\n          \"Duration: \" +\n          hours_sessionInworking +\n          \":\" +\n          mins_sessionInworking +\n          \":\" +\n          secs_sessionInworking;\n        div.appendChild(p1);\n        div.appendChild(p2);\n\n        li.appendChild(div);\n        ul.prepend(li);\n        total_hours = total_hours + this.state.study_session[i].length.hours;\n        total_mins = total_mins + this.state.study_session[i].length.mins;\n        total_secs = total_secs + this.state.study_session[i].length.secs;\n        secs_totalInworking = total_secs;\n        mins_totalInworking = total_mins;\n      }\n      for (i = 0; secs_totalInworking >= 60; i++) {\n        secs_totalInworking--;\n        if (secs_totalInworking % 60 === 0) {\n          total_mins++;\n          total_secs = total_secs - 60;\n        }\n      }\n      for (i = 0; mins_totalInworking >= 60; i++) {\n        mins_totalInworking--;\n        if (mins_totalInworking % 60 === 0) {\n          total_hours++;\n          total_mins = total_mins - 60;\n        }\n      }\n      if (total_secs < 10 || total_mins < 10 || total_hours < 10) {\n        if (total_secs < 10) total_secs = \"0\" + total_secs;\n        if (total_mins < 10) total_mins = \"0\" + total_mins;\n        if (total_hours < 10) total_hours = \"0\" + total_hours;\n      }\n      let li = document.getElementById(\"Greeting_totalDuration_li\");\n      let p = document.createElement(\"p\");\n      p.style.fontWeight = \"600\";\n      p.style.padding = \"10px\";\n\n      p.textContent =\n        \"Total duration: \" + total_hours + \":\" + total_mins + \":\" + total_secs;\n      li.appendChild(p);\n\n      this.setState({\n        retrievingStudySessions_DONE: true,\n      });\n    }\n  };\n\n  ///////////////////////////Retrieving terminology//////////////////////////\n  RetrievingTerminology = () => {\n    if (this.state.terminology) {\n      this.state.terminology.forEach((term) => {\n        let ul = document.getElementById(\"Terminology_content_container\");\n        let p1 = document.createElement(\"p\");\n        let p2 = document.createElement(\"p\");\n        let p3 = document.createElement(\"p\");\n        let p4 = document.createElement(\"p\");\n        let p5 = document.createElement(\"p\");\n        let p6 = document.createElement(\"p\");\n        let li = document.createElement(\"li\");\n        p1.textContent = term.term;\n        p1.style.fontSize = \"16pt\";\n        p1.style.textAlign = \"center\";\n        p1.style.backgroundColor = \"var(--white)\";\n        p1.style.color = \"var(--black)\";\n        p2.textContent = term.meaning;\n        p2.style.fontSize = \"14pt\";\n        p3.textContent = term.category;\n        p3.style.fontSize = \"10pt\";\n        p3.style.textAlign = \"right\";\n        p4.textContent = term.subject;\n        p4.style.fontSize = \"10pt\";\n        p4.style.textAlign = \"right\";\n        p5.textContent = \"Delete\";\n        p5.style.backgroundColor = \"var(--red)\";\n        p5.style.width = \"fit-content\";\n        p5.style.padding = \"0 5px\";\n        p5.style.cursor = \"pointer\";\n        p5.addEventListener(\"click\", () => {\n          this.deleteTerminology(term._id);\n        });\n        p6.textContent = \"Edit\";\n        p6.style.backgroundColor = \"var(--red)\";\n        p6.style.width = \"fit-content\";\n        p6.style.padding = \"0 5px\";\n        p6.style.marginTop = \"5px\";\n\n        p6.style.cursor = \"pointer\";\n        p6.addEventListener(\"click\", () => {\n          this.editTerminology(term._id);\n        });\n        li.appendChild(p1);\n        li.appendChild(p2);\n        li.appendChild(p3);\n        li.appendChild(p4);\n        li.appendChild(p5);\n        li.appendChild(p6);\n        li.setAttribute(\"id\", \"li_term\" + term._id);\n        ul.prepend(li);\n      });\n      this.setState({\n        retrievingTerminology_DONE: true,\n      });\n    }\n  };\n  ////////////////////////////Delete terminology////////////////////////////\n  deleteTerminology = (term_id) => {\n    let url =\n      \"https://backendstep.onrender.com/api/user/deleteTerminology/\" +\n      term_id +\n      \"/\" +\n      this.state.my_id;\n    let options = {\n      method: \"DELETE\",\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Bearer \" + this.state.token,\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    let req = new Request(url, options);\n    fetch(req).then((response) => {\n      if (response.status === 201) {\n        document.getElementById(\"li_term\" + term_id).remove();\n        this.serverReply(\"term deleted\");\n      } else {\n        this.serverReply(\"delete failed\");\n      }\n    });\n  };\n  ////////////////////////////Edit terminology////////////////////////////\n  termIsEditing = false;\n  termIdSelected;\n  editEvenCounter = -1;\n  editTerminology = (term_id) => {\n    this.editEvenCounter++;\n    if (this.editEvenCounter % 2 === 0) {\n      this.termIdSelected = term_id;\n      this.termIsEditing = true;\n      document.getElementById(\"Terminology_term\").value =\n        document.getElementById(\"li_term\" + term_id).children[0].textContent;\n      document.getElementById(\"Terminology_meaning\").value =\n        document.getElementById(\"li_term\" + term_id).children[1].textContent;\n      document.getElementById(\"Terminology_category\").value =\n        document.getElementById(\"li_term\" + term_id).children[2].textContent;\n      document.getElementById(\"Terminology_subject\").value =\n        document.getElementById(\"li_term\" + term_id).children[3].textContent;\n      //.........................\n      document.getElementById(\"Terminology_inputs_container\").style.display =\n        \"flex\";\n      document.getElementById(\"Terminology_control_icon_close\").style.display =\n        \"inline\";\n      document.getElementById(\"Terminology_control_icon_open\").style.display =\n        \"none\";\n      document.getElementById(\"li_term\" + term_id).children[5].textContent =\n        \"Cancel?\";\n      document.getElementById(\n        \"li_term\" + term_id\n      ).children[5].style.backgroundColor = \"var(--black)\";\n      document.getElementById(\"Terminology_post_button\").textContent = \"Edit\";\n      //.......\n    } else {\n      this.termIsEditing = false;\n      document.getElementById(\"Terminology_inputs_container\").style.display =\n        \"none\";\n      document.getElementById(\"Terminology_control_icon_close\").style.display =\n        \"none\";\n      document.getElementById(\"Terminology_control_icon_open\").style.display =\n        \"inline\";\n      //...........\n      document.getElementById(\n        \"li_term\" + term_id\n      ).children[5].style.backgroundColor = \"var(--red)\";\n      document.getElementById(\"li_term\" + term_id).children[5].textContent =\n        \"Edit\";\n      document.getElementById(\"Terminology_post_button\").textContent = \"Post\";\n      //.......\n      document.getElementById(\"Terminology_term\").value = \"\";\n      document.getElementById(\"Terminology_meaning\").value = \"\";\n      document.getElementById(\"Terminology_category\").value = \"\";\n      document.getElementById(\"Terminology_subject\").value = \"\";\n    }\n  };\n\n  //................................................................................................\n  ////////////////////////////Posting a terminology////////////////////////\n  postingTerminology = (term, meaning, category, subject) => {\n    if (this.termIsEditing === false) {\n      this.setState({\n        app_is_loading: true,\n      });\n      let url =\n        \"https://backendstep.onrender.com/api/user/newTerminology/\" +\n        this.state.my_id;\n      let options = {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          Authorization: \"Bearer \" + this.state.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          term: term,\n          meaning: meaning,\n          category: category,\n          subject: subject,\n          date: new Date(),\n        }),\n      };\n      let req = new Request(url, options);\n      fetch(req)\n        .then((result) => {\n          if (result.status === 201) {\n            document.getElementById(\"Terminology_term\").value = \"\";\n            document.getElementById(\"Terminology_meaning\").value = \"\";\n            document.getElementById(\"Terminology_category\").value = \"\";\n            document.getElementById(\"Terminology_subject\").value = \"\";\n            this.serverReply(\"Posted successfully!\");\n          } else {\n            this.serverReply(\n              \"Posting failed. Please make sure you select a category and/or a subject for your note\"\n            );\n            this.setState({\n              app_is_loading: false,\n            });\n          }\n          return result.json();\n        })\n        .then((result) => {\n          if (result) {\n            let ul = document.getElementById(\"Terminology_content_container\");\n            let p1 = document.createElement(\"p\");\n            let p2 = document.createElement(\"p\");\n            let p3 = document.createElement(\"p\");\n            let p4 = document.createElement(\"p\");\n            let p5 = document.createElement(\"p\");\n            let p6 = document.createElement(\"p\");\n            let li = document.createElement(\"li\");\n\n            // //.............................................\n            // let date = result.date;\n            // let date_timezone = new Date(date);\n            // let date_string = date_timezone.toDateString();\n            // let time_string = date_timezone.toLocaleTimeString();\n            // p2.textContent =\n            //   \"Posted on: \" + date_string + \", \" + \"at: \" + time_string;\n            // //.............................................\n            p1.textContent = result.term;\n            p1.style.fontSize = \"16pt\";\n            p1.style.textAlign = \"center\";\n            p1.style.backgroundColor = \"var(--white)\";\n            p1.style.color = \"var(--black)\";\n            p2.textContent = result.meaning;\n            p2.style.fontSize = \"14pt\";\n            p3.textContent = result.category;\n            p3.style.fontSize = \"10pt\";\n            p3.style.textAlign = \"right\";\n            p4.textContent = result.subject;\n            p4.style.fontSize = \"10pt\";\n            p4.style.textAlign = \"right\";\n            p5.textContent = \"Delete\";\n            p5.style.backgroundColor = \"var(--red)\";\n            p5.style.width = \"fit-content\";\n            p5.style.padding = \"0 5px\";\n            p5.style.cursor = \"pointer\";\n            p5.addEventListener(\"click\", () => {\n              this.deleteTerminology(result._id);\n            });\n            p6.textContent = \"Edit\";\n            p6.style.backgroundColor = \"var(--red)\";\n            p6.style.width = \"fit-content\";\n            p6.style.padding = \"0 5px\";\n            p6.style.marginTop = \"5px\";\n            p6.style.cursor = \"pointer\";\n            p6.addEventListener(\"click\", () => {\n              this.editTerminology(result._id);\n            });\n            li.setAttribute(\"id\", \"li_term\" + result._id);\n            li.appendChild(p1);\n            li.appendChild(p2);\n            li.appendChild(p3);\n            li.appendChild(p4);\n            li.appendChild(p5);\n            li.appendChild(p6);\n            li.setAttribute(\"id\", \"li_term\" + result._id);\n\n            ul.prepend(li);\n            //...................................\n            this.setState({\n              app_is_loading: false,\n              retrievingTerminology_DONE: true,\n            });\n          }\n        });\n    } else {\n      let url =\n        \"https://backendstep.onrender.com/api/user/editTerminology/\" +\n        this.termIdSelected +\n        \"/\" +\n        this.state.my_id;\n      let options = {\n        method: \"PUT\",\n        mode: \"cors\",\n        headers: {\n          Authorization: \"Bearer \" + this.state.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          term: document.getElementById(\"Terminology_term\").value,\n          meaning: document.getElementById(\"Terminology_meaning\").value,\n          category: document.getElementById(\"Terminology_category\").value,\n          subject: document.getElementById(\"Terminology_subject\").value,\n          date: new Date(),\n        }),\n      };\n      let req = new Request(url, options);\n      fetch(req)\n        .then((response) => {\n          if (response.status === 201) {\n            this.enableEditPost = false;\n            document.getElementById(\"Terminology_post_button\").textContent =\n              \"Post\";\n\n            document.getElementById(\n              \"li_term\" + this.termIdSelected\n            ).children[0].textContent =\n              document.getElementById(\"Terminology_term\").value;\n            document.getElementById(\n              \"li_term\" + this.termIdSelected\n            ).children[1].textContent = document.getElementById(\n              \"Terminology_meaning\"\n            ).value;\n            document.getElementById(\n              \"li_term\" + this.termIdSelected\n            ).children[2].textContent = document.getElementById(\n              \"Terminology_category\"\n            ).value;\n            document.getElementById(\n              \"li_term\" + this.termIdSelected\n            ).children[3].textContent = document.getElementById(\n              \"Terminology_subject\"\n            ).value;\n            document.getElementById(\n              \"li_term\" + this.termIdSelected\n            ).children[5].textContent = \"Edit\";\n            document.getElementById(\n              \"li_term\" + this.termIdSelected\n            ).children[5].style.backgroundColor = \"var(--red)\";\n            this.serverReply(\"term modified\");\n          } else {\n            this.serverReply(\n              \"modifying failed. Please make sure you select a category and/or a subject for your note\"\n            );\n          }\n        })\n        .then(() => {\n          document.getElementById(\"Terminology_term\").value = \"\";\n          document.getElementById(\"Terminology_meaning\").value = \"\";\n          document.getElementById(\"Terminology_category\").value = \"\";\n          document.getElementById(\"Terminology_subject\").value = \"\";\n          this.termIsEditing = false;\n        });\n    }\n  };\n\n  ////////////////////////////////Edit Post///////////////////////////////////////////\n  enableEditPost = false;\n  targetIDEditPost;\n  editPostControlCounter = -1;\n  editPost = (post_id) => {\n    this.editPostControlCounter++;\n    if (this.editPostControlCounter % 2 === 0) {\n      this.targetIDEditPost = post_id;\n      this.state.posts.forEach((post) => {\n        if (post._id === post_id) {\n          document.getElementById(\"InputPost_textarea\").value = post.note;\n          document.getElementById(\"InputPost_category\").value = post.category;\n          document.getElementById(\"InputPost_subject\").value = post.subject;\n          document.getElementById(\"InputPost_resourse\").value = post.reference;\n          document.getElementById(\"InputPost_page\").value = post.page_num;\n          this.enableEditPost = true;\n          document.getElementById(\"InputPost_post_button\").innerHTML = \"Edit\";\n          document.getElementById(post_id).children[1].textContent = \"Cancel?\";\n          document.getElementById(post_id).children[1].style.backgroundColor =\n            \"var(--black)\";\n        }\n      });\n    } else {\n      document.getElementById(\"InputPost_textarea\").value = \"\";\n      document.getElementById(\"InputPost_category\").value = \"\";\n      document.getElementById(\"InputPost_subject\").value = \"\";\n      document.getElementById(\"InputPost_resourse\").value = \"\";\n      document.getElementById(\"InputPost_page\").value = \"\";\n      this.enableEditPost = false;\n      document.getElementById(\"InputPost_post_button\").innerHTML = \"Post\";\n      document.getElementById(post_id).children[1].style.backgroundColor =\n        \"var(--red)\";\n      document.getElementById(post_id).children[1].textContent = \"Edit\";\n    }\n  };\n  ////////////////////////Post Comment/////////////////////////////\n  postComment = (event, post_id, input_id) => {\n    if (event.which === 13) {\n      let url =\n        \"https://backendstep.onrender.com/api/posts/commentPost/\" +\n        post_id.slice(10, post_id.length) +\n        \"/\" +\n        document.getElementById(input_id).value;\n      let options = {\n        method: \"PUT\",\n        mode: \"cors\",\n        headers: {\n          Authorization: \"Bearer \" + this.state.token,\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      let req = new Request(url, options);\n      fetch(req).then((response) => {\n        if (response.status === 201) {\n          document.getElementById(input_id).value = \"\";\n          this.serverReply(\"post modified\");\n        } else {\n          this.serverReply(\"modify failed\");\n        }\n      });\n    }\n  };\n  //////////////////////////SEND MESSAGE TO FRIEND'S Chat////////////////////////////////\n  sendToThemMessage = (message) => {\n    let textarea = document.getElementById(\"Chat_textarea_input\");\n    textarea.style.height = \"70px\";\n    if (message && message.trim() !== \"\") {\n      let url =\n        \"https://backendstep.onrender.com/api/chat/sendMessage/\" +\n        this.state.friendID_selected +\n        \"/\" +\n        this.state.my_id;\n      let options = {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          Authorization: \"Bearer \" + this.state.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: document.getElementById(\"Chat_textarea_input\").value,\n        }),\n      };\n      let req = new Request(url, options);\n      fetch(req).then((result) => {\n        if (result.status === 201) {\n          document.getElementById(\"Chat_textarea_input\").value = \"\";\n        }\n      });\n    } else {\n      this.serverReply(\"You can't send an empty message\");\n    }\n  };\n\n  ////////////////////////ACCEPT FRIEND/////////////////////////////////////////////\n\n  acceptFriend = (friend) => {\n    let friend_trim = friend.slice(11, friend.length);\n    document.getElementById(friend_trim).style.backgroundColor = \"var(--black)\";\n    document.getElementById(\"server_answer_message\").textContent = \"Adding ...\";\n    document.getElementById(\"server_answer\").style.width = \"fit-content\";\n    let url =\n      \"https://backendstep.onrender.com/api/user/acceptFriend/\" +\n      this.state.my_id +\n      \"/\" +\n      friend_trim;\n    let options = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Bearer \" + this.state.token,\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    let req = new Request(url, options);\n    fetch(req).then((response) => {\n      if (response.status === 201) {\n        document.getElementById(\"server_answer_message\").textContent =\n          \"You're now friends!\";\n\n        let url =\n          \"https://backendstep.onrender.com/api/user/editUserInfo/\" +\n          this.state.my_id +\n          \"/\" +\n          friend_trim;\n        let options = {\n          method: \"PUT\",\n          mode: \"cors\",\n          headers: {\n            Authorization: \"Bearer \" + this.state.token,\n            \"Content-Type\": \"application/json\",\n          },\n        };\n        let req = new Request(url, options);\n        fetch(req).then((response) => {\n          if (response.ok) {\n            setTimeout(() => {\n              document.getElementById(\"server_answer\").style.width = \"0\";\n              document.getElementById(\"server_answer_message\").textContent = \"\";\n            }, 5000);\n            document.getElementById(friend_trim).parentElement.style.display =\n              \"none\";\n          }\n        });\n      }\n      if (response.status === 409) {\n        document.getElementById(\"server_answer_message\").textContent =\n          \"You're already friends!\";\n        setTimeout(() => {\n          document.getElementById(\"server_answer\").style.width = \"0\";\n          document.getElementById(\"server_answer_message\").textContent = \"\";\n        }, 5000);\n        document.getElementById(friend_trim).parentElement.style.display =\n          \"none\";\n      }\n    });\n  };\n  ////////////////////////Decline Request/////////////////////////////////////////////\n\n  makeNotificationsRead = (friend) => {\n    let friend_trim = friend.slice(12, friend.length);\n    alert(friend_trim);\n    let url =\n      \"https://backendstep.onrender.com/api/user/editUserInfo/\" +\n      this.state.my_id +\n      \"/\" +\n      friend_trim;\n\n    let options = {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Bearer \" + this.state.token,\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    let req = new Request(url, options);\n    fetch(req).then((response) => {\n      document.getElementById(friend_trim).style.backgroundColor =\n        \"var(--black)\";\n      if (response.status === 200) {\n        document.getElementById(friend_trim).parentElement.style.display =\n          \"none\";\n        document.getElementById(\"server_answer\").style.width = \"fit-content\";\n        document.getElementById(\"server_answer_message\").textContent = \"Done!\";\n        setTimeout(() => {\n          document.getElementById(\"server_answer\").style.width = \"0\";\n          document.getElementById(\"server_answer_message\").textContent = \"\";\n        }, 5000);\n      }\n    });\n  };\n\n  //////////////////////////////BUILD FRIENDS LIST////////////////\n  app_friends = [];\n\n  buildFriendsList = () => {\n    //...START FETCHING FRIENDS\n    let url =\n      \"https://backendstep.onrender.com/api/user/update/\" + this.state.my_id;\n    let req = new Request(url, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Bearer \" + this.state.token,\n      },\n    });\n    fetch(req)\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n      })\n      .then((jsonData) => {\n        //...END FETCHING FRIENDS\n        let ul = document.getElementById(\"FriendsList_friends_list\");\n\n        for (var i = 0; i < jsonData.friends.length; i++) {\n          this.setState({\n            friends: jsonData.friends,\n          });\n          //For every friend\n          if (this.app_friends[i] !== jsonData.friends[i]._id) {\n            //If a friend is new to the app add it to the friends list with respect to the online status and to the app memory\n            let p = document.createElement(\"p\");\n            let li = document.createElement(\"li\");\n            let icon = document.createElement(\"i\");\n\n            p.textContent =\n              jsonData.friends[i].info.firstname +\n              \" \" +\n              jsonData.friends[i].info.lastname;\n            p.setAttribute(\"id\", [i]);\n            li.appendChild(p);\n            li.setAttribute(\"id\", jsonData.friends[i]._id);\n            li.addEventListener(\"click\", () => {\n              this.get_current_friend_chat_id(li.id);\n\n              document.getElementById(\n                \"DropHorizontally_article\"\n              ).style.display = \"none\";\n            });\n            li.setAttribute(\"class\", \"fr\");\n            li.setAttribute(\"title\", jsonData.friends[i].info.firstname);\n            icon.setAttribute(\"id\", \"online_icon\" + jsonData.friends[i]._id);\n            icon.setAttribute(\"class\", \"fas fa-circle\");\n            li.appendChild(icon);\n            ul.appendChild(li);\n            if (jsonData.friends[i].status.isConnected) {\n              icon.style.color = \"#32cd32\";\n            } else {\n              icon.style.color = \"var(--black)\";\n            }\n            this.app_friends[i] = jsonData.friends[i]._id;\n          }\n          // if (this.app_friends[i] === jsonData.friends[i]._id) {\n          //   // if we already have this friend in the memory app just check their online status and change it\n          //   if (jsonData.friends[i].status.isConnected) {\n          //     document.getElementById(\n          //       \"online_icon\" + jsonData.friends[i]._id\n          //     ).style.color = \"#32cd32\";\n          //   } else {\n          //     document.getElementById(\n          //       \"online_icon\" + jsonData.friends[i]._id\n          //     ).style.color = \"var(--black)\";\n          //   }\n          // }\n        }\n      });\n  };\n\n  ////////////////////////////Select friend id to chat //////////////////////////////////////////////////\n  get_current_friend_chat_id = (friendID) => {\n    this.setState({\n      friendID_selected: friendID,\n    });\n    this.state.friends.forEach((friend) => {\n      if (friend._id === friendID) {\n        document.getElementById(\"Chat_title_text\").textContent =\n          friend.info.firstname;\n      }\n    });\n    document.getElementById(\"Chat_goback_icon\").style.display = \"inline\";\n    document.getElementById(\"Chat_article\").style.height = \"100%\";\n    document.getElementById(\"FriendsList_article\").style.height = \"0\";\n\n    this.RetrievingMySendingMessages(friendID);\n  };\n\n  ///DeleteFriendPost\n  deleteFriendPost = (post_id) => {\n    document.getElementById(\"li\" + post_id).remove();\n  };\n  ////////////////////////////Update State//////////DONE/////////////////////\n  updateUserInfo = () => {\n    let url =\n      \"https://backendstep.onrender.com/api/user/update/\" + this.state.my_id;\n    let req = new Request(url, {\n      method: \"GET\",\n      mode: \"cors\",\n    });\n    fetch(req)\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n      })\n      .then((jsonData) => {\n        this.setState({\n          friends: jsonData.friends,\n          posts: jsonData.posts,\n          chat: jsonData.chat,\n          notifications: jsonData.notifications,\n          terminology: jsonData.terminology,\n          study_session: jsonData.study_session,\n          isOnline: jsonData.isOnline,\n        });\n        for (var i = 0; i < jsonData.SchoolPlanner.courses.length; i++) {\n          this.memory.courses.push(jsonData.SchoolPlanner.courses[i]);\n          console.log(this.memory.courses[i]);\n        }\n      })\n      .catch((err) => {\n        if (err.message === \"Cannot read property 'credentials' of null\")\n          console.log(\"Error\", err.message);\n      });\n  };\n\n  ////////////////////////////////////BUILD NOTIFICATIONS////////////////////////\n  notificaitons_array = [];\n\n  buildNotifications = () => {\n    let ul = document.getElementById(\"Notifications_dropMenu_container\");\n    for (var i = 0; i < this.state.notifications.length; i++) {\n      if (\n        this.state.notifications[i].status !== \"read\" &&\n        this.notificaitons_array[i] !== this.state.notifications[i]._id\n      ) {\n        document.getElementById(\"i_bell_open\").style.color = \"yellow\";\n        let p = document.createElement(\"p\");\n        let li = document.createElement(\"li\");\n        let div = document.createElement(\"div\");\n        let decline_icon = document.createElement(\"i\");\n        let accept_icon = document.createElement(\"i\");\n\n        decline_icon.setAttribute(\"class\", \"fas fa-times\");\n        accept_icon.setAttribute(\"class\", \"fas fa-user-check\");\n        accept_icon.setAttribute(\n          \"id\",\n          \"accept_icon\" + this.state.notifications[i].id\n        );\n        decline_icon.setAttribute(\n          \"id\",\n          \"decline_icon\" + this.state.notifications[i].id\n        );\n        decline_icon.addEventListener(\"click\", () => {\n          this.makeNotificationsRead(decline_icon.id);\n        });\n        accept_icon.addEventListener(\"click\", () => {\n          this.acceptFriend(accept_icon.id);\n        });\n\n        p.textContent = this.state.notifications[i].message;\n        div.setAttribute(\"class\", \"fr\");\n        div.style.justifyContent = \"space-between\";\n        li.setAttribute(\"id\", this.state.notifications[i].id);\n        li.appendChild(p);\n        div.appendChild(li);\n        div.appendChild(decline_icon);\n        div.appendChild(accept_icon);\n        ul.appendChild(div);\n      }\n\n      this.notificaitons_array[i] = this.state.notifications[i]._id;\n    }\n  };\n  ///////////////////////////////////////Counter////////////////////////////////////////////////\n  counter = () => {\n    let secs;\n    let mins;\n    let hours;\n    document.getElementById(\"Posts_content_container\").style.height = \"100%\";\n    // document.getElementById(\"Footer_article\").style.display = \"none\";\n    // document.getElementById(\"SearchPosts_article\").style.display = \"flex\";\n    // document.getElementById(\"Header_timer_h1\").style.display = \"inline\";\n    if (JSON.parse(sessionStorage.getItem(\"Header_timer_h1\"))) {\n      secs = JSON.parse(sessionStorage.getItem(\"Header_timer_h1\")).secs;\n      mins = JSON.parse(sessionStorage.getItem(\"Header_timer_h1\")).mins;\n      hours = JSON.parse(sessionStorage.getItem(\"Header_timer_h1\")).hours;\n    } else {\n      secs = 0;\n      mins = 0;\n      hours = 0;\n    }\n    setInterval(() => {\n      secs++;\n      if (secs % 60 === 0 && secs !== 0) {\n        mins++;\n        secs = 0;\n      }\n      if (mins % 60 === 0 && mins !== 0) {\n        hours++;\n        mins = 0;\n      }\n\n      this.setState({\n        timer: {\n          hours: hours,\n          mins: mins,\n          secs: secs,\n        },\n      });\n    }, 1000);\n  };\n\n  ////////////////////////////////////////////////////UPDATE isConnect on databae////////////////////////////////\n\n  updateBeforeLeave = () => {\n    let url =\n      \"https://backendstep.onrender.com/api/user/updateBeforeLeave/\" +\n      this.state.my_id;\n    let options = {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        study_session: {\n          date: new Date(),\n          length: this.state.timer,\n        },\n      }),\n    };\n\n    let req = new Request(url, options);\n    fetch(req)\n      .then((response) => {\n        if (response.status === 201 && this.state.isConnected === false) {\n          sessionStorage.removeItem(\"Header_timer_h1\");\n          sessionStorage.removeItem(\"state\");\n          window.location.reload();\n          return response.json();\n        } else {\n          throw new Error(\"bad Http\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"error:\", err.message);\n      });\n  };\n\n  //........Server answer..........\n  serverReply = (answer) => {\n    document.getElementById(\"server_answer_message\").textContent = answer;\n\n    document.getElementById(\"server_answer\").style.width = \"fit-content\";\n    setTimeout(() => {\n      document.getElementById(\"server_answer\").style.width = \"0\";\n      document.getElementById(\"server_answer_message\").textContent = \"\";\n    }, 8000);\n  };\n\n  //.....loader function..........\n  loader = () => {\n    return (\n      <div\n        style={{\n          fontSize: \"20pt\",\n          display: \"flex\",\n          position: \"fixed\",\n          top: \"0\",\n          bottom: \"0\",\n\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          flexDirection: \"column\",\n          zIndex: \"100\",\n        }}\n      >\n        <img src=\"/img/loader.gif\" alt=\"\" width=\"70px\" />\n      </div>\n    );\n  };\n\n  /////////////////////////Log out//////////////////////\n  logOut = () => {\n    this.setState({\n      isConnected: false,\n    });\n    if (this.props.path === \"/study\") {\n      let input = window.confirm(\n        \"Do you want this study session to be counted?\"\n      );\n      if (input) {\n        this.updateBeforeLeave();\n      } else {\n        this.dbUpdate_user_connected(false);\n      }\n    }\n    if (this.props.path === \"/\") {\n      this.dbUpdate_user_connected(false);\n    }\n  };\n\n  ///////////////////////Searching in posts////////////////////\n  prepare_searchPosts = (entry1, entry2, entry3) => {\n    let keyword;\n    let subject;\n    let category;\n    if (!entry1) {\n      keyword = \"$\";\n    } else {\n      keyword = entry1;\n    }\n    if (!entry2) {\n      subject = \"$\";\n    } else {\n      subject = entry2;\n    }\n    if (!entry3) {\n      category = \"$\";\n    } else {\n      category = entry3;\n    }\n    this.searchPosts(keyword, subject, category);\n  };\n  searchPosts = (keyword, subject, category) => {\n    let ul = document.getElementById(\"MountPosts_content_container\");\n    let ul_term = document.getElementById(\"Terminology_content_container\");\n    let array = [];\n    let array_term = [];\n    ul.innerHTML = \"\";\n    ul_term.innerHTML = \"\";\n    //..................................\n    this.state.posts.forEach((post) => {\n      if (keyword !== \"$\" && subject === \"$\" && category === \"$\") {\n        if (\n          String(post.note).toLowerCase() === keyword.toLowerCase() ||\n          String(post.note).toLowerCase().includes(keyword.toLowerCase())\n        ) {\n          array.push(post);\n        }\n      }\n      if (keyword === \"$\" && subject !== \"$\" && category === \"$\") {\n        if (post.subject === subject) {\n          array.push(post);\n        }\n      }\n      if (keyword === \"$\" && subject === \"$\" && category !== \"$\") {\n        if (post.category === category) {\n          array.push(post);\n        }\n      }\n      if (keyword !== \"$\" && subject !== \"$\" && category === \"$\") {\n        if (\n          String(post.note).toLowerCase() === keyword.toLowerCase() ||\n          String(post.note)\n            .toLowerCase()\n            .includes(keyword.toLowerCase() && post.subject === subject)\n        ) {\n          array.push(post);\n        }\n      }\n      if (keyword !== \"$\" && subject === \"$\" && category !== \"$\") {\n        if (\n          String(post.note).toLowerCase() === keyword.toLowerCase() ||\n          String(post.note)\n            .toLowerCase()\n            .includes(keyword.toLowerCase() && post.category === category)\n        ) {\n          array.push(post);\n        }\n      }\n      if (keyword === \"$\" && subject !== \"$\" && category !== \"$\") {\n        if (post.subject === subject && post.category === category) {\n          array.push(post);\n        }\n      }\n      if (keyword !== \"$\" && subject !== \"$\" && category !== \"$\") {\n        if (\n          String(post.note).toLowerCase() === keyword.toLowerCase() ||\n          String(post.note)\n            .toLowerCase()\n            .includes(\n              keyword.toLowerCase() &&\n                post.subject === subject &&\n                post.category === category\n            )\n        ) {\n          array.push(post);\n        }\n      }\n    });\n    //..............................................\n    this.state.terminology.forEach((term) => {\n      if (keyword !== \"$\" && subject === \"$\" && category === \"$\") {\n        if (\n          String(term.term).toLowerCase() === keyword.toLowerCase() ||\n          String(term.term).toLowerCase().includes(keyword.toLowerCase())\n        ) {\n          array_term.push(term);\n        }\n      }\n      if (keyword === \"$\" && subject !== \"$\" && category === \"$\") {\n        if (term.subject === subject) {\n          array_term.push(term);\n        }\n      }\n      if (keyword === \"$\" && subject === \"$\" && category !== \"$\") {\n        if (term.category === category) {\n          array_term.push(term);\n        }\n      }\n      if (keyword !== \"$\" && subject !== \"$\" && category === \"$\") {\n        if (\n          String(term.note).toLowerCase() === keyword.toLowerCase() ||\n          String(term.note)\n            .toLowerCase()\n            .includes(keyword.toLowerCase() && term.subject === subject)\n        ) {\n          array_term.push(term);\n        }\n      }\n      if (keyword !== \"$\" && subject === \"$\" && category !== \"$\") {\n        if (\n          String(term.note).toLowerCase() === keyword.toLowerCase() ||\n          String(term.note)\n            .toLowerCase()\n            .includes(keyword.toLowerCase() && term.category === category)\n        ) {\n          array_term.push(term);\n        }\n      }\n      if (keyword === \"$\" && subject !== \"$\" && category !== \"$\") {\n        if (term.subject === subject && term.category === category) {\n          array_term.push(term);\n        }\n      }\n      if (keyword !== \"$\" && subject !== \"$\" && category !== \"$\") {\n        if (\n          String(term.note).toLowerCase() === keyword.toLowerCase() ||\n          String(term.note)\n            .toLowerCase()\n            .includes(\n              keyword.toLowerCase() &&\n                term.subject === subject &&\n                term.category === category\n            )\n        ) {\n          array_term.push(term);\n        }\n      }\n    });\n    //.......................................\n    this.searchTerminology(array_term);\n    //.............................................\n    let array_associate = [];\n    for (var i = 0; i < array.length; i++) {\n      if (array_associate[i] !== array[i]._id) {\n        let date_p = document.createElement(\"p\");\n        let category_p = document.createElement(\"p\");\n        let subject_p = document.createElement(\"p\");\n        let reference_p = document.createElement(\"p\");\n        let page_p = document.createElement(\"p\");\n        let li = document.createElement(\"li\");\n        let details_div = document.createElement(\"div\");\n        let note_options_div = document.createElement(\"div\");\n        //.............................comments.......................\n\n        //............date.................................\n        let date = array[i].date;\n        let date_timezone = new Date(date);\n        let date_string = date_timezone.toDateString();\n        let time_string = date_timezone.toLocaleTimeString();\n        //.............................................\n        //...............................note..................................\n        let note_p = document.createElement(\"p\");\n        note_p.textContent = array[i].note;\n        note_p.setAttribute(\"class\", \"note_p\");\n        note_options_div.setAttribute(\"class\", \"fr note_options_div\");\n        note_options_div.setAttribute(\"id\", \"note_options_div\" + i);\n        note_options_div.appendChild(note_p);\n        //.......................Options....................................\n        let options_div = document.createElement(\"div\");\n        options_div.setAttribute(\"class\", \"options_div\");\n        //............................Poster name.......................\n        let postername_p = document.createElement(\"p\");\n        postername_p.setAttribute(\"class\", \"postername_p\");\n        details_div.appendChild(postername_p);\n        //..................................\n        if (array[i].id === this.state.my_id) {\n          postername_p.textContent = \"Mine\";\n          let p_delete = document.createElement(\"p\");\n          let p_edit = document.createElement(\"p\");\n          p_delete.style.cursor = \"pointer\";\n          p_edit.style.cursor = \"pointer\";\n          p_delete.textContent = \"Delete\";\n          p_edit.textContent = \"Edit\";\n          options_div.appendChild(p_delete);\n          options_div.appendChild(p_edit);\n          p_delete.addEventListener(\"click\", () => {\n            this.setState({ posts_deleted: true });\n            this.deletePost(options_div.id);\n          });\n          p_edit.addEventListener(\"click\", () => this.editPost(options_div.id));\n          note_options_div.appendChild(options_div);\n          options_div.setAttribute(\n            \"class\",\n            \"fc MountPosts_postOptionsContainer\"\n          );\n          options_div.setAttribute(\"id\", array[i]._id);\n        } else {\n          postername_p.textContent =\n            array[i].firstname + \" \" + array[i].lastname;\n        }\n        //........................................................................\n\n        //.....................................................................\n        li.className = \"fc\";\n\n        date_p.innerHTML =\n          \"<i class='far fa-clock'></i>\" +\n          \"  \" +\n          date_string +\n          \", \" +\n          time_string;\n        category_p.textContent = \"Category: \" + array[i].category;\n        subject_p.textContent = \"Subject: \" + array[i].subject;\n        reference_p.textContent = \"Reference: \" + array[i].reference;\n        page_p.textContent = \"Page #: \" + array[i].page_num;\n        date_p.className = \"MountPosts_date\";\n        details_div.appendChild(date_p);\n        details_div.appendChild(category_p);\n        details_div.appendChild(subject_p);\n        details_div.setAttribute(\"class\", \"fr details_div\");\n        //...................comments...............\n        let comments_div = document.createElement(\"div\");\n        let comment_input = document.createElement(\"input\");\n        let commentlist_ul = document.createElement(\"ul\");\n        comments_div.appendChild(comment_input);\n        comments_div.setAttribute(\"class\", \"fc comments_div\");\n        comments_div.setAttribute(\"id\", \"commentDiv\" + array[i]._id);\n        comment_input.setAttribute(\"id\", \"comment_input\" + array[i]._id);\n        comment_input.setAttribute(\"class\", \"comment_input\");\n        commentlist_ul.setAttribute(\"id\", \"commentlist_ul\" + array[i]._id);\n        comment_input.setAttribute(\"placeholder\", \"Enter a comment\");\n        comment_input.addEventListener(\"keypress\", (event) => {\n          this.postComment(event, comments_div.id, comment_input.id);\n        });\n        array[i].comments.forEach((comment) => {\n          let comment_li = document.createElement(\"li\");\n          comment_li.textContent = comment;\n          comment_li.setAttribute(\"class\", \"comment_li\");\n          commentlist_ul.setAttribute(\"class\", \"fc commentlist_ul\");\n          commentlist_ul.prepend(comment_li);\n          comments_div.appendChild(commentlist_ul);\n        });\n        //.....................................................\n\n        if (!(array[i].reference === \"\" && array[i].page_num !== null)) {\n          if (array[i].reference !== \"\") details_div.appendChild(reference_p);\n          if (array[i].page_num !== null) details_div.appendChild(page_p);\n        }\n        li.setAttribute(\"id\", \"li\" + array[i]._id);\n        li.appendChild(details_div);\n        li.appendChild(note_options_div);\n        li.appendChild(comments_div);\n        ul.appendChild(li);\n        this.setState({\n          app_is_loading: false,\n        });\n      }\n      array_associate[i] = array[i]._id;\n    }\n  };\n  searchTerminology = (array) => {\n    if (array) {\n      array.forEach((term) => {\n        let ul = document.getElementById(\"Terminology_content_container\");\n        let p1 = document.createElement(\"p\");\n        let p2 = document.createElement(\"p\");\n        let p3 = document.createElement(\"p\");\n        let p4 = document.createElement(\"p\");\n        let p5 = document.createElement(\"p\");\n        let p6 = document.createElement(\"p\");\n        let li = document.createElement(\"li\");\n        p1.textContent = term.term;\n        p1.style.fontSize = \"16pt\";\n        p1.style.textAlign = \"center\";\n        p1.style.backgroundColor = \"var(--white)\";\n        p1.style.color = \"var(--black)\";\n        p2.textContent = term.meaning;\n        p2.style.fontSize = \"14pt\";\n        p3.textContent = term.category;\n        p3.style.fontSize = \"10pt\";\n        p3.style.textAlign = \"right\";\n        p4.textContent = term.subject;\n        p4.style.fontSize = \"10pt\";\n        p4.style.textAlign = \"right\";\n        p5.textContent = \"Delete\";\n        p5.style.backgroundColor = \"var(--red)\";\n        p5.style.width = \"fit-content\";\n        p5.style.padding = \"0 5px\";\n        p5.style.cursor = \"pointer\";\n        p5.addEventListener(\"click\", () => {\n          this.deleteTerminology(term._id);\n        });\n        p6.textContent = \"Edit\";\n        p6.style.backgroundColor = \"var(--red)\";\n        p6.style.width = \"fit-content\";\n        p6.style.padding = \"0 5px\";\n        p6.style.marginTop = \"5px\";\n\n        p6.style.cursor = \"pointer\";\n        p6.addEventListener(\"click\", () => {\n          this.editTerminology(term._id);\n        });\n        li.appendChild(p1);\n        li.appendChild(p2);\n        li.appendChild(p3);\n        li.appendChild(p4);\n        li.appendChild(p5);\n        li.appendChild(p6);\n        li.setAttribute(\"id\", \"li_term\" + term._id);\n        ul.prepend(li);\n      });\n      this.setState({\n        retrievingTerminology_DONE: true,\n      });\n    }\n  };\n  show_profile = (boolean) => {\n    this.setState({\n      profile: boolean,\n    });\n  };\n  //.....Reander Login HTML..........\n  render() {\n    return (\n      <React.Fragment>\n        <Route exact path=\"/\">\n          <article id=\"app_page\" className=\"fc\">\n            <main id=\"Main_article\" className=\"fr\">\n              <Greeting state={this.state} />\n            </main>\n          </article>\n        </Route>\n        <Route path=\"/study\">\n          <article id=\"app_page\" className=\"fc\">\n            <main id=\"Main_article\" className=\"fr\">\n              {/* <Study\n                state={this.state}\n                logOut={this.logOut}\n                acceptFriend={this.acceptFriend}\n                type={this.type}\n                show_profile={this.show_profile}\n                serverReply={this.serverReply}\n              />{\" \"} */}\n            </main>\n          </article>\n        </Route>\n        <Route path=\"/studyplanner\">\n          <SchoolPlanner\n            state={this.state}\n            logOut={this.logOut}\n            acceptFriend={this.acceptFriend}\n            type={this.type}\n            show_profile={this.show_profile}\n            memory={this.memory}\n            serverReply={this.serverReply}\n          />\n        </Route>\n        <div\n          id=\"server_answer\"\n          onClick={() => {\n            document.getElementById(\"server_answer\").style.width = \"0\";\n          }}\n        >\n          <p id=\"server_answer_message\"></p>\n        </div>\n        {this.state.app_is_loading && (\n          <div\n            style={{\n              fontSize: \"20pt\",\n              display: \"flex\",\n              position: \"fixed\",\n              top: \"0\",\n              bottom: \"0\",\n              right: \"0\",\n              left: \"0\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              flexDirection: \"column\",\n              zIndex: \"100\",\n            }}\n          >\n            <img\n              src=\"/img/loader.gif\"\n              alt=\"\"\n              width=\"70px\"\n              style={{\n                margin: \"auto\",\n              }}\n            />\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\Posts.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Greeting\\Greeting.jsx",["143","144","145"],"import { Link } from \"react-router-dom\";\nimport Nav from \"../../Header/Nav/Nav\";\nimport React, {useState, useEffect} from 'react'\nimport {storage} from \"../../../firebase\"\nimport {ref, uploadBytes, listAll, getDownloadURL} from \"firebase/storage\"\nimport {v4} from \"uuid\"\n\nconst Greeting=(props)=>{\n  useEffect(()=>{\n    listAll(imageListRef).then((response)=>{\n      response.items.forEach((item)=>{\n        getDownloadURL(item).then((url)=>{\n          setImageList((prev)=>[...prev, url])\n        })\n      })\n    })\n  },[])\n  const [imageUpload, setImageUpload]=useState(null)\n  const[imageList, setImageList]=useState([])\n\n  const imageListRef = ref(storage,\"images/\")\n\n  const handleChange=(e)=>{\n      setImageUpload(e.target.files[0])\n      uploadImage()\n  \n  }\n  const uploadImage=()=>{\n    if(imageUpload===null) return;\n    const imageRef= ref(storage, \"images/\"+props.state.my_id+\"_pp\")\n    uploadBytes(imageRef, imageUpload).then((snapshot)=>{\n      getDownloadURL(snapshot.ref).then((url)=>{\n        setImageList((prev)=>[...prev, url])\n      })\n      alert(\"Image uploaded\")\n    })\n  }\n\n    return (\n      <article id=\"Greeting_studysessions_article\" className=\"fc\">\n      <section id=\"Greeting_preStart\" className=\"fc slide-top\">\n        <div className=\"fc\" style={{ alignItems: \"center\" }}>\n          <h1>Hello {props.state.firstname},</h1>\n          <h2>Let's start a new study session!</h2>\n          {/* <button id=\"Greeting_preStart_button\" className=\"fr\">\n            <Link to=\"/study\">\n              <i class=\"fas fa-stopwatch\"></i> Start Timer\n            </Link>\n          </button> */}\n          <button id=\"Greeting_preStart_button1\" className=\"fr\">\n          <Link to=\"/study\">\n              <i class=\"fas fa-stopwatch\"></i> Study tool\n            </Link>\n          </button>\n          <button id=\"Greeting_preStart_button2\" className=\"fr\">\n          <Link to=\"/studyplanner\">\n              <i class=\"fas fa-stopwatch\"></i> Study organizer\n            </Link>\n          </button>\n       \n        </div>\n\n        <div id=\"Greeting_preStart_reportDiv\">\n          <h3 style={{ textAlign: \"center\" }}>Previous Sessions</h3>\n          <ul id=\"Greeting_studySessions_area\" className=\"fc\">\n            {props.state.study_session &&\n              props.state.study_session.length === 0 && (\n                <div>There are no previous study sessions to show</div>\n              )}\n          </ul>\n          <li id=\"Greeting_totalDuration_li\"></li>\n        </div>\n        \n      </section>\n      <Nav path=\"/\" />\n      <div id=\"Greeting_userMenu_div\" className=\"fc\">\n        <button id=\"Greeting_userMenu_button\" onClick={()=>{\n            let Greeting_userMenu_content_div= document.querySelector(\"#Greeting_userMenu_content_div\");\n            let Greeting_userMenu_content_div_CS=window.getComputedStyle(Greeting_userMenu_content_div)\n            if( Greeting_userMenu_content_div_CS.getPropertyValue(\"display\")===\"none\"){\n            document.getElementById(\"Greeting_userMenu_content_div\").style.display=\"flex\"\n          }else{\n            document.getElementById(\"Greeting_userMenu_content_div\").style.display=\"none\"\n          }\n        }}>\n        <i class=\"fi fi-rr-user\" id=\"Greeting_userMenu_i\"></i>\n        </button>\n        <div id=\"Greeting_userMenu_content_div\" className=\"fc\">\n          <div id=\"Greeting_userMenu_personalInfo_div\">\n          <label class=\"Greeting_userMenu_title_label\">Personal information</label>\n          <div id=\"Greeting_userMenu_personalInfo_content_div\" className=\"fc\">\n            <div className=\"fr Greeting_userMenu_contentDivs\">\n            <label>First name:</label>\n            <p>{props.state.firstname}</p>\n            </div>\n            <div className=\"fr Greeting_userMenu_contentDivs\">\n            <label>Last name:</label>\n            <p>{props.state.lastname}</p>\n            </div>\n            <div className=\"fr Greeting_userMenu_contentDivs\">\n            <label>Username:</label>\n            <p>{props.state.username}</p>\n            </div>\n            <div className=\"fr Greeting_userMenu_contentDivs\">\n            <label>Password:</label>\n            <p style={{color:\"var(--red)\",cursor:\"pointer\"}}>Change password</p>\n            </div>\n            <div className=\"fr Greeting_userMenu_contentDivs\">\n            <label>Profile picture</label>\n            <section className=\"fc\"  id=\"profile_pic_section\">\n              <div className=\"custom-file-upload_profilePic_div fc\">   \n                {imageList.map((url)=>{\n                    return <img src={url} className=\"custom-file-upload_profilePic\"/>\n                  })}\n                  </div>\n              <label class=\"custom-file-upload\">\n              <i class=\"fi fi-sr-camera\" id=\"profile_pic_i\"></i>\n              <input type=\"file\" onChange={handleChange}/>\n              </label>\n              <button onClick={uploadImage} id=\"profile_pic_button\">Upload</button>\n            </section>\n            </div>\n          </div>\n          </div>\n        </div>\n        </div>\n    </article>\n  );\n}\nexport default Greeting","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Header.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Terminology\\Terminology.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\InputPost\\SearchPosts\\SearchPosts.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\MountPosts\\MountPosts.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Footer\\Footer.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\InputPost\\InputPost.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Nav.jsx",["146","147","148","149","150"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Dim from \"./Dim/Dim\";\nimport Logout from \"./Logout/Logout\";\nimport Menu from \"./Menu/Menu\";\nimport MessengerIcon from \"./MessengerIcon/MessengerIcon\";\nimport Notifications from \"./Notifications/Notifications\";\nimport ProfileIcon from \"./Profile/ProfileIcon\";\nimport Refresh from \"./Refresh/Refresh\";\nconst Nav = (props) => {\n  let app_page = document.getElementById(\"root\");\n  let width = window.getComputedStyle(app_page).width;\n      return (\n        <nav id=\"Nav_article\" className=\"fr\">\n          <Logout logOut={props.logOut} />\n          <Notifications\n            state={props.state}\n            acceptFriend={props.acceptFriend}\n          />\n          <Dim />\n          <Refresh />\n        </nav>\n      )\n};\n\nexport default Nav;\n","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\SearchUsers\\SearchUsers.jsx",[],["151","152"],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Menu\\Menu.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Notifications\\Notifications.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Dim\\Dim.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\MessengerIcon\\MessengerIcon.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Profile\\ProfileIcon.jsx",["153"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ProfileIcon = (props) => {\n  return (\n    <div>\n      {props.profile !== \"true\" && (\n        <i\n          class=\"fas fa-user-alt\"\n          onClick={() => {\n            props.show_profile(true);\n          }}\n          title=\"Profile\"\n        ></i>\n      )}\n      {props.profile === \"true\" && (\n        <i\n          class=\"fas fa-chevron-circle-left\"\n          onClick={() => {\n            window.location.reload();\n          }}\n        ></i>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileIcon;\n","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Logout\\Logout.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Refresh\\Refresh.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\SubApps\\Chat\\Chat.js",["154"],"import React from \"react\";\nimport Friends from \"../../Parts/Friends/Friends\";\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  //.........VARIABLES.........\n  textarea = document.getElementById(\"Chat_textarea_input\");\n  //...........................................Preperation..................................................\n  preparingChat = () => {\n    let url =\n      \"https://backendstep.onrender.com/api/chat/prepareChat/\" +\n      this.state.my_id;\n    let options = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Bearer \" + this.state.token,\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    let req = new Request(url, options);\n    fetch(req);\n  };\n  //.....BUILD CHAT FOR A SPECIFIC FRIEND\n  RetrievingMySendingMessages = (friend_id) => {\n    var messages = [];\n    let ul = document.getElementById(\"Chat_messages\");\n    ul.innerHTML = \"\";\n    for (var i = 0; i < this.state.chat.length; i++) {\n      if (\n        messages[i] !== this.state.chat[i].date &&\n        friend_id === this.state.chat[i]._id\n      ) {\n        document\n          .getElementById(\"Chat_messages\")\n          .scrollBy(0, document.getElementById(\"Chat_messages\").scrollHeight);\n\n        if (this.state.chat[i].from === \"me\") {\n          let p = document.createElement(\"p\");\n          let li = document.createElement(\"li\");\n          let div = document.createElement(\"div\");\n          p.textContent = this.state.chat[i].message;\n          li.setAttribute(\"class\", \"sentMessagesLI\");\n          li.appendChild(p);\n          div.setAttribute(\"class\", \"sentMessagesDIV fc\");\n          div.appendChild(li);\n          ul.appendChild(div);\n        }\n        if (this.state.chat[i].from === \"them\") {\n          let p = document.createElement(\"p\");\n          let li = document.createElement(\"li\");\n          let div = document.createElement(\"div\");\n          p.textContent = this.state.chat[i].message;\n          li.setAttribute(\"class\", \"receivedMessagesLI\");\n          li.appendChild(p);\n          div.setAttribute(\"class\", \"receivedMessagesDIV fc\");\n          div.appendChild(li);\n          ul.appendChild(div);\n        }\n      }\n      messages[i] = this.state.chat[i].date;\n    }\n  };\n  //..........END OF BUILD CHAT FOR A SPECIFIC FRIEND\n  //..........SEND A MESSAGE TO A SPECIFIC FRIEND\n  sendToThemMessage = (message) => {\n    this.textarea.style.height = \"70px\";\n    if (message && message.trim() !== \"\") {\n      let url =\n        \"https://backendstep.onrender.com/api/chat/sendMessage/\" +\n        this.state.friendID_selected +\n        \"/\" +\n        this.state.my_id;\n      let options = {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          Authorization: \"Bearer \" + this.state.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: document.getElementById(\"Chat_textarea_input\").value,\n        }),\n      };\n      let req = new Request(url, options);\n      fetch(req).then((result) => {\n        if (result.status === 201) {\n          document.getElementById(\"Chat_textarea_input\").value = \"\";\n        }\n      });\n    } else {\n      this.serverReply(\"You can't send an empty message\");\n    }\n  };\n  //........END OF SEND A MESSAGE TO A SPECIFIC FRIEND......\n  auto_grow = (event) => {\n    this.textarea.style.height = this.textarea.scrollHeight + \"px\";\n    if (event.which === 8) {\n      this.textarea.style.height = this.textarea.scrollHeight + \"px\";\n    }\n  };\n\n  send_by_enter = (event) => {\n    if (event.which === 13) {\n      this.sendToThemMessage(this.textarea.value);\n    }\n  };\n\n  openNotesAside = () => {\n    let Friends_content_container = document.getElementById(\n      \"Friends_content_container\"\n    );\n    let searchPosts = document.getElementById(\"SearchPosts_article\");\n    let Friends_article = document.getElementById(\"Friends_article\");\n    let Friends_control_door = document.getElementById(\"Friends_control_door\");\n    let app_page = document.querySelector(\"#app_page\");\n    let app_page_css = window.getComputedStyle(app_page);\n    let Header_article = document.getElementById(\"Header_article\");\n    if (Friends_control_door.title === \"unclicked\") {\n      this.dbUpdate_user_connected(true);\n      if (parseInt(app_page_css.width) >= 1500) {\n        Friends_content_container.style.width = \"400px\";\n      }\n\n      if (parseInt(app_page_css.width) < 1200) {\n        searchPosts.style.display = \"none\";\n        Friends_article.style.height = \"100vh\";\n        Friends_content_container.style.height = \"100%\";\n        Header_article.style.display = \"none\";\n      }\n      Friends_control_door.title = \"clicked\";\n    } else {\n      // this.dbUpdate_user_connected(false);\n      if (parseInt(app_page_css.width) < 1200) {\n        Header_article.style.display = \"flex\";\n        searchPosts.style.display = \"flex\";\n        Friends_article.style.height = \"initial\";\n        Friends_content_container.style.height = \"0\";\n      } else {\n        Friends_content_container.style.width = \"0\";\n      }\n      Friends_control_door.title = \"unclicked\";\n    }\n  };\n  render() {\n    return (\n      <aside id=\"Chat_article\" className=\"fc\">\n        <section id=\"Chat_title_container\" className=\"fr\">\n          <i\n            class=\"fas fa-chevron-circle-left\"\n            id=\"Chat_goback_icon\"\n            onClick={() => {\n              document.getElementById(\"Chat_goback_icon\").style.display =\n                \"none\";\n              document.getElementById(\"Chat_article\").style.height = \"0\";\n              document.getElementById(\"FriendsList_article\").style.height =\n                \"100%\";\n              document.getElementById(\n                \"DropHorizontally_article\"\n              ).style.display = \"flex\";\n            }}\n          ></i>\n          <h1 id=\"Chat_title_text\">\n            {/* {props.state.friend_target === true && \"Typing...\"} */}\n          </h1>\n        </section>\n        <ul id=\"Chat_messages\"></ul>\n        <section id=\"Chat_form\" className=\"fr\">\n          <textarea\n            id=\"Chat_textarea_input\"\n            onKeyDown={(event) => {\n              this.auto_grow(event);\n              this.send_by_enter(event);\n            }}\n          ></textarea>\n          <button id=\"Chat_submit_button\">\n            <i\n              class=\"fc far fa-paper-plane\"\n              onClick={() => {\n                this.sendToThemMessage(this.textarea.value);\n              }}\n            ></i>\n          </button>\n        </section>\n      </aside>\n    );\n  }\n}\n\nexport default Chat;\n","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\Friends.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\DropHorizontally.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\FriendsList\\FriendsList.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\AddFriend\\AddFriend.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\SubApps\\StudyPlannner\\StudyPlanner.js",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\SubApps\\StudyPlannner\\components\\SchoolPlanner\\SchoolPlanner.jsx",["155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188"],"//..............IMPORT................\nimport React, { Component } from 'react'\nimport \"./schoolPlanner.css\"\nimport { fas } from '@fortawesome/free-solid-svg-icons'\n//.........VARIABLES................\nvar courses=[]\nvar lectures=[]\nvar courses_partOfPlan = []\nvar checkedLectures = [];\nvar checkedCourses = [];\nvar courseDayAndTime= [];\nvar lectureOutlines= [];\nvar courseNames=[];\nvar courseNames_filtered=[];\nvar courseInstructorsNames=[];\nvar courseInstructorsNames_filtered=[];\nvar target_editCourse;\nvar selectedLecture\nvar course_pages = []\nvar lectureInEdit={}\nvar lecturesShownNum\n\nvar timezone = (new Date()).getTimezoneOffset()\nvar todayDate = Date.now() - timezone*60000\n\n\n//..................................\n\nexport default class SchoolPlanner extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      lectures:[],\n      courses:[],\n      course_isLoading:false,\n      lecture_isLoading:false\n    }\n  }\n\n  componentDidMount(){\n    this.retrieveLectures()\n    this.retrieveCourses()\n  }\n\n  setPageFinishLecture=async(lecture,pageNum)=>{\n    let div_progression= document.getElementById(\"div_progression\")\n    let url = \"https://backendstep.onrender.com/api/user/setPageFinishLecture/\"+ this.props.state.my_id+\"/\"+lecture._id;\n    let options = {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.state.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body:JSON.stringify({\n        pageNum:pageNum\n      })\n    };\n    let req = new Request(url, options);\n    await fetch(req).then((result)=>{\n      if(result.status===201){ \n        this.retrieveLectures()\n        return result.json()\n      }\n    }).then((result)=>{\n          let lectureFound = result.lectureFound\n          let pagenumber = result.pagenumber\n          let index = result.index\n          this.setState({\n            div_progression_isLoading:false\n          })\n          let p_progression = div_progression.children[1]\n          let div_indicator_progression = div_progression.children[2].children[0]\n          let ul_pages_finished = div_progression.children[3]\n          if(index>-1){\n            ul_pages_finished.children[pagenumber-1].style.backgroundColor=\"var(--white2)\"\n            ul_pages_finished.children[pagenumber-1].style.color=\"black\"\n            ul_pages_finished.children[pagenumber-1].style.fontWeight=\"normal\" \n          }else{\n            ul_pages_finished.children[pagenumber-1].style.backgroundColor=\"var(--green4)\"\n            ul_pages_finished.children[pagenumber-1].style.color=\"var(--white)\"\n            ul_pages_finished.children[pagenumber-1].style.fontWeight=\"bold\"    \n          }\n          let progression_percent=Number(lectureFound.lecture_progress*100/lectureFound.lecture_length).toFixed(0)\n          let progressionPercent_indicatorWidth_Ratio=150*progression_percent/100\n          p_progression.textContent = String(Number(lectureFound.lecture_length)+\" (\"+Number(lectureFound.lecture_progress)+\" : \"+Number(lectureFound.lecture_length - lectureFound.lecture_progress)+\" | \"+progression_percent+\"%)\");\n          div_indicator_progression.style.width=progressionPercent_indicatorWidth_Ratio+\"px\"\n          if(progression_percent<50) div_indicator_progression.style.backgroundColor=\"var(--red2)\" \n    })\n  }\n  hideUncheckedLectures=()=>{\n    this.setState({\n      lecture_isLoading:true\n    })\n    let url = \"https://backendstep.onrender.com/api/user/hideUncheckedLectures/\"+ this.props.state.my_id;\n    let options = {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.state.token,\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    let req = new Request(url, options);\n    fetch(req).then((lecture)=>{\n      if(lecture.status===201){ \n        this.setState({\n          lecture_isLoading:false\n        })\n        this.retrieveLectures()\n        // document.getElementById(\"schoolPlanner_lectures_hideUnchecked_button\").style.display=\"none\"\n        // document.getElementById(\"schoolPlanner_lectures_hideUnchecked_button\").style.display=\"inline\"\n      }})\n  }\n  unhideUncheckedLectures=()=>{\n    this.setState({\n      lecture_isLoading:true\n    })\n    let url = \"https://backendstep.onrender.com/api/user/unhideUncheckedLectures/\"+ this.props.state.my_id;\n    let options = {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.state.token,\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    let req = new Request(url, options);\n    fetch(req).then((lecture)=>{\n      if(lecture.status===201){ \n        this.setState({\n          lecture_isLoading:false\n        })\n        this.retrieveLectures()\n        // document.getElementById(\"schoolPlanner_lectures_hideUnchecked_button\").style.display=\"inline\"\n        // document.getElementById(\"schoolPlanner_lectures_hideUnchecked_button\").style.display=\"none\"\n      }})\n  }\n\n  calculateLectureNum=()=>{\n    let ul_lectures_array =document.getElementById(\"schoolPlanner_lectures_ul\").children\n    let lecturesShown_p=document.getElementById(\"schoolPlanner_lectures_num_p\")\n    if(!document.getElementById(\"p_noLectures\")){\n    lecturesShownNum = Number(ul_lectures_array.length)\n    lecturesShown_p.textContent=lecturesShownNum\n  }else{\n    lecturesShown_p.textContent=\"0\"\n  }\n  }\n\n  openAddLectureForm = (object) => {\n  document.getElementById(\"schoolPlanner_addLecture_div\").style.display =\"flex\";\n  document.getElementById(\"schoolPlanner_addLecture_addButton_label\").textContent = object.buttonName;\n  document.getElementById(\"schoolPlanner_lectures_labelsUl_container\").style.opacity=0\n  //.........\n  if(object.buttonName===\"Add\"){\n    lectureOutlines=[]\n    document.getElementById(\"schoolPlanner_addLecture_name_input\").value=\"\";\n    document.getElementById(\"schoolPlanner_addLecture_course_input\").value=\"Lecture course\";\n    document.getElementById(\"schoolPlanner_addLecture_instructorName_input\").value=\"Lecture instructor name\";\n    document.getElementById(\"schoolPlanner_addLecture_writerName_input\").value=\"\";\n    document.getElementById(\"schoolPlanner_addLecture_date_input\").value=\"Lecture date\";\n    document.getElementById(\"schoolPlanner_addLecture_length_input\").value=\"\";\n    document.getElementById(\"schoolPlanner_addLecture_outlines_input\").value=\"\";\n\n  }\n    if(object.buttonName===\"Edit\"){\n      selectedLecture=object._id\n      lectureOutlines=object.lecture_outlines\n      document.getElementById(\"schoolPlanner_addLecture_name_input\").value=object.lecture_name;\n      document.getElementById(\"schoolPlanner_addLecture_course_input\").value=object.lecture_course;\n      document.getElementById(\"schoolPlanner_addLecture_instructorName_input\").value=object.lecture_instructor;\n      document.getElementById(\"schoolPlanner_addLecture_writerName_input\").value=object.lecture_writer;\n      document.getElementById(\"schoolPlanner_addLecture_date_input\").value=object.lecture_date;\n      document.getElementById(\"schoolPlanner_addLecture_length_input\").value=object.lecture_length;\n      document.getElementById(\"schoolPlanner_addLecture_outlines_input\").value=\"\";\n\n\n      this.retrieveLectureOutlines()\n      }\n  };\n   closeAddLectureForm = () => {\n    document.getElementById(\"schoolPlanner_addLecture_div\").style.display =\n      \"none\";\n    document.getElementById(\"schoolPlanner_lectures_labelsUl_container\").style.opacity=1\n\n  };\n   openAddCourseForm = (object) => {\n    document.getElementById(\"schoolPlanner_lectures_labelsUl_container\").style.opacity=0\n    document.getElementById(\"schoolPlanner_addCourse_div\").style.display =\n      \"flex\";\n    document.getElementById(\"schoolPlanner_addCourse_addButton_label\").textContent =\n    object.buttonName;\n    if(object.buttonName===\"Add\"){\n    courseDayAndTime=[]\n    courseInstructorsNames=[]\n    document.getElementById(\"schoolPlanner_addCourse_name_input\").value=\"\";\n    document.getElementById(\"schoolPlanner_addCourse_component_input\").value=\"Course component\";\n    document.getElementById(\"schoolPlanner_addCourse_day_input\").value=\"Course day\";\n    document.getElementById(\"schoolPlanner_addCourse_time_input\").value=\"\";\n    document.getElementById(\"schoolPlanner_addCourse_year_input\").value=\"Course year\";\n    document.getElementById(\"schoolPlanner_addCourse_term_input\").value=\"Course term\";\n    document.getElementById(\"schoolPlanner_addCourse_class_input\").value=\"Course classification\";\n    document.getElementById(\"schoolPlanner_addCourse_status_input\").value=\"Course status\";\n    document.getElementById(\"schoolPlanner_addCourse_grade_input\").value=\"\";\n    document.getElementById(\"schoolPlanner_addCourse_fullGrade_input\").value=\"\";\n    document.getElementById(\"schoolPlanner_addCourse_instructorName_input\").value=\"\";\n    document.getElementById(\"schoolPlanner_addCourse_instructorsNames_ul\").innerHTML=\"\";\n    document.getElementById(\"schoolPlanner_addCourse_dayAndTime_ul\").innerHTML=\"\";\n\n  }\n    if(object.buttonName===\"Edit\"){\n    courseDayAndTime=object.course.course_dayAndTime\n    courseInstructorsNames=object.course.course_instructors\n    //.........\n    document.getElementById(\"schoolPlanner_addCourse_name_input\").value=object.course.course_name.split(\" (\")[0];\n    document.getElementById(\"schoolPlanner_addCourse_component_input\").value=object.course.course_component;\n    document.getElementById(\"schoolPlanner_addCourse_day_input\").value=\"Course day\";\n    document.getElementById(\"schoolPlanner_addCourse_time_input\").value=\"\";\n    document.getElementById(\"schoolPlanner_addCourse_dayAndTime_ul\").innerHTML=\"\";\n    document.getElementById(\"schoolPlanner_addCourse_year_input\").value=object.course.course_year;\n    document.getElementById(\"schoolPlanner_addCourse_term_input\").value=object.course.course_term;\n    document.getElementById(\"schoolPlanner_addCourse_class_input\").value=object.course.course_class;\n    document.getElementById(\"schoolPlanner_addCourse_status_input\").value=object.course.course_status;\n    document.getElementById(\"schoolPlanner_addCourse_instructorName_input\").value=\"\";\n    document.getElementById(\"schoolPlanner_addCourse_instructorsNames_ul\").innerHTML=\"\";\n    document.getElementById(\"schoolPlanner_addCourse_grade_input\").value=object.course.course_grade;\n    document.getElementById(\"schoolPlanner_addCourse_fullGrade_input\").value=object.course.course_fullGrade;\n    document.getElementById(\"schoolPlanner_addCourse_examDate_input\").value=object.course.exam_date;\n    document.getElementById(\"schoolPlanner_addCourse_examTime_input\").value=object.course.exam_time;\n    //................\n    this.retrieveCourseDayAndTime()\n    this.retrieveCourseInstructorsNames()\n  }\n  };\n   closeAddCourseForm = () => {\n    document.getElementById(\"schoolPlanner_addCourse_div\").style.display =\n      \"none\";\n    document.getElementById(\"schoolPlanner_lectures_labelsUl_container\").style.opacity=1\n  };\n  addCourseDayAndTime=(object)=>{\n    if(object.day && object.time){\n    courseDayAndTime.push({\n      day:object.day,\n      time:object.time\n    })\n    this.retrieveCourseDayAndTime()\n  }\n  }\n\n  addLectureOutline=()=>{\n    let outline=document.getElementById(\"schoolPlanner_addLecture_outlines_input\").value\n    lectureOutlines.push(outline)\n    this.retrieveLectureOutlines()\n  }\n\n  addCourseInstructorsNames=()=>{\n    let instructorName=document.getElementById(\"schoolPlanner_addCourse_instructorName_input\").value\n    courseInstructorsNames.push(instructorName)\n    this.retrieveCourseInstructorsNames()\n  }\n  retrieveCourseDayAndTime=()=>{\n    var courseDayAndTime_ul=document.getElementById(\"schoolPlanner_addCourse_dayAndTime_ul\")\n    courseDayAndTime_ul.innerHTML=\"\"\n    for(var i=0;i<courseDayAndTime.length;i++){\n      let p=document.createElement(\"p\")\n      let deleteIcon = document.createElement(\"i\")\n      let sec_dayAndTime= document.createElement(\"div\")\n\n      p.textContent=courseDayAndTime[i].day+\" \"+courseDayAndTime[i].time\n\n      deleteIcon.setAttribute(\"class\",\"fa fa-close\");\n      deleteIcon.setAttribute(\"id\",i+\"DIdayAndTime\")\n      sec_dayAndTime.setAttribute(\"class\",\"schoolPlanner_addCourse_dayAndTime_div fr\")\n\n      deleteIcon.addEventListener(\"click\",()=>{\n        deleteIcon.parentElement.remove()\n        courseDayAndTime.splice(parseInt(deleteIcon.id),1)\n      })\n      sec_dayAndTime.append(deleteIcon,p)\n      courseDayAndTime_ul.appendChild(sec_dayAndTime)\n    }\n  }\n  retrieveLectureOutlines=()=>{\n  var ul_outlines=document.getElementById(\"schoolPlanner_addLecture_outlines_ul\")\n  ul_outlines.innerHTML=\"\"\n  for(var i=0;i<lectureOutlines.length;i++){\n    let p_lectureOutlines = document.createElement(\"p\");\n    let deleteIcon = document.createElement(\"i\")\n    let div_lectureOutlines= document.createElement(\"div\")\n\n    p_lectureOutlines.textContent=lectureOutlines[i]\n\n    div_lectureOutlines.setAttribute(\"class\",\"schoolPlanner_addCourse_outlines_div fr\")\n    deleteIcon.setAttribute(\"class\",\"fa fa-close\");\n    deleteIcon.setAttribute(\"id\",i+\"DIlectureOutlines\")\n    deleteIcon.addEventListener(\"click\",()=>{\n      deleteIcon.parentElement.remove()\n      lectureOutlines.splice(parseInt(deleteIcon.id),1)\n    })\n    div_lectureOutlines.append(deleteIcon,p_lectureOutlines)\n    ul_outlines.append(div_lectureOutlines)\n  }\n}\n  retrieveCourseInstructorsNames=()=>{\n    let courseInstructorsNames_ul=document.getElementById(\"schoolPlanner_addCourse_instructorsNames_ul\")\n    courseInstructorsNames_ul.innerHTML=\"\"\n    for(var i=0;i<courseInstructorsNames.length;i++){\n      let p=document.createElement(\"p\")\n      let deleteIcon = document.createElement(\"i\")\n      let sec_instructorsNames= document.createElement(\"div\")\n\n      p.textContent=courseInstructorsNames[i]\n\n      deleteIcon.setAttribute(\"class\",\"fa fa-close\");\n      deleteIcon.setAttribute(\"id\",i+\"DIinstructorsNames\")\n      sec_instructorsNames.setAttribute(\"class\",\"schoolPlanner_addCourse_instructorsNames_div fr\")\n      \n      deleteIcon.addEventListener(\"click\",()=>{\n        deleteIcon.parentElement.remove()\n        courseInstructorsNames.splice(parseInt(deleteIcon.id),1)\n      })\n      sec_instructorsNames.append(deleteIcon,p)\n      courseInstructorsNames_ul.appendChild(sec_instructorsNames)\n    }\n  }\n\n    retrieveLecturesSearched = (searchKeyword)=>{\n      this.setState({\n        lecture_isLoading:true\n      })\n      let ul = document.getElementById(\"schoolPlanner_lectures_ul\");\n      ul.innerHTML=\"\"\n      let url = \"https://backendstep.onrender.com/api/user/update/\" + this.props.state.my_id;\n      let req = new Request(url, {\n        method: \"GET\",\n        mode: \"cors\",\n      });\n      fetch(req)\n        .then((response) => {\n          if (response.status === 200) {\n            this.setState({\n              lecture_isLoading:false\n            })\n            return response.json();\n          }\n        })\n        .then((jsonData) => {\n          var lecture_sorted = jsonData.schoolPlanner.lectures.sort((a, b)=> a.lecture_course > b.lecture_course ? -1 : 1)\n          var lecture_courses = []\n          lecture_sorted.forEach((lecture) => {\n            if (searchKeyword){\n              if(String(lecture.lecture_name).includes(searchKeyword) ||\n              String(lecture.lecture_course).includes(searchKeyword) ||\n              String(lecture.lecture_instructor).includes(searchKeyword) ||\n              String(lecture.lecture_outlines).includes(searchKeyword)\n                ){\n                  let progression_percent=Number(lecture.lecture_progress*100/lecture.lecture_length).toFixed(0)\n                  lecture_courses.push(lecture.lecture_course)\n                  if(lecture.lecture_hidden===false){\n                  let p1 = document.createElement(\"p\");\n                  let div_p1 = document.createElement(\"p\");\n        \n                  let p2 = document.createElement(\"p\");\n                  let p3 = document.createElement(\"p\");\n                  let p4 = document.createElement(\"p\");\n                  let p5 = document.createElement(\"p\");\n                  \n                  let p_progression = document.createElement(\"p\");\n                  let div_indicatorBox_progression = document.createElement(\"div\")\n                  let div_indicator_progression = document.createElement(\"div\")\n                  let ul_pages_finished = document.createElement(\"ul\")\n                  let div_progression = document.createElement(\"div\")\n        \n                  let div_outline = document.createElement(\"div\");\n                  let checkBox_partOfPlan = document.createElement(\"input\")\n                  let div_partOfPlan = document.createElement(\"div\")\n                  let div_pLi=document.createElement(\"div\");\n                 \n                  let li = document.createElement(\"li\");\n                  let menu_div=document.createElement(\"div\");\n                  let menu_subdiv=document.createElement(\"div\");\n                  let menu_showIcon= document.createElement(\"i\");\n                  let menu_selectIcon= document.createElement(\"i\");\n                  let menu_deleteIcon= document.createElement(\"i\");\n                  let menu_editIcon= document.createElement(\"i\");\n                  let menuLi_div=document.createElement(\"div\");\n        \n                  p1.textContent = lecture.lecture_name;\n                  p2.textContent = lecture.lecture_course;\n                  p3.textContent = lecture.lecture_instructor;\n                  p4.textContent = lecture.lecture_writer;\n                  p5.textContent = lecture.lecture_date;\n                  p_progression.textContent = String(Number(lecture.lecture_length)+\" (\"+Number(lecture.lecture_progress)+\" : \"+Number(lecture.lecture_length - lecture.lecture_progress)+\" | \"+progression_percent+\"%)\");\n        \n                    for(var i=0;i<lecture.lecture_outlines.length;i++){\n                      let p=document.createElement(\"p\")\n                      p.textContent=Number(i+1)+\") \"+lecture.lecture_outlines[i]\n                      div_outline.append(p)\n                    }\n        \n                  div_p1.setAttribute(\"class\",\"div_p_lectureName fc\")\n                  div_pLi.setAttribute(\"class\", \"schoolPlanner_lectures_div_pLi\");\n                  li.setAttribute(\"class\",\"schoolPlanner_lectures_li fc\")\n                  li.setAttribute(\"id\", lecture._id + \"li\");\n                  menu_showIcon.setAttribute(\"class\",\"fa fa-sharp fa-solid fa-bars\");\n                  menu_showIcon.setAttribute(\"id\", lecture._id + \"menu_showIcon\");\n                  menu_showIcon.setAttribute(\"title\",\"\")\n                  menu_editIcon.setAttribute(\"title\",\"\")\n                  menu_selectIcon.setAttribute(\"class\",\"fa fa-sharp fa-solid fa-check\");\n                  menu_selectIcon.setAttribute(\"title\",\"\");\n                  menu_selectIcon.setAttribute(\"id\",lecture._id+\"menu_selectIcon\")\n                  menu_deleteIcon.setAttribute(\"class\",\"fa fa-sharp fa-solid fa-trash\");\n                  menu_editIcon.setAttribute(\"class\",\"fa fa-sharp fa-solid fa-pencil\");\n                  div_outline.setAttribute(\"class\",\"div_outline fc\")\n        \n                  checkBox_partOfPlan.type=\"checkbox\"\n                  div_partOfPlan.setAttribute(\"class\",\"div_partOfPlan fc\")\n                  checkBox_partOfPlan.setAttribute(\"id\",lecture._id +\"checkBox_partOfPlan\")\n        \n                  if(lecture.lecture_partOfPlan===true) checkBox_partOfPlan.checked=true\n                \n        \n        \n                  div_indicatorBox_progression.setAttribute(\"class\",\"div_indicatorBox_progression\")\n                  div_indicatorBox_progression.setAttribute(\"id\",lecture._id+\"div_indicatorBox_progression\")\n                  div_indicator_progression.setAttribute(\"class\",\"div_indicator_progression\")\n                  div_indicator_progression.setAttribute(\"id\",lecture._id+\"div_indicator_progression\")\n                  ul_pages_finished.setAttribute(\"class\",\"ul_pages_finished\")\n                  div_progression.setAttribute(\"class\",\"div_progression fc\")\n                  \n                  menu_div.setAttribute(\"class\",\"fr lecuturesTable_menu_div\");\n                  menu_subdiv.setAttribute(\"class\",\"fr lecuturesTable_menu_subdiv\");\n                  menu_subdiv.setAttribute(\"id\",lecture._id+\"menu_subdiv\");\n                  menuLi_div.setAttribute(\"class\",\"menuLi_div fr\")\n                  menuLi_div.setAttribute(\"id\", lecture._id + \"menuLi_div\");\n                  menu_editIcon.setAttribute(\"id\",lecture._id+\"menu_editIcon\")\n        \n                  //........Progression logic\n                  let progressionPercent_indicatorWidth_Ratio=150*progression_percent/100\n                  div_indicator_progression.style.width=progressionPercent_indicatorWidth_Ratio+\"px\"\n                  if(progression_percent<50) div_indicator_progression.style.backgroundColor=\"var(--red2)\"\n                  //........  \n                 //.......PagesFinished Logic\n                 for(var i = 0;i<lecture.lecture_length;i++){\n                  let pagenumber=Number(i+1)\n                  let p_num = document.createElement(\"p\")\n                  p_num.textContent=pagenumber\n                  p_num.addEventListener(\"click\",()=>{\n                    this.setState({\n                      div_progression_isLoading:true\n                    })\n                    setTimeout(()=>{\n                      console.log(lecture.lecture_pagesFinished)\n                      if(lecture.lecture_pagesFinished.indexOf(pagenumber)==-1){\n                        this.setPageFinishLecture(lecture,pagenumber)\n                      }else{\n                        this.setPageFinishLecture(lecture,pagenumber)\n                      }\n                },1000)\n                })\n                for(var j = 0;j<lecture.lecture_pagesFinished.length;j++){\n                  if(lecture.lecture_pagesFinished.indexOf(pagenumber)!==-1){\n                    p_num.style.backgroundColor=\"var(--green4)\"\n                    p_num.style.color=\"var(--white)\"\n                    p_num.style.fontWeight=\"bold\"\n                  }\n                }\n                ul_pages_finished.append(p_num)\n              }\n                //...........  \n                  menu_showIcon.addEventListener(\"click\",()=>{\n                  let menu_showIcon = document.getElementById(lecture._id + \"menu_showIcon\");\n                  let menu_subdiv = document.getElementById(lecture._id + \"menu_subdiv\");\n                    if(menu_showIcon.title ===\"\"){\n                      menu_subdiv.style.width=\"15%\"\n                      menu_showIcon.title=\"clicked\"\n                    }else{\n                      menu_subdiv.style.width=\"0\"\n                      menu_showIcon.title=\"\"\n                    }\n                  })\n        \n                  //.............EDIT FUNCTION\n                  menu_editIcon.addEventListener(\"click\", () => {\n                    lectureInEdit=lecture\n                    document.getElementById(lecture._id + \"menu_subdiv\").style.width=\"0\"\n                    this.openAddLectureForm({\n                      buttonName:\"Edit\",\n                      _id:lecture._id,\n                      lecture_name:lecture.lecture_name,\n                      lecture_course:lecture.lecture_course,\n                      lecture_instructor:lecture.lecture_instructor,\n                      lecture_writer:lecture.lecture_writer,\n                      lecture_date:lecture.lecture_date,\n                      lecture_length:lecture.lecture_length,\n                      lecture_progress:lecture.lecture_progress,\n                      lecture_outlines:lecture.lecture_outlines,\n                      lecture_partOfPlan:lecture.lecture_partOfPlan,\n                      lecture_hidden:lecture.lecture_hidden\n                    })\n                  })\n        \n                  //................DELETE ONE LECTURE..........\n                  menu_deleteIcon.addEventListener(\"click\", () => {\n                    checkedLectures.push(lecture._id)\n                    this.deleteLecture()\n                   \n                  })\n                 \n        \n                  \n                  menu_selectIcon.addEventListener(\"click\", () => {\n                    let menu_selectIcon = document.getElementById(lecture._id + \"menu_selectIcon\");\n                    let li = document.getElementById(lecture._id + \"li\");\n                    if (menu_selectIcon.title === \"\") {\n                      li.style.backgroundColor = \"var(--yellow)\";\n                      menu_selectIcon.style.color = \"var(--yellow)\";\n                      menu_selectIcon.title = \"clicked\";\n                      if (checkedLectures.length > 0) {\n                        for (var i = 0; i < checkedLectures.length; i++) {\n                          if (checkedLectures[i] === lecture._id) {\n                            checkedLectures.splice(i, 1);\n                          } else {\n                            checkedLectures.push(lecture._id);\n                            break;\n                          }\n                        }\n                      } else {\n                        checkedLectures.push(lecture._id);\n                      }\n                    } else {\n                      li.style.backgroundColor = \"var(--white2)\";\n                      menu_selectIcon.style.color = \"var(--white2)\";\n                      menu_selectIcon.title = \"\";\n                      for (var i = 0; i < checkedLectures.length; i++) {\n                        if (checkedLectures[i] === lecture._id) {\n                          checkedLectures.splice(i, 1);\n                        }\n                      }\n                    }\n                  });\n                  //.......Check box\n                  checkBox_partOfPlan.addEventListener(\"click\",()=>{\n                    if(checkBox_partOfPlan.checked===true){\n                      this.editLecture({\n                        _id:lecture._id,\n                        lecture_name:lecture.lecture_name,\n                        lecture_course:lecture.lecture_course,\n                        lecture_instructor:lecture.lecture_instructor,\n                        lecture_writer:lecture.lecture_writer,\n                        lecture_date:lecture.lecture_date,\n                        lecture_length:lecture.lecture_length,\n                        lecture_progress:lecture.lecture_progress,\n                        lecture_pagesFinished:lecture.lecture_pagesFinished,\n                        lecture_outlines:lecture.lecture_outlines,\n                        lecture_partOfPlan:true,\n                        lecture_hidden:lecture.lecture_hidden\n                      })\n                    }else{\n                      this.editLecture({\n                        _id:lecture._id,\n                        lecture_name:lecture.lecture_name,\n                        lecture_course:lecture.lecture_course,\n                        lecture_instructor:lecture.lecture_instructor,\n                        lecture_writer:lecture.lecture_writer,\n                        lecture_date:lecture.lecture_date,\n                        lecture_length:lecture.lecture_length,\n                        lecture_progress:lecture.lecture_progress,\n                        lecture_pagesFinished:lecture.lecture_pagesFinished,\n                        lecture_outlines:lecture.lecture_outlines,\n                        lecture_partOfPlan:false,\n                        lecture_hidden:lecture.lecture_hidden\n                      })\n                    }\n                 \n                  })\n                  //.........\n                  div_progression.addEventListener(\"click\",()=>{\n                    let div_progressionInHTML=document.getElementById(\"div_progression\")\n                      let i_close=document.createElement(\"i\")\n                      i_close.setAttribute(\"class\",\"fi fi-rr-cross-circle\")\n                      div_progressionInHTML.innerHTML=\"\"\n                      i_close.addEventListener(\"click\",()=>{\n                        document.getElementById(\"div_progression\").style.display=\"none\"\n                        ul.style.opacity=\"1\"\n                        ul_pages_finished.style.padding=\"0px\"\n                        div_progression.append(p_progression, div_indicatorBox_progression)\n                      })\n                      ul.style.opacity=\"0\"\n                      ul_pages_finished.style.height=\"fit-content\"\n                      ul_pages_finished.style.padding=\"10px\"\n                      div_progressionInHTML.style.display=\"flex\"\n                      div_progressionInHTML.append(i_close,p_progression, div_indicatorBox_progression,ul_pages_finished)\n                  })\n                  //...........\n                  //.................\n                  menu_subdiv.append(menu_deleteIcon,menu_editIcon,menu_selectIcon);\n                  menu_div.append(menu_showIcon);\n                  div_p1.append(p1)\n                  div_pLi.append(p2,p3,p4,p5,div_progression)\n                  div_indicatorBox_progression.append(div_indicator_progression)\n                  div_progression.append(p_progression, div_indicatorBox_progression,ul_pages_finished)\n                  li.append(div_pLi);\n                  div_partOfPlan.appendChild(checkBox_partOfPlan)\n                  if(lecture.lecture_outlines.length>0) li.append(div_outline)\n                  menuLi_div.append(menu_subdiv,menu_div,div_p1,li,div_partOfPlan);\n                  ul.prepend(menuLi_div);\n                }\n                }\n              }\n            });\n        }).then(()=>{\n          this.calculateLectureNum()\n        })\n    }\n   retrieveLectures = () => {\n    this.setState({\n      lecture_isLoading:true\n    })\n    let ul = document.getElementById(\"schoolPlanner_lectures_ul\");\n    ul.innerHTML=\"\"\n    let url = \"https://backendstep.onrender.com/api/user/update/\" + this.props.state.my_id;\n    let req = new Request(url, {\n      method: \"GET\",\n      mode: \"cors\",\n    });\n    fetch(req)\n      .then((response) => {\n        if (response.status === 200) {\n          this.setState({\n            lecture_isLoading:false\n          })\n          return response.json();\n        }\n      })\n      .then((jsonData) => {\n        console.log(jsonData.schoolPlanner.lectures)\n        var lecture_sorted = jsonData.schoolPlanner.lectures.sort((a, b)=> a.lecture_course > b.lecture_course ? -1 : 1)\n        var lecture_courses = []\n        lecture_sorted.forEach((lecture) => {\n          let progression_percent=Number(lecture.lecture_progress*100/lecture.lecture_length).toFixed(0)\n          lecture_courses.push(lecture.lecture_course)\n          if(lecture.lecture_hidden===false){\n          let p1 = document.createElement(\"p\");\n          let div_p1 = document.createElement(\"p\");\n\n          let p2 = document.createElement(\"p\");\n          let p3 = document.createElement(\"p\");\n          let p4 = document.createElement(\"p\");\n          let p5 = document.createElement(\"p\");\n          \n          let p_progression = document.createElement(\"p\");\n          let div_indicatorBox_progression = document.createElement(\"div\")\n          let div_indicator_progression = document.createElement(\"div\")\n          let ul_pages_finished = document.createElement(\"ul\")\n          let div_progression = document.createElement(\"div\")\n\n          let div_outline = document.createElement(\"div\");\n          let checkBox_partOfPlan = document.createElement(\"input\")\n          let div_partOfPlan = document.createElement(\"div\")\n          let div_pLi=document.createElement(\"div\");\n         \n          let li = document.createElement(\"li\");\n          let menu_div=document.createElement(\"div\");\n          let menu_subdiv=document.createElement(\"div\");\n          let menu_showIcon= document.createElement(\"i\");\n          let menu_selectIcon= document.createElement(\"i\");\n          let menu_deleteIcon= document.createElement(\"i\");\n          let menu_editIcon= document.createElement(\"i\");\n          let menuLi_div=document.createElement(\"div\");\n\n          p1.textContent = lecture.lecture_name;\n          p2.textContent = lecture.lecture_course;\n          p3.textContent = lecture.lecture_instructor;\n          p4.textContent = lecture.lecture_writer;\n          p5.textContent = lecture.lecture_date;\n          p_progression.textContent = String(Number(lecture.lecture_length)+\" (\"+Number(lecture.lecture_progress)+\" : \"+Number(lecture.lecture_length - lecture.lecture_progress)+\" | \"+progression_percent+\"%)\");\n\n            for(var i=0;i<lecture.lecture_outlines.length;i++){\n              let p=document.createElement(\"p\")\n              p.textContent=Number(i+1)+\") \"+lecture.lecture_outlines[i]\n              div_outline.append(p)\n            }\n\n          div_p1.setAttribute(\"class\",\"div_p_lectureName fc\")\n          div_pLi.setAttribute(\"class\", \"schoolPlanner_lectures_div_pLi\");\n          li.setAttribute(\"class\",\"schoolPlanner_lectures_li fc\")\n          li.setAttribute(\"id\", lecture._id + \"li\");\n          menu_showIcon.setAttribute(\"class\",\"fa fa-sharp fa-solid fa-bars\");\n          menu_showIcon.setAttribute(\"id\", lecture._id + \"menu_showIcon\");\n          menu_showIcon.setAttribute(\"title\",\"\")\n          menu_editIcon.setAttribute(\"title\",\"\")\n          menu_selectIcon.setAttribute(\"class\",\"fa fa-sharp fa-solid fa-check\");\n          menu_selectIcon.setAttribute(\"title\",\"\");\n          menu_selectIcon.setAttribute(\"id\",lecture._id+\"menu_selectIcon\")\n          menu_deleteIcon.setAttribute(\"class\",\"fa fa-sharp fa-solid fa-trash\");\n          menu_editIcon.setAttribute(\"class\",\"fa fa-sharp fa-solid fa-pencil\");\n          div_outline.setAttribute(\"class\",\"div_outline fc\")\n\n          checkBox_partOfPlan.type=\"checkbox\"\n          div_partOfPlan.setAttribute(\"class\",\"div_partOfPlan fc\")\n          checkBox_partOfPlan.setAttribute(\"id\",lecture._id +\"checkBox_partOfPlan\")\n\n          if(lecture.lecture_partOfPlan===true) checkBox_partOfPlan.checked=true\n        \n\n\n          div_indicatorBox_progression.setAttribute(\"class\",\"div_indicatorBox_progression\")\n          div_indicatorBox_progression.setAttribute(\"id\",lecture._id+\"div_indicatorBox_progression\")\n          div_indicator_progression.setAttribute(\"class\",\"div_indicator_progression\")\n          div_indicator_progression.setAttribute(\"id\",lecture._id+\"div_indicator_progression\")\n          ul_pages_finished.setAttribute(\"class\",\"ul_pages_finished\")\n          div_progression.setAttribute(\"class\",\"div_progression fc\")\n          \n          menu_div.setAttribute(\"class\",\"fr lecuturesTable_menu_div\");\n          menu_subdiv.setAttribute(\"class\",\"fr lecuturesTable_menu_subdiv\");\n          menu_subdiv.setAttribute(\"id\",lecture._id+\"menu_subdiv\");\n          menuLi_div.setAttribute(\"class\",\"menuLi_div fr\")\n          menuLi_div.setAttribute(\"id\", lecture._id + \"menuLi_div\");\n          menu_editIcon.setAttribute(\"id\",lecture._id+\"menu_editIcon\")\n\n          //........Progression logic\n          let progressionPercent_indicatorWidth_Ratio=150*progression_percent/100\n          div_indicator_progression.style.width=progressionPercent_indicatorWidth_Ratio+\"px\"\n          if(progression_percent<50) div_indicator_progression.style.backgroundColor=\"var(--red2)\"\n          //........  \n         //.......PagesFinished Logic\n         for(var i = 0;i<lecture.lecture_length;i++){\n          let pagenumber=Number(i+1)\n          let p_num = document.createElement(\"p\")\n          p_num.textContent=pagenumber\n          p_num.addEventListener(\"click\",()=>{\n            this.setState({\n              div_progression_isLoading:true\n            })\n            setTimeout(()=>{\n              console.log(lecture.lecture_pagesFinished)\n              if(lecture.lecture_pagesFinished.indexOf(pagenumber)==-1){\n                this.setPageFinishLecture(lecture,pagenumber)\n              }else{\n                this.setPageFinishLecture(lecture,pagenumber)\n              }\n        },1000)\n        })\n        for(var j = 0;j<lecture.lecture_pagesFinished.length;j++){\n          if(lecture.lecture_pagesFinished.indexOf(pagenumber)!==-1){\n            p_num.style.backgroundColor=\"var(--green4)\"\n            p_num.style.color=\"var(--white)\"\n            p_num.style.fontWeight=\"bold\"\n          }\n        }\n        ul_pages_finished.append(p_num)\n      }\n        //...........  \n          menu_showIcon.addEventListener(\"click\",()=>{\n          let menu_showIcon = document.getElementById(lecture._id + \"menu_showIcon\");\n          let menu_subdiv = document.getElementById(lecture._id + \"menu_subdiv\");\n            if(menu_showIcon.title ===\"\"){\n              menu_subdiv.style.width=\"16%\"\n              menu_showIcon.title=\"clicked\"\n            }else{\n              menu_subdiv.style.width=\"0\"\n              menu_showIcon.title=\"\"\n            }\n          })\n\n          //.............EDIT FUNCTION\n          menu_editIcon.addEventListener(\"click\", () => {\n            lectureInEdit=lecture\n            document.getElementById(lecture._id + \"menu_subdiv\").style.width=\"0\"\n            this.openAddLectureForm({\n              buttonName:\"Edit\",\n              _id:lecture._id,\n              lecture_name:lecture.lecture_name,\n              lecture_course:lecture.lecture_course,\n              lecture_instructor:lecture.lecture_instructor,\n              lecture_writer:lecture.lecture_writer,\n              lecture_date:lecture.lecture_date,\n              lecture_length:lecture.lecture_length,\n              lecture_progress:lecture.lecture_progress,\n              lecture_outlines:lecture.lecture_outlines,\n              lecture_partOfPlan:lecture.lecture_partOfPlan,\n              lecture_hidden:lecture.lecture_hidden\n            })\n          })\n\n          //................DELETE ONE LECTURE..........\n          menu_deleteIcon.addEventListener(\"click\", () => {\n            checkedLectures.push(lecture._id)\n            this.deleteLecture()\n           \n          })\n         \n\n          \n          menu_selectIcon.addEventListener(\"click\", () => {\n            let menu_selectIcon = document.getElementById(lecture._id + \"menu_selectIcon\");\n            let li = document.getElementById(lecture._id + \"li\");\n            if (menu_selectIcon.title === \"\") {\n              li.style.backgroundColor = \"var(--yellow)\";\n              menu_selectIcon.style.color = \"var(--yellow)\";\n              menu_selectIcon.title = \"clicked\";\n              if (checkedLectures.length > 0) {\n                for (var i = 0; i < checkedLectures.length; i++) {\n                  if (checkedLectures[i] === lecture._id) {\n                    checkedLectures.splice(i, 1);\n                  } else {\n                    checkedLectures.push(lecture._id);\n                    break;\n                  }\n                }\n              } else {\n                checkedLectures.push(lecture._id);\n              }\n            } else {\n              li.style.backgroundColor = \"var(--white2)\";\n              menu_selectIcon.style.color = \"var(--white2)\";\n              menu_selectIcon.title = \"\";\n              for (var i = 0; i < checkedLectures.length; i++) {\n                if (checkedLectures[i] === lecture._id) {\n                  checkedLectures.splice(i, 1);\n                }\n              }\n            }\n          });\n          //.......Check box\n          checkBox_partOfPlan.addEventListener(\"click\",()=>{\n            if(checkBox_partOfPlan.checked===true){\n              this.editLecture({\n                _id:lecture._id,\n                lecture_name:lecture.lecture_name,\n                lecture_course:lecture.lecture_course,\n                lecture_instructor:lecture.lecture_instructor,\n                lecture_writer:lecture.lecture_writer,\n                lecture_date:lecture.lecture_date,\n                lecture_length:lecture.lecture_length,\n                lecture_progress:lecture.lecture_progress,\n                lecture_pagesFinished:lecture.lecture_pagesFinished,\n                lecture_outlines:lecture.lecture_outlines,\n                lecture_partOfPlan:true,\n                lecture_hidden:lecture.lecture_hidden\n              })\n            }else{\n              this.editLecture({\n                _id:lecture._id,\n                lecture_name:lecture.lecture_name,\n                lecture_course:lecture.lecture_course,\n                lecture_instructor:lecture.lecture_instructor,\n                lecture_writer:lecture.lecture_writer,\n                lecture_date:lecture.lecture_date,\n                lecture_length:lecture.lecture_length,\n                lecture_progress:lecture.lecture_progress,\n                lecture_pagesFinished:lecture.lecture_pagesFinished,\n                lecture_outlines:lecture.lecture_outlines,\n                lecture_partOfPlan:false,\n                lecture_hidden:lecture.lecture_hidden\n              })\n            }\n         \n          })\n          //.........\n          div_progression.addEventListener(\"click\",()=>{\n            let div_progressionInHTML=document.getElementById(\"div_progression\")\n              let i_close=document.createElement(\"i\")\n              i_close.setAttribute(\"class\",\"fi fi-rr-cross-circle\")\n              div_progressionInHTML.innerHTML=\"\"\n              i_close.addEventListener(\"click\",()=>{\n                document.getElementById(\"div_progression\").style.display=\"none\"\n                ul.style.opacity=\"1\"\n                ul_pages_finished.style.padding=\"0px\"\n                div_progression.append(p_progression, div_indicatorBox_progression)\n              })\n              ul.style.opacity=\"0\"\n              ul_pages_finished.style.height=\"fit-content\"\n              ul_pages_finished.style.padding=\"10px\"\n              div_progressionInHTML.style.display=\"flex\"\n              div_progressionInHTML.append(i_close,p_progression, div_indicatorBox_progression,ul_pages_finished)\n          })\n          //...........\n          //.................\n          menu_subdiv.append(menu_deleteIcon,menu_editIcon,menu_selectIcon);\n          menu_div.append(menu_showIcon);\n          div_p1.append(p1)\n          div_pLi.append(p2,p3,p4,p5,div_progression)\n          div_indicatorBox_progression.append(div_indicator_progression)\n          div_progression.append(p_progression, div_indicatorBox_progression,ul_pages_finished)\n          li.append(div_pLi);\n          div_partOfPlan.appendChild(checkBox_partOfPlan)\n          if(lecture.lecture_outlines.length>0) li.append(div_outline)\n          menuLi_div.append(menu_subdiv,menu_div,div_p1,li,div_partOfPlan);\n          ul.prepend(menuLi_div);\n        }\n        });\n        if(lecture_sorted.length==0){\n          let p = document.createElement(\"p\")\n          p.textContent=\"There is no lectures available to show at this time\"\n          ul.style.alignItems=\"center\"\n          ul.style.justifyContent=\"center\"\n          p.style.color=\"var(--white)\"\n          p.style.fontSize=\"12px\"\n          p.style.padding=\"10px\"\n          p.setAttribute(\"id\",\"p_noLectures\")\n          ul.append(p);\n        }\n\n        return {\n          lecture_courses:lecture_courses,\n          jsonData:jsonData\n        }\n      }).then((object)=>{\n        course_pages=[]\n        let unique_lecture_courses = [...new Set(object.lecture_courses)];  \n        unique_lecture_courses.forEach((unique_lecture_course)=>{\n          let course_length = 0\n          let course_progress = 0\n          object.jsonData.schoolPlanner.lectures.forEach((lecture)=>{\n            if(lecture.lecture_course===unique_lecture_course && lecture.lecture_partOfPlan===true){\n              course_length= Number(course_length) + Number(lecture.lecture_length)\n              course_progress= Number(course_progress) + Number(lecture.lecture_progress)\n            }\n          })\n          course_pages.push({\n            course_name:unique_lecture_course,\n            course_length:course_length,\n            course_progress:course_progress,\n          })\n        })\n        this.calculateLectureNum()\n      })\n      .catch((err) => {\n        if (err.message === \"Cannot read property 'credentials' of null\")\n          console.log(\"Error\", err.message);\n      });\n\n    // });\n  };\n\n  //.........RETRIEVE COURSES.................\n   retrieveCourses = () => {\n    this.setState({\n      course_isLoading:true\n    })\n    let ul = document.getElementById(\"schoolPlanner_courses_ul\");\n    ul.innerHTML=\"\"\n    document.getElementById(\"schoolPlanner_courses_ul\").innerHTML=\"\";\n    let url = \"https://backendstep.onrender.com/api/user/update/\" + this.props.state.my_id;\n    let req = new Request(url, {\n      method: \"GET\",\n      mode: \"cors\",\n    });\n    fetch(req)\n      .then((response) => {\n        if (response.status === 200) {\n          this.setState({\n            course_isLoading:false\n          })\n          courseNames=[]\n          courseInstructorsNames=[]\n          courses_partOfPlan=[]\n          return response.json();\n        }\n      }).then((jsonData)=>{\n        courses=jsonData.schoolPlanner.courses\n        jsonData.schoolPlanner.courses.forEach((course) => { \n          //............PUSH COURSE NAME TO COURSENAMES...\n          if(course.course_name!==\"-\")courseNames.push(course.course_name)\n          course.course_instructors.forEach((instructor)=>{\n            courseInstructorsNames.push(instructor)\n          })\n          \n           courseNames_filtered = courseNames.filter((value,\n            index) => {\n              return courseNames.indexOf(value)===index\n            });\n           courseInstructorsNames_filtered = courseInstructorsNames.filter((value,\n            index) => {\n              return courseInstructorsNames.indexOf(value)===index\n            });\n          if(course.course_partOfPlan===true){ \n            courses_partOfPlan.push(course)\n          }\n          //..........................................\n          var sec_dayAndTime=document.createElement(\"section\")\n          if(course.course_dayAndTime.length>0){\n          var p_dayAndTime=[];\n          for(var i=0;i<course.course_dayAndTime.length;i++){\n            p_dayAndTime[i]  = document.createElement(\"p\");\n            p_dayAndTime[i].textContent=course.course_dayAndTime[i].day+\" \"+course.course_dayAndTime[i].time\n            sec_dayAndTime.append(p_dayAndTime[i]) \n          }\n        }else{\n          p_dayAndTime = document.createElement(\"p\");\n          p_dayAndTime.textContent=\"-\"\n          sec_dayAndTime.append(p_dayAndTime) \n        }\n          let p1 = document.createElement(\"p\");\n          let p3 = document.createElement(\"p\");\n          let p4 = document.createElement(\"p\");\n          let p5 = document.createElement(\"p\");\n          \n          let sec_instructors=document.createElement(\"section\");\n          for(var i=0;i<course.course_instructors.length;i++){\n            let p6 = document.createElement(\"p\");\n            p6.textContent=course.course_instructors[i]\n            sec_instructors.append(p6)\n          }\n\n          let p7 = document.createElement(\"p\");\n          let p8 = document.createElement(\"p\");\n          let p9 = document.createElement(\"p\");\n          let p10 = document.createElement(\"p\");\n          let p11 = document.createElement(\"p\");\n          let p12 = document.createElement(\"p\");\n\n\n          let label1 = document.createElement(\"label\");\n          let label2 = document.createElement(\"label\");\n          let label3 = document.createElement(\"label\");\n          let label4 = document.createElement(\"label\");\n          let label5 = document.createElement(\"label\");\n          let label6 = document.createElement(\"label\");\n          let label7 = document.createElement(\"label\");\n          let label8 = document.createElement(\"label\");\n          let label9 = document.createElement(\"label\");\n          let label10 = document.createElement(\"label\");\n          let label11 = document.createElement(\"label\");\n          let label12 = document.createElement(\"label\");\n\n\n\n          let div_pLi1 = document.createElement(\"div\");\n          let div_pLi2 = document.createElement(\"div\");\n          let div_pLi3 = document.createElement(\"div\");\n          let div_pLi4 = document.createElement(\"div\");\n          let div_pLi5 = document.createElement(\"div\");\n          let div_pLi6 = document.createElement(\"div\");\n          let div_pLi7 = document.createElement(\"div\");\n          let div_pLi8 = document.createElement(\"div\");\n          let div_pLi9 = document.createElement(\"div\");\n          let div_pLi10 = document.createElement(\"div\");\n          let div_pLi11 = document.createElement(\"div\");\n          let div_pLi12 = document.createElement(\"div\");\n\n\n          let div_pLi=document.createElement(\"div\")\n\n          \n          let li = document.createElement(\"li\");\n          let menu_div=document.createElement(\"div\");\n          let menu_selectIcon= document.createElement(\"i\");\n          let menu_deleteIcon= document.createElement(\"i\");\n          let menu_editIcon= document.createElement(\"i\");\n          let menu_partOfPlan= document.createElement(\"i\");\n\n\n          p1.textContent = course.course_name;\n          p3.textContent = course.course_term+\" \"+course.course_year;\n          p4.textContent = course.course_class;\n          p5.textContent = course.course_status;\n          p7.textContent = course.course_grade+\"/\"+course.course_fullGrade;\n          p8.textContent = course.course_progress+\"/\"+course.course_length+\" (\"+Number(course.course_progress/course.course_length*100).toFixed(0)+\n          \"%)\";\n          p9.textContent = course.exam_date;\n          p10.textContent = course.exam_time;\n\n          //....dateComputation\n          var examDateinMillisec=new Date(course.exam_date)\n          var diffDaysWithDecimals=(examDateinMillisec-todayDate)/86400000\n          var diffDaysWithoutDecimals = Math.floor(diffDaysWithDecimals)\n          var dayDecimals=diffDaysWithDecimals-diffDaysWithoutDecimals\n          var diffHoursWithDecimals = dayDecimals*24\n          var diffHoursWithoutDecimals =  Math.floor(diffHoursWithDecimals)\n          var hourDecimals=diffHoursWithDecimals - diffHoursWithoutDecimals\n          var diffMinsWithDecimals = hourDecimals*60\n          var diffMinsWithoutDecimals = Math.ceil(diffMinsWithDecimals)\n          //.............................\n          //....timeComputation\n          var examTime_hour = Number(String(course.exam_time).split(\":\")[0])\n          var examTime_mins = Number(String(course.exam_time).split(\":\")[1])\n          //....\n          p11.textContent = \"Due in \"+diffDaysWithoutDecimals+\" day(s) and \"+(diffHoursWithoutDecimals)+\" hour(s) and \" + (diffMinsWithoutDecimals)+\" min(s) with \"+ examTime_hour+\" more hour(s) and \"+examTime_mins+\" min(s) on the exam day\"\n          p12.textContent = Math.ceil(Number((course.course_length-course.course_progress)/(diffDaysWithoutDecimals+1)))\n\n          label1.textContent=\"Course name:\"\n          label2.textContent=\"Course time:\"\n          label3.textContent=\"Course year/term:\"\n          label4.textContent=\"Course class:\"\n          label5.textContent=\"Course status:\"\n          label6.textContent=\"Course instructors\"\n          label7.textContent=\"Course grade\"\n          label8.textContent=\"Course pages\"\n          label9.textContent=\"Exam date\"\n          label10.textContent=\"Exam time\"\n          label11.textContent=\"Exam due\"\n          label12.textContent=\"Target pages to study per day\"\n          \n          \n          div_pLi.setAttribute(\"class\", \"schoolPlanner_courses_div_pLi fc\");\n          li.setAttribute(\"class\",\"schoolPlanner_courses_li fr\")\n          li.setAttribute(\"id\", course._id + \"li\");\n\n          sec_dayAndTime.setAttribute(\"id\",\"schoolPlanner_courses_dayAndTime_div\")\n          sec_dayAndTime.setAttribute(\"class\",\"schoolPlanner_courses_dayAndTime_div\")\n          sec_instructors.setAttribute(\"class\",\"fc schoolPlanner_courses_instructors_div\")\n          menu_selectIcon.setAttribute(\"class\",\"fa fa-sharp fa-solid fa-check\");\n          menu_selectIcon.setAttribute(\"title\",\"\");\n          menu_selectIcon.setAttribute(\"id\",course._id+\"menu_selectIcon\")\n          menu_deleteIcon.setAttribute(\"class\",\"fa fa-sharp fa-solid fa-trash\");\n          menu_editIcon.setAttribute(\"class\",\"fa fa-sharp fa-solid fa-pencil\");\n          menu_editIcon.setAttribute(\"id\",course._id+\"menu_editIcon\")\n          menu_partOfPlan.setAttribute(\"class\",\"fi fi-rr-calendar-clock\");\n          menu_partOfPlan.setAttribute(\"id\",course._id+\"menu_partOfPlan\")\n          if(course.course_partOfPlan===true) menu_partOfPlan.style.color=\"yellow\"\n          if(course.course_partOfPlan===false) menu_partOfPlan.style.color=\"rgb(240, 242, 245)\"\n          \n          menu_div.setAttribute(\"class\",\"fc schoolPlanner_coursesLiMenu_div\");         \n\n          //................DELETE ONE course..........\n          menu_deleteIcon.addEventListener(\"click\", () => {\n            checkedCourses.push(course._id)\n            this.deleteCourse()\n           \n          })\n          //...............................................................\n          \n          //................EDIT ONE course..........\n          menu_editIcon.addEventListener(\"click\", () => {\n            target_editCourse=course._id\n            this.openAddCourseForm({\n              buttonName:\"Edit\",\n              course:course\n            })\n           \n          })\n          //................PartOfPlanIcon..........\n          menu_partOfPlan.addEventListener(\"click\", () => {\n            target_editCourse=course._id\n            let menu_partOfPlan_color=getComputedStyle(menu_partOfPlan).color\n            if(menu_partOfPlan_color===\"rgb(240, 242, 245)\"){\n            this.partOfPlanCourse(course,menu_partOfPlan.id,true)\n          }else{\n            this.partOfPlanCourse(course,menu_partOfPlan.id,false)\n          }\n          })\n          //...............................................................\n         \n          \n          menu_selectIcon.addEventListener(\"click\", () => {\n            let menu_selectIcon = document.getElementById(course._id + \"menu_selectIcon\");\n            let li = document.getElementById(course._id + \"li\");\n            if (menu_selectIcon.title === \"\") {\n              li.style.backgroundColor = \"var(--yellow)\";\n              menu_selectIcon.style.color = \"var(--yellow)\";\n              menu_selectIcon.title = \"clicked\";\n              if (checkedCourses.length > 0) {\n                for (var i = 0; i < checkedCourses.length; i++) {\n                  if (checkedCourses[i] === course._id) {\n                    checkedCourses.splice(i, 1);\n                  } else {\n                    checkedCourses.push(course._id);\n                    break;\n                  }\n                }\n              } else {\n                checkedCourses.push(course._id);\n              }\n            } else {\n              li.style.backgroundColor = \"var(--white2)\";\n              menu_selectIcon.style.color = \"var(--white2)\";\n              menu_selectIcon.title = \"\";\n              for (var i = 0; i < checkedCourses.length; i++) {\n                if (checkedCourses[i] === course._id) {\n                  checkedCourses.splice(i, 1);\n                }\n              }\n            }\n          });\n\n          div_pLi1.append(label1,p1)\n          div_pLi2.append(label2,sec_dayAndTime)\n          div_pLi3.append(label3,p3)\n          div_pLi4.append(label4,p4)\n          div_pLi5.append(label5,p5)\n          div_pLi6.append(label6,sec_instructors)\n          div_pLi7.append(label7,p7)\n          div_pLi8.append(label8,p8)\n          div_pLi9.append(label9,p9)\n          div_pLi10.append(label10,p10)\n          div_pLi11.append(label11,p11)\n          div_pLi12.append(label12,p12)\n\n          menu_div.append(menu_deleteIcon,menu_selectIcon,menu_editIcon,menu_partOfPlan);\n          div_pLi.append(div_pLi1,div_pLi2,div_pLi3,div_pLi4,div_pLi5,div_pLi6,div_pLi7,div_pLi8,div_pLi9,div_pLi10,div_pLi11,div_pLi12)\n          li.append(div_pLi,menu_div);\n          ul.prepend(li);\n        })\n        if(jsonData.schoolPlanner.courses.length==0){\n          let p = document.createElement(\"p\")\n          p.textContent=\"There is no courses available to show at this time\"\n          ul.style.alignItems=\"center\"\n          ul.style.justifyContent=\"center\"\n          p.style.color=\"var(--white)\"\n          p.style.fontSize=\"12px\"\n          p.style.textAlign=\"center\"\n          p.style.padding=\"10px\"\n          ul.append(p);\n        }\n      }).then(()=>{\n        console.log(courses_partOfPlan)\n        //....TO ADD COURSE NAMES OPTIONS TO SELECT COURSE IN LECTURE ADD FORM \n          var select_courseNames=document.getElementById(\"schoolPlanner_addLecture_course_input\")\n          select_courseNames.innerHTML=\" <option selected disabled>Lecture course</option>\"\n            for(var i=0;i<courseNames_filtered.length;i++){\n                  let option=document.createElement(\"option\")\n                  option.innerHTML=courseNames_filtered[i];\n                  select_courseNames.append(option)\n                }\n            var select_courseInstructorsNames=document.getElementById(\"schoolPlanner_addLecture_instructorName_input\")\n            select_courseInstructorsNames.innerHTML=\" <option selected disabled>Lecture instructor name</option>\"\n            for(var i=0;i<courseInstructorsNames_filtered.length;i++){\n                  let option=document.createElement(\"option\")\n                  option.innerHTML=courseInstructorsNames_filtered[i];\n                  select_courseInstructorsNames.append(option)\n                }\n      })\n  };\n  //.............................................\n\n   deleteLecture = async () => {\n    //......DELETEING item FROM itemS DB\n    for (var i = 0; i < checkedLectures.length; i++) {\n      console.log(checkedLectures[i])\n      let url =\n        \"https://backendstep.onrender.com/api/user/deleteLecture/\"+ this.props.state.my_id +\"/\" + checkedLectures[i];\n      let options = {\n        method: \"DELETE\", \n        mode: \"cors\",\n        headers: {\n          Authorization: \"Bearer \" + this.props.state.token,\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      let req = new Request(url, options);\n      await fetch(req).then((result)=>{\n        if(result.status===201){\n        document.getElementById(checkedLectures[i]+\"menuLi_div\").remove()\n      }\n      });\n    }\n\n    checkedLectures = [];\n  };\n\n  //.............DELETE COURSE.....................\n   deleteCourse = async () => {\n    console.log(checkedCourses)\n    //......DELETEING item FROM itemS DB\n    for (var i = 0; i < checkedCourses.length; i++) {\n      let url =\n        \"https://backendstep.onrender.com/api/user/deleteCourse/\"+ this.props.state.my_id +\"/\" + checkedCourses[i];\n      let options = {\n        method: \"DELETE\", \n        mode: \"cors\",\n        headers: {\n          Authorization: \"Bearer \" + this.props.state.token,\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      let req = new Request(url, options);\n      await fetch(req).then((result)=>{\n        if(result.status===201){\n        document.getElementById(checkedCourses[i]+\"li\").remove()\n      }\n      });\n    }\n\n    checkedCourses = [];\n  };\n  //...............................................\n  //..............EDIT COURSE....................\n  editCourse = (object) => {\n      let url =\n        \"https://backendstep.onrender.com/api/user/editCourse/\"+ this.props.state.my_id +\"/\" + target_editCourse;\n      let options = {\n        method: \"POST\", \n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          course_name:object.course_name,\n          course_component:object.course_component,\n          course_dayAndTime:courseDayAndTime,\n          course_term:object.course_term,\n          course_year:object.course_year,\n          course_class:object.course_class,\n          course_status:object.course_status,\n          course_instructors:courseInstructorsNames,\n          course_grade:object.course_grade,\n          course_fullGrade:object.course_fullGrade,\n          course_length:object.course_length,\n          course_progress:object.course_progress,\n          course_partOfPlan:false,\n          exam_date:object.exam_date,\n          exam_time:object.exam_time\n        }),\n      };\n      let req = new Request(url, options);\n      fetch(req).then((result)=>{\n        if(result.status===201){\n          this.retrieveLectures()\n          document.getElementById(\"schoolPlanner_addCourse_div\").style.display =\n          \"none\";\n          document.getElementById(\"schoolPlanner_lectures_labelsUl_container\").style.opacity=1\n      }\n      });\n  };\n  //..............PartofPlan COURSE....................\n  partOfPlanCourse = (object,partOfPlanID,boolean) => {\n    document.getElementById(\"schoolPlanner_addCourse_div\").style.display =\n      \"none\";\n      let url =\n        \"https://backendstep.onrender.com/api/user/editCourse/\"+ this.props.state.my_id +\"/\" + target_editCourse;\n      let options = {\n        method: \"POST\", \n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          course_name:object.course_name,\n          course_component:object.course_component,\n          course_dayAndTime:object.course_component,\n          course_term:object.course_term,\n          course_year:object.course_year,\n          course_class:object.course_class,\n          course_status:object.course_status,\n          course_instructors:object.course_instructors,\n          course_grade:object.course_grade,\n          course_fullGrade:object.course_fullGrade,\n          course_length:object.course_length,\n          course_progress:object.course_progress,\n          course_progress:object.course_progress,\n          course_partOfPlan:boolean,\n          exam_date:object.exam_date,\n          exam_time:object.exam_time\n        }),\n      };\n      let req = new Request(url, options);\n      fetch(req).then((result)=>{\n        if(result.status===201){\n          this.retrieveLectures()\n          this.retrieveCourses()\n      }\n      });\n  };\n  //...............................................\n//..............EDIT COURSE....................\neditCoursePages = async () => {\n  this.setState({\n    course_isLoading:true\n  })\n  for(var i = 0;i<course_pages.length;i++){\n    let url =\n      \"https://backendstep.onrender.com/api/user/editCoursePages/\"+ this.props.state.my_id +\"/\" + course_pages[i].course_name;\n    let options = {\n      method: \"POST\", \n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        course_length:course_pages[i].course_length,\n        course_progress:course_pages[i].course_progress\n      }),\n    };\n    let req = new Request(url, options);\n    await fetch(req).then((result)=>{\n      if(result.status===201){\n        this.setState({\n          course_isLoading:false\n        })\n        if(i===course_pages.length-1) this.retrieveCourses()\n    }\n    });\n  }\n};\n//...............................................\n\n//......................................\n\n  //......................................\n\n\n  //........................EDIT item......................\n   editLecture = (object) => {\n    this.setState({\n      lecture_isLoading:true\n    })\n    let url = \"https://backendstep.onrender.com/api/user/editLecture/\"+ this.props.state.my_id+\"/\"+object._id;\n    let options = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.state.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(object),\n    };\n    let req = new Request(url, options);\n    fetch(req).then((lecture)=>{\n      if(lecture.status===201){ \n        this.setState({\n          lecture_isLoading:false\n        })\n        lectureInEdit={}\n        document.getElementById(\"schoolPlanner_addLecture_div\").style.display=\"none\"\n        document.getElementById(\"schoolPlanner_lectures_labelsUl_container\").style.opacity=1\n        this.retrieveLectures()\n      }})\n  };\n  //..............EDIT COURSE PAGES............\n  //........................ADD item.......................\n   addLecture = (object) => {\n    if (!object.lecture_name) object.lecture_name=\"-\"\n    if (object.lecture_course===\"Lecture course\") object.lecture_course=\"-\"\n    if (object.lecture_instructor===\"Lecture instructor name\")  object.lecture_instructor=\"-\"\n    if (!object.lecture_writer)  object.lecture_writer=\"-\"\n    if (!object.lecture_date)  object.lecture_date=\"-\"\n    if (!object.lecture_length)  object.lecture_length=0\n    if (!object.lecture_progress)  object.lecture_progress=0\n    let url = \"https://backendstep.onrender.com/api/user/addLecture/\"+ this.props.state.my_id;\n    let options = {\n      method: \"POST\",\n      mode: \"cors\",\n      body: JSON.stringify(object),\n      headers: {\n        Authorization: \"Bearer \" + this.props.state.token,\n        \"Content-Type\": \"application/json\",\n      },\n  \n    };\n    let req = new Request(url, options);\n    fetch(req).then((lecture)=>{\n      if(lecture.status===201){ \n        document.getElementById(\"schoolPlanner_addLecture_div\").style.display=\"none\"\n        document.getElementById(\"schoolPlanner_lectures_labelsUl_container\").style.opacity=1\n        document.getElementById(\"schoolPlanner_lectures_ul\").style.justifyContent=\"start\"\n        this.retrieveLectures()\n      }})\n  };\n\n  //.........ADD COURSE............\n   addCourse = (object) => {\n    if (object.course_name){\n    if (object.course_component===\"Course component\")  object.course_component=\"-\"\n    if (object.course_year===\"Course year\")  object.course_year=\"-\"\n    if (object.course_term===\"Course term\")  object.course_term=\"-\"\n    if (object.course_class===\"Course classification\")  object.course_class=\"-\"\n    if (object.course_status===\"Course status\")  object.course_status=\"-\"\n\n    let url = \"https://backendstep.onrender.com/api/user/addCourse/\"+ this.props.state.my_id;\n    let options = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.state.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        course_name:object.course_name,\n        course_component:object.course_component,\n        course_dayAndTime:courseDayAndTime,\n        course_year:object.course_year,\n        course_term:object.course_term,\n        course_class:object.course_class,\n        course_status:object.course_status,\n        course_instructors:courseInstructorsNames,\n        course_grade:object.course_grade,\n        course_fullGrade:object.course_fullGrade,\n        course_length: {},\n        course_progress: {},\n        exam_date:object.exam_date,\n        exam_time:object.exam_time\n      }),\n    };\n    let req = new Request(url, options);\n    fetch(req).then((course)=>{\n      if(course.status===201){ \n        document.getElementById(\"schoolPlanner_addCourse_div\").style.display=\"none\";\n        document.getElementById(\"schoolPlanner_lectures_labelsUl_container\").style.opacity=1\n        document.getElementById(\"schoolPlanner_courses_ul\").innerHTML=\"\";\n        document.getElementById(\"schoolPlanner_courses_ul\").style.justifyContent=\"start\"\n        this.retrieveCourses()\n      }})\n    }else{\n    this.props.serverReply(\"Posting failed. Please add course name\")}\n  };\n  render() {\n\n  return (\n    <React.Fragment>\n    <article id=\"schoolPlanner_article\" className='fr'>\n      <div className='fr' id=\"schoolPlanner_coursesLectures_wrapper\">\n      <aside id=\"schoolPlanner_courses_aside\" className='fc'>\n      {this.state.course_isLoading === true && (\n                <div id=\"course_loaderImg\" className=\"loaderImg_div fc\">\n                  <img src=\"/img/loader.gif\" alt=\"\" width=\"50px\" />\n                </div>\n              )}\n        <nav id=\"schoolPlanner_courses_nav\" className=\"fr\">\n          <div className=\"fc\" id=\"schoolPlanner_courses_refresh_div\">\n            <i class=\"fi fi-rr-refresh\" id=\"schoolPlanner_courses_refresh_i\" onClick={()=>this.editCoursePages()}></i>\n          </div>\n          <button onClick={()=>this.openAddCourseForm({\n        buttonName:\"Add\"\n      })}>Add course</button>\n          <button onClick={() => this.deleteCourse()}>Delete course</button>\n        </nav>\n        <div id=\"schoolPlanner_courses_ulLabels_div\">\n                    <label>Coursess</label>\n                  </div>\n        <ul id=\"schoolPlanner_courses_ul\" className='fc'>\n        </ul>\n        {}\n      </aside>\n      <div id=\"schoolPlanner_coursesDoor_div\" className='fc'>\n        <i class=\"fi fi-rr-angle-left\" id=\"schoolPlanner_coursesDoor_open_button\" onClick={()=>{\n          document.getElementById(\"schoolPlanner_courses_aside\").style.width=0\n          document.getElementById(\"schoolPlanner_coursesDoor_open_button\").style.display=\"none\"\n          document.getElementById(\"schoolPlanner_coursesDoor_close_button\").style.display=\"inline\"\n        }}></i> \n        <i class=\"fi fi-rr-angle-right\" style={{display:\"none\"}} id=\"schoolPlanner_coursesDoor_close_button\" onClick={()=>{\n          document.getElementById(\"schoolPlanner_courses_aside\").style.width=\"inherit\"\n          document.getElementById(\"schoolPlanner_coursesDoor_open_button\").style.display=\"inline\"\n          document.getElementById(\"schoolPlanner_coursesDoor_close_button\").style.display=\"none\"\n        }}></i>\n      </div>\n      <section id=\"schoolPlanner_lectures_section\">\n              <nav id=\"schoolPlanner_lectures_nav\" className=\"fr\">\n                <button onClick={()=>this.openAddLectureForm({\n                    buttonName:\"Add\"\n                })}>Add lecture</button>\n                <button\n                  onClick={() => this.deleteLecture(checkedLectures)}\n                >\n                  Delete lecture\n                </button>\n                <button id=\"schoolPlanner_lectures_hideUnchecked_button\" onClick={()=>this.hideUncheckedLectures()}>Hide unchecked lectures</button>\n                <button id=\"schoolPlanner_lectures_unhideUnchecked_button\" onClick={()=>this.unhideUncheckedLectures()}>Unhide unchecked lectures</button>\n                <button id=\"schoolPlanner_lectures_rtl_button\" onClick={()=>{\n                  let schoolPlanner_lectures_tableLabels_section = document.getElementById(\"schoolPlanner_lectures_tableLabels_section\")\n                  let schoolPlanner_lectures_ul = document.getElementById(\"schoolPlanner_lectures_ul\")\n                  if(getComputedStyle(schoolPlanner_lectures_tableLabels_section).paddingRight===\"29px\"){\n                    schoolPlanner_lectures_tableLabels_section.style.paddingRight=\"35.33px\"\n                    schoolPlanner_lectures_tableLabels_section.style.paddingLeft=\"29px\"\n                    for (var i = 0;i<schoolPlanner_lectures_tableLabels_section.children.length;i++){\n                      schoolPlanner_lectures_tableLabels_section.children[i].style.order=schoolPlanner_lectures_tableLabels_section.children.length-Number(1+i)\n                    }\n                    for (var i = 0;i<schoolPlanner_lectures_tableLabels_section.children[1].children.length;i++){\n                      schoolPlanner_lectures_tableLabels_section.children[1].children[i].style.order=schoolPlanner_lectures_tableLabels_section.children[1].children.length-Number(1+i)\n                    }\n                    for (var i = 0;i<schoolPlanner_lectures_ul.children.length;i++){\n                      console.log(schoolPlanner_lectures_ul.children[i].children[0])\n                      schoolPlanner_lectures_ul.children[i].children[0].style.left=\"inherit\"\n                      schoolPlanner_lectures_ul.children[i].children[0].style.right=0\n                      schoolPlanner_lectures_ul.children[i].children[0].style.paddingLeft=\"0px\"\n                      schoolPlanner_lectures_ul.children[i].children[0].style.paddingRight=\"30px\"\n                      schoolPlanner_lectures_ul.children[i].children[0].style.justifyContent=\"start\"\n                      for(var j = 0;j<  schoolPlanner_lectures_ul.children[i].children.length;j++){\n                        schoolPlanner_lectures_ul.children[i].children[j].style.order= schoolPlanner_lectures_ul.children[i].children.length-Number(1+j)\n                        for(var z = 0;z< schoolPlanner_lectures_ul.children[i].children[3].children[0].children.length;z++){\n                          schoolPlanner_lectures_ul.children[i].children[3].children[0].children[z].style.order= schoolPlanner_lectures_ul.children[i].children[3].children.length-Number(1+z)\n                        }\n                      }\n                    }\n                  }else{\n                    schoolPlanner_lectures_tableLabels_section.style.paddingRight=\"29px\"\n                    schoolPlanner_lectures_tableLabels_section.style.paddingLeft=\"35.33px\"\n                    for (var i = 0;i<schoolPlanner_lectures_tableLabels_section.children.length;i++){\n                      schoolPlanner_lectures_tableLabels_section.children[i].style.order=i\n                    }\n                    for (var i = 0;i<schoolPlanner_lectures_tableLabels_section.children[1].children.length;i++){\n                      schoolPlanner_lectures_tableLabels_section.children[1].children[i].style.order=i\n                    }\n                    for (var i = 0;i<schoolPlanner_lectures_ul.children.length;i++){\n                      console.log(schoolPlanner_lectures_ul.children[i].children[0])\n                      schoolPlanner_lectures_ul.children[i].children[0].style.left=0\n                      schoolPlanner_lectures_ul.children[i].children[0].style.right=\"inherit\"\n                      schoolPlanner_lectures_ul.children[i].children[0].style.paddingLeft=\"30px\"\n                      schoolPlanner_lectures_ul.children[i].children[0].style.paddingRight=\"0px\"\n                      schoolPlanner_lectures_ul.children[i].children[0].style.justifyContent=\"end\"\n                      for(var j = 0;j<  schoolPlanner_lectures_ul.children[i].children.length;j++){\n                        schoolPlanner_lectures_ul.children[i].children[j].style.order= j\n                        for(var z = 0;z< schoolPlanner_lectures_ul.children[i].children[3].children.length;z++){\n                          schoolPlanner_lectures_ul.children[i].children[3].children[z].style.order= z\n                        }\n                      }\n                    }\n                  }\n                }}>\n                Right to Left\n                </button>\n                <div id=\"schoolPlanner_lectures_search_div\" className='fr'>\n                <input placeholder='search' id=\"schoolPlanner_lectures_search_input\" \n                onKeyUp={(event)=>{\n                  if(event.key===\"Enter\"){\n                    event.preventDefault();\n                    this.retrieveLecturesSearched(document.getElementById(\"schoolPlanner_lectures_search_input\").value)\n                  }\n                  } \n                }\n                onChange={()=>{\n                  if(document.getElementById(\"schoolPlanner_lectures_search_input\").value===\"\") this.retrieveLectures()\n                  }\n                }\n                />\n                <button id=\"schoolPlanner_lectures_search_button\" onClick={()=>{this.retrieveLecturesSearched(document.getElementById(\"schoolPlanner_lectures_search_input\").value)}}>\n                <i class=\"fi fi-rr-search\"></i>\n                </button>\n                </div>\n              </nav>\n              <section id=\"schoolPlanner_lectures_labelsUl_container\" className='fc'>\n                {this.state.lecture_isLoading === true && (\n                  <div id=\"lecture_loaderImg\" className=\"loaderImg_div fc\">\n                    <img src=\"/img/loader.gif\" alt=\"\" width=\"50px\" />\n                  </div>\n                )}\n                <section id=\"schoolPlanner_lectures_tableLabels_section\" className='fr'>\n                  <label id=\"schoolPlanner_lectures_tableLabel_lectureName\">Lecture title</label>\n                  <div id=\"schoolPlanner_lectures_tableLabels_div\">\n                      <label>Lecture course</label>\n                      <label>Instructor name</label>\n                      <label>Writer name</label>\n                      <label>Date</label>\n                      <label>Progression</label>\n                  </div>\n                </section>\n                <ul id=\"schoolPlanner_lectures_ul\"></ul>\n              </section>\n              <div id=\"schoolPlanner_lectures_num_div\" className='fr'>\n                <label id=\"schoolPlanner_lectures_num_label\">\n                  Number of lectures shown:\n                </label>\n                <p id=\"schoolPlanner_lectures_num_p\"></p>\n              </div>\n              {/* <ul id=\"telegram_messages\" className='fc'>\n              </ul> */}\n              {/* <div id=\"telegram_messages_count_div\" className='fr'>\n                <p id=\"telegram_messages_count_p1\">Number of messages: </p>\n                <p id=\"telegram_messages_count_p2\"></p>\n              </div> */}\n      </section>\n      </div>\n      <div id=\"schoolPlanner_planDoor_div\" className='fc'>\n        <i class=\"fi fi-rr-calendar-clock\" onClick={()=>{\n          let schoolPlanner_plan_days_wrapper=document.getElementById(\"schoolPlanner_plan_days_wrapper\")\n          let schoolPlanner_plan_aside = document.getElementById(\"schoolPlanner_plan_aside\")\n          let schoolPlanner_coursesLectures_wrapper= document.getElementById(\"schoolPlanner_coursesLectures_wrapper\")\n          let schoolPlanner_plan_aside_width = getComputedStyle(schoolPlanner_plan_aside).width\n        \n          schoolPlanner_plan_days_wrapper.innerHTML=\"\"\n          if(schoolPlanner_plan_aside_width===\"0px\"){\n            schoolPlanner_plan_aside.style.width=\"100vw\"  \n            schoolPlanner_coursesLectures_wrapper.style.width=\"0\" \n            if(courses_partOfPlan.length>0){   \n              console.log(courses_partOfPlan)\n              let coursesDays=[]\n              courses_partOfPlan.forEach((course)=>{\n                var examDateinMillisec=new Date(course.exam_date)\n                var diffDaysWithDecimals=(examDateinMillisec-todayDate)/86400000\n                var diffDaysWithoutDecimals = Math.floor(diffDaysWithDecimals)\n                coursesDays.push(diffDaysWithoutDecimals)\n              })\n              let highestNum = coursesDays.sort(function compareNumbers(a, b) {\n                return b - a;\n              })[0]+1\n              for(var i = 0;i<highestNum;i++){\n                let p_dayNum = document.createElement(\"p\")\n                p_dayNum.setAttribute(\"class\", \"plan_p_dayNum\")\n                if(i==0) p_dayNum.textContent=\"Today\"\n                if(i==1) p_dayNum.textContent=\"Tomorrow\"\n                if(i==2) p_dayNum.textContent=\"The day after tomorrow\"\n                if(i>2) p_dayNum.textContent=\"Day \"+Number(i+1)\n                let div_day=document.createElement(\"div\")\n                div_day.setAttribute(\"class\",\"schoolPlanner_plan_days_div\")\n                div_day.append(p_dayNum)\n                schoolPlanner_plan_days_wrapper.append(div_day)\n              }\n              courses_partOfPlan.forEach((course)=>{\n                var examDateinMillisec=new Date(course.exam_date)\n                var diffDaysWithDecimals=(examDateinMillisec-todayDate)/86400000\n                var diffDaysWithoutDecimals = Math.floor(diffDaysWithDecimals+1)\n                for(var j = 0;j<diffDaysWithoutDecimals;j++){\n                  let pageNum = Math.ceil(Number((course.course_length-course.course_progress)/diffDaysWithoutDecimals))\n                  let p_courseName = document.createElement(\"p\")\n                  let p_coursePagesPerDay = document.createElement(\"p\")\n                  let div_course=document.createElement(\"div\")\n                  div_course.setAttribute(\"class\", \"fr plan_div_course\")\n                  p_courseName.textContent=course.course_name\n                  if(pageNum!==0) p_coursePagesPerDay.textContent=pageNum+\" page\"\n                  if(pageNum==0) p_coursePagesPerDay.textContent=\"Done\"\n                  div_course.append(p_courseName,p_coursePagesPerDay)\n                  schoolPlanner_plan_days_wrapper.children[j].append(div_course)\n                }\n              })\n              let totalPagesInDays = []\n              for(var i = 0;i<schoolPlanner_plan_days_wrapper.children.length;i++){\n                let totalPagesPerDay =0\n                for(var j = 1;j<schoolPlanner_plan_days_wrapper.children[i].children.length;j++){\n                  var str = schoolPlanner_plan_days_wrapper.children[i].children[j].children[1].textContent;\n                  var matches = str.match(/(\\d+)/);\n                  if (matches) {\n                    totalPagesPerDay+=Number(matches[0]);\n                  }\n                }\n                let p_total = document.createElement(\"p\")\n                p_total.textContent=\"Total pages: \" + totalPagesPerDay\n                p_total.setAttribute(\"class\",\"plan_p_total\")\n                schoolPlanner_plan_days_wrapper.children[i].append(p_total)\n              }            \n            //...........   \n          }else{\n            let p = document.createElement(\"p\")\n            p.textContent=\"There is no plans available to show at this time\"\n            schoolPlanner_plan_days_wrapper.style.alignItems=\"center\"\n            schoolPlanner_plan_days_wrapper.style.justifyContent=\"center\"\n            p.style.color=\"var(--white)\"\n            p.style.fontSize=\"12px\"\n            p.style.padding=\"10px\"\n            p.setAttribute(\"id\",\"p_noPlans\")\n            schoolPlanner_plan_days_wrapper.append(p);\n          }\n        }else{\n          schoolPlanner_coursesLectures_wrapper.style.width=\"100%\"\n          schoolPlanner_plan_aside.style.width=\"0\"  \n        }\n        }}></i>\n      </div>\n      <aside id=\"schoolPlanner_plan_aside\" style={{width:\"0px\"}} className='fc'>\n        <div id=\"schoolPlanner_plan_wrapper\" className='fc'>\n          <ul id=\"schoolPlanner_plan_days_wrapper\"></ul>\n        </div>\n      </aside>\n      <div id=\"schoolPlanner_addLecture_div\" className=\"fc\">\n        <label onClick={this.closeAddLectureForm}>Close</label>\n        <form id=\"schoolPlanner_addLecture_form\" className=\"fc\">\n          <input\n            id=\"schoolPlanner_addLecture_name_input\"\n            placeholder=\"Lecture name\"\n          />\n          <select id=\"schoolPlanner_addLecture_course_input\">\n          <option selected disabled>Lecture course</option>\n          </select>\n          <select id=\"schoolPlanner_addLecture_instructorName_input\">\n          <option selected disabled>Lecture instructor name</option>\n          </select>\n          <input\n            id=\"schoolPlanner_addLecture_writerName_input\"\n            placeholder=\"Lecture writer name\"\n          />\n          <input id=\"schoolPlanner_addLecture_date_input\" type=\"date\"/>\n          <input\n            id=\"schoolPlanner_addLecture_length_input\"\n            placeholder=\"Lecture length\"\n          />\n          <div id=\"schoolPlanner_addLecture_outlines_div\" className='fr'>\n            <div className='fc'>\n            <textarea\n            id=\"schoolPlanner_addLecture_outlines_input\"\n            placeholder=\"Lecture outline\"\n          />\n          <ul id=\"schoolPlanner_addLecture_outlines_ul\" className='fr'>\n          </ul>\n            </div>\n            <label onClick={()=>{this.addLectureOutline()}}>add</label>\n      </div>\n            \n              </form>\n              <label id=\"schoolPlanner_addLecture_addButton_label\"\n                onClick={() =>{\n                  let buttonName=document.getElementById(\"schoolPlanner_addLecture_addButton_label\").textContent\n                  let lecture_name= document.getElementById(\n                    \"schoolPlanner_addLecture_name_input\"\n                  ).value\n                  let lecture_course= document.getElementById(\n                    \"schoolPlanner_addLecture_course_input\"\n                  ).value\n                  let lecture_instructor= document.getElementById(\n                    \"schoolPlanner_addLecture_instructorName_input\"\n                  ).value\n                  let lecture_writer= document.getElementById(\n                    \"schoolPlanner_addLecture_writerName_input\"\n                  ).value\n                  let lecture_date=  document.getElementById(\n                    \"schoolPlanner_addLecture_date_input\"\n                  ).value\n                  let lecture_length= document.getElementById(\n                    \"schoolPlanner_addLecture_length_input\"\n                  ).value\n\n                  if(buttonName===\"Add\"){\n                  this.addLecture({\n                    lecture_name:lecture_name,\n                    lecture_course:lecture_course,\n                    lecture_instructor:lecture_instructor,\n                    lecture_writer:lecture_writer,\n                    lecture_date:lecture_date,\n                    lecture_length:lecture_length,\n                    lecture_progress:{},\n                    lecture_pagesFinished:[],\n                    lecture_outlines: [],\n                    lecture_partOfPlan:true,\n                    lecture_hidden:false,\n                  }\n                  )\n                }\n                if(buttonName===\"Edit\"){\n                  this.editLecture({\n                    _id:selectedLecture,\n                    lecture_name:lecture_name,\n                    lecture_course:lecture_course,\n                    lecture_instructor:lecture_instructor,\n                    lecture_writer:lecture_writer,\n                    lecture_date:lecture_date,\n                    lecture_length:lecture_length,\n                    lecture_progress:lectureInEdit.lecture_progress,\n                    lecture_pagesFinished:lectureInEdit.lecture_pagesFinished,\n                    lecture_outlines:lectureOutlines,\n                    lecture_partOfPlan:lectureInEdit.lecture_partOfPlan,\n                    lecture_hidden:lectureInEdit.lecture_hidden\n\n                  })\n                }\n                }\n              }\n              >\n                Add\n              </label>\n      </div>\n      <div id=\"schoolPlanner_addCourse_div\" className=\"fc\">\n        <label onClick={this.closeAddCourseForm}>Close</label>\n        <form id=\"schoolPlanner_addCourse_form\" className=\"fc\">\n          <input\n            id=\"schoolPlanner_addCourse_name_input\"\n            placeholder=\"Course name\"\n          />\n          <select id=\"schoolPlanner_addCourse_component_input\">\n            <option selected=\"true\" disabled=\"disabled\">Course component</option>\n            <option>In-class</option>\n            <option>Out-of-class</option>\n          </select>\n          <div id=\"schoolPlanner_addCourse_dayAndTime_div\" className='fr'>\n            <section id=\"schoolPlanner_addCourse_dayAndTime_input_section\" className='fc'>\n              <div className='fc'>\n              <select id=\"schoolPlanner_addCourse_day_input\">\n                <option selected=\"true\" disabled=\"disabled\">Course day</option>\n                <option>Sunday</option>\n                <option>Monday</option>\n                <option>Tuesday</option>\n                <option>Wednesday</option>\n                <option>Thursday</option>\n                <option>Friday</option>\n                <option>Saturday</option>\n              </select>\n            <input\n              id=\"schoolPlanner_addCourse_time_input\"\n              type=\"time\"\n            />\n            </div>\n            <ul id=\"schoolPlanner_addCourse_dayAndTime_ul\" className='fr'></ul>\n          </section>\n          <div id=\"schoolPlanner_addCourse_dayAndTime_label\">\n          <label onClick={()=>{\n          this.addCourseDayAndTime({\n              day:document.getElementById(\"schoolPlanner_addCourse_day_input\").value,\n              time:document.getElementById(\"schoolPlanner_addCourse_time_input\").value\n          })\n          }}>add</label>\n          </div>\n              \n                </div>\n                <select class=\"form-select\" name=\"year\" id=\"schoolPlanner_addCourse_year_input\">\n                      <option selected=\"true\" disabled=\"disabled\">Course year</option>\n                      <option value=\"1940\">1940</option>\n                      <option value=\"1941\">1941</option>\n                      <option value=\"1942\">1942</option>\n                      <option value=\"1943\">1943</option>\n                      <option value=\"1944\">1944</option>\n                      <option value=\"1945\">1945</option>\n                      <option value=\"1946\">1946</option>\n                      <option value=\"1947\">1947</option>\n                      <option value=\"1948\">1948</option>\n                      <option value=\"1949\">1949</option>\n                      <option value=\"1950\">1950</option>\n                      <option value=\"1951\">1951</option>\n                      <option value=\"1952\">1952</option>\n                      <option value=\"1953\">1953</option>\n                      <option value=\"1954\">1954</option>\n                      <option value=\"1955\">1955</option>\n                      <option value=\"1956\">1956</option>\n                      <option value=\"1957\">1957</option>\n                      <option value=\"1958\">1958</option>\n                      <option value=\"1959\">1959</option>\n                      <option value=\"1960\">1960</option>\n                      <option value=\"1961\">1961</option>\n                      <option value=\"1962\">1962</option>\n                      <option value=\"1963\">1963</option>\n                      <option value=\"1964\">1964</option>\n                      <option value=\"1965\">1965</option>\n                      <option value=\"1966\">1966</option>\n                      <option value=\"1967\">1967</option>\n                      <option value=\"1968\">1968</option>\n                      <option value=\"1969\">1969</option>\n                      <option value=\"1970\">1970</option>\n                      <option value=\"1971\">1971</option>\n                      <option value=\"1972\">1972</option>\n                      <option value=\"1973\">1973</option>\n                      <option value=\"1974\">1974</option>\n                      <option value=\"1975\">1975</option>\n                      <option value=\"1976\">1976</option>\n                      <option value=\"1977\">1977</option>\n                      <option value=\"1978\">1978</option>\n                      <option value=\"1979\">1979</option>\n                      <option value=\"1980\">1980</option>\n                      <option value=\"1981\">1981</option>\n                      <option value=\"1982\">1982</option>\n                      <option value=\"1983\">1983</option>\n                      <option value=\"1984\">1984</option>\n                      <option value=\"1985\">1985</option>\n                      <option value=\"1986\">1986</option>\n                      <option value=\"1987\">1987</option>\n                      <option value=\"1988\">1988</option>\n                      <option value=\"1989\">1989</option>\n                      <option value=\"1990\">1990</option>\n                      <option value=\"1991\">1991</option>\n                      <option value=\"1992\">1992</option>\n                      <option value=\"1993\">1993</option>\n                      <option value=\"1994\">1994</option>\n                      <option value=\"1995\">1995</option>\n                      <option value=\"1996\">1996</option>\n                      <option value=\"1997\">1997</option>\n                      <option value=\"1998\">1998</option>\n                      <option value=\"1999\">1999</option>\n                      <option value=\"2000\">2000</option>\n                      <option value=\"2001\">2001</option>\n                      <option value=\"2002\">2002</option>\n                      <option value=\"2003\">2003</option>\n                      <option value=\"2004\">2004</option>\n                      <option value=\"2005\">2005</option>\n                      <option value=\"2006\">2006</option>\n                      <option value=\"2007\">2007</option>\n                      <option value=\"2008\">2008</option>\n                      <option value=\"2009\">2009</option>\n                      <option value=\"2010\">2010</option>\n                      <option value=\"2011\">2011</option>\n                      <option value=\"2012\">2012</option>\n                      <option value=\"2013\">2013</option>\n                      <option value=\"2014\">2014</option>\n                      <option value=\"2015\">2015</option>\n                      <option value=\"2016\">2016</option>\n                      <option value=\"2017\">2017</option>\n                      <option value=\"2018\">2018</option>\n                      <option value=\"2019\">2019</option>\n                      <option value=\"2020\">2020</option>\n                      <option value=\"2021\">2021</option>\n                      <option value=\"2022\">2022</option>\n                      <option value=\"2023\">2023</option>\n                  </select>\n                  <select name=\"\" id=\"schoolPlanner_addCourse_term_input\">\n                    <option selected=\"true\" disabled=\"disabled\">Course term</option>\n                    <option>Fall</option>\n                    <option>Winter</option>\n                    <option>Summer</option>\n                  </select>\n                  <select id=\"schoolPlanner_addCourse_class_input\">\n                    <option selected=\"true\" disabled=\"disabled\">Course classification</option>\n                    <option disabled=\"disabled\">IN-CLASS</option>\n                    <option>Basic science</option>\n                    <option>Applied science</option>\n                    <option disabled=\"disabled\">OUT-OF-CLASS</option>\n                    <option>Lab</option>\n                    <option>Clinical rotation</option>\n                  </select>\n                  <select name=\"\" id=\"schoolPlanner_addCourse_status_input\">\n                    <option selected=\"true\" disabled=\"disabled\">Course status</option>\n                    <option>Unstarted</option>\n                    <option>Ongoing</option>\n                    <option>Pass</option>\n                    <option>Fail</option>\n                  </select>\n                  <div id=\"schoolPlanner_addCourse_instructorsNames_div\" className='fr'>\n                  <div className='fc'>\n                  <input\n                  id=\"schoolPlanner_addCourse_instructorName_input\"\n                  placeholder=\"Course instructors\"\n                />\n                <ul id=\"schoolPlanner_addCourse_instructorsNames_ul\" className='fr'>\n                </ul>\n                  </div>              \n                  <label onClick={()=>{this.addCourseInstructorsNames()}}>add</label>\n                </div>\n                <div id=\"schoolPlanner_addCourse_grade_div\" className='fr'>\n                  <input placeholder='Course grade' id=\"schoolPlanner_addCourse_grade_input\"/>\n                  <p>out of</p>\n                  <input placeholder='Full course grade' id=\"schoolPlanner_addCourse_fullGrade_input\"/>\n                </div>\n                <input placeholder='Exam date' type='date' id=\"schoolPlanner_addCourse_examDate_input\"/>\n                <input\n                    id=\"schoolPlanner_addCourse_examTime_input\"\n                    type=\"time\"\n                  />\n              </form>\n              <label id=\"schoolPlanner_addCourse_addButton_label\"\n                onClick={() =>{\n                  let buttonName=document.getElementById(\"schoolPlanner_addCourse_addButton_label\").textContent\n                  let course_name=document.getElementById(\n                    \"schoolPlanner_addCourse_name_input\"\n                  ).value;\n                  let course_component=document.getElementById(\n                    \"schoolPlanner_addCourse_component_input\"\n                  ).value;\n                  let course_year= document.getElementById(\n                    \"schoolPlanner_addCourse_year_input\"\n                  ).value;\n                  let course_term=document.getElementById(\n                    \"schoolPlanner_addCourse_term_input\"\n                  ).value;\n                  let course_class=document.getElementById(\n                    \"schoolPlanner_addCourse_class_input\"\n                  ).value;\n                  let course_status=document.getElementById(\n                    \"schoolPlanner_addCourse_status_input\"\n                  ).value\n                  let course_grade=document.getElementById(\n                    \"schoolPlanner_addCourse_grade_input\"\n                  ).value\n                  let course_fullGrade=document.getElementById(\n                    \"schoolPlanner_addCourse_fullGrade_input\"\n                  ).value\n                  let exam_date=document.getElementById(\"schoolPlanner_addCourse_examDate_input\").value\n                  let exam_time=document.getElementById(\"schoolPlanner_addCourse_examTime_input\").value\n                    if(buttonName===\"Add\"){\n                      this.addCourse({\n                        course_name: course_name + \" (\"+ course_component+\")\",\n                        course_component: course_component,\n                        course_year: course_year,\n                        course_term: course_term,\n                        course_class:course_class,\n                        course_status:course_status,\n                        course_grade:course_grade,\n                        course_fullGrade:course_fullGrade,\n                        course_length:{},\n                        course_progress:{},\n                        exam_date:exam_date,\n                        exam_time:exam_time\n                        })  \n                      }\n                    if(buttonName===\"Edit\"){\n                      this.editCourse({\n                      course_name: course_name + \" (\"+course_component+\")\",\n                      course_component: course_component,\n                      course_year: course_year,\n                      course_term: course_term,\n                      course_class:course_class,\n                      course_status:course_status,\n                      course_grade:course_grade,\n                      course_fullGrade:course_fullGrade,\n                      course_length:\"No data\",\n                      course_progress:\"No data\",\n                      exam_date:exam_date,\n                      exam_time:exam_time\n                      })  \n                }\n              }\n              }\n              >\n              </label>\n      </div>\n      <div id=\"div_progression\" className='div_progression fc'>\n      {this.state.div_progression_isLoading === true && (\n                <div id=\"div_progression_loaderImg\" className=\"loaderImg_div fc\">\n                  <img src=\"/img/loader.gif\" alt=\"\" width=\"50px\" />\n                </div>\n              )}\n      </div>\n      {/* <div id=\"peerID_div\">\n        <input id=\"peerID_input\"></input>\n        <button onClick={()=>{\n            let peerID_input = document.getElementById(\"peerID_input\").value\n            let telegram_ul = document.getElementById(\"telegram_messages\")\n            let url = \"https://backendstep.onrender.com/api/user/telegram/\"+this.props.state.my_id+\"/\"+peerID_input;\n            let req = new Request(url, {\n              method: \"GET\",\n              mode: \"cors\",\n              headers: { \"Content-Type\": \"application/json\" },\n            });\n            fetch(req)\n              .then((response) => {\n               return response.json()\n               }).then((messages)=>{\n                console.log(messages.messages)\n                 telegram_ul.innerHTML=\"\"\n                 messages.messages.forEach((message)=>{\n                   let p=document.createElement(\"p\")\n                   p.setAttribute(\"class\",\"p_telegram\")\n                   p.textContent=message\n                   telegram_ul.append(p)\n                 })\n               }).then(()=>{\n                document.getElementById(\"telegram_messages_count_p2\").textContent=telegram_ul.children.length\n               })    \n        }}>Click</button>\n      </div> */}\n     \n    </article>\n  </React.Fragment>\n  )\n}\n}\n\n","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\firebase.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":10,"column":10,"nodeType":"195","messageId":"196","endLine":10,"endColumn":19},{"ruleId":"197","severity":1,"message":"198","line":47,"column":5,"nodeType":"199","messageId":"200","endLine":71,"endColumn":6},{"ruleId":"193","severity":1,"message":"201","line":25,"column":8,"nodeType":"195","messageId":"196","endLine":25,"endColumn":19},{"ruleId":"193","severity":1,"message":"202","line":26,"column":8,"nodeType":"195","messageId":"196","endLine":26,"endColumn":13},{"ruleId":"193","severity":1,"message":"203","line":28,"column":8,"nodeType":"195","messageId":"196","endLine":28,"endColumn":19},{"ruleId":"193","severity":1,"message":"204","line":29,"column":8,"nodeType":"195","messageId":"196","endLine":29,"endColumn":14},{"ruleId":"193","severity":1,"message":"205","line":30,"column":8,"nodeType":"195","messageId":"196","endLine":30,"endColumn":12},{"ruleId":"193","severity":1,"message":"206","line":33,"column":8,"nodeType":"195","messageId":"196","endLine":33,"endColumn":13},{"ruleId":"207","severity":1,"message":"208","line":188,"column":13,"nodeType":"209","endLine":188,"endColumn":38},{"ruleId":"207","severity":1,"message":"208","line":197,"column":13,"nodeType":"209","endLine":197,"endColumn":38},{"ruleId":"207","severity":1,"message":"208","line":333,"column":11,"nodeType":"209","endLine":333,"endColumn":40},{"ruleId":"207","severity":1,"message":"208","line":334,"column":11,"nodeType":"209","endLine":334,"endColumn":36},{"ruleId":"207","severity":1,"message":"208","line":382,"column":17,"nodeType":"209","endLine":382,"endColumn":42},{"ruleId":"207","severity":1,"message":"208","line":392,"column":17,"nodeType":"209","endLine":392,"endColumn":42},{"ruleId":"193","severity":1,"message":"210","line":6,"column":9,"nodeType":"195","messageId":"196","endLine":6,"endColumn":11},{"ruleId":"211","severity":1,"message":"212","line":17,"column":5,"nodeType":"213","endLine":17,"endColumn":7,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":113,"column":28,"nodeType":"217","endLine":113,"endColumn":86},{"ruleId":"193","severity":1,"message":"218","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"219","line":5,"column":8,"nodeType":"195","messageId":"196","endLine":5,"endColumn":12},{"ruleId":"193","severity":1,"message":"220","line":6,"column":8,"nodeType":"195","messageId":"196","endLine":6,"endColumn":21},{"ruleId":"193","severity":1,"message":"221","line":8,"column":8,"nodeType":"195","messageId":"196","endLine":8,"endColumn":19},{"ruleId":"193","severity":1,"message":"222","line":12,"column":7,"nodeType":"195","messageId":"196","endLine":12,"endColumn":12},{"ruleId":"189","replacedBy":"223"},{"ruleId":"191","replacedBy":"224"},{"ruleId":"193","severity":1,"message":"218","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"225","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":15},{"ruleId":"193","severity":1,"message":"226","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":13},{"ruleId":"193","severity":1,"message":"227","line":7,"column":5,"nodeType":"195","messageId":"196","endLine":7,"endColumn":13},{"ruleId":"228","severity":1,"message":"229","line":277,"column":43,"nodeType":"230","messageId":"231","endLine":280,"endColumn":8},{"ruleId":"228","severity":1,"message":"232","line":298,"column":41,"nodeType":"230","messageId":"231","endLine":301,"endColumn":6},{"ruleId":"228","severity":1,"message":"233","line":320,"column":43,"nodeType":"230","messageId":"231","endLine":323,"endColumn":8},{"ruleId":"234","severity":1,"message":"235","line":446,"column":26,"nodeType":"195","messageId":"236","endLine":446,"endColumn":27},{"ruleId":"237","severity":1,"message":"238","line":456,"column":75,"nodeType":"239","messageId":"240","endLine":456,"endColumn":77},{"ruleId":"234","severity":1,"message":"235","line":537,"column":32,"nodeType":"195","messageId":"236","endLine":537,"endColumn":33},{"ruleId":"234","severity":1,"message":"235","line":730,"column":18,"nodeType":"195","messageId":"236","endLine":730,"endColumn":19},{"ruleId":"237","severity":1,"message":"238","line":740,"column":67,"nodeType":"239","messageId":"240","endLine":740,"endColumn":69},{"ruleId":"234","severity":1,"message":"235","line":821,"column":24,"nodeType":"195","messageId":"236","endLine":821,"endColumn":25},{"ruleId":"237","severity":1,"message":"238","line":896,"column":33,"nodeType":"239","messageId":"240","endLine":896,"endColumn":35},{"ruleId":"193","severity":1,"message":"241","line":965,"column":9,"nodeType":"195","messageId":"196","endLine":965,"endColumn":16},{"ruleId":"234","severity":1,"message":"235","line":1004,"column":19,"nodeType":"195","messageId":"236","endLine":1004,"endColumn":20},{"ruleId":"234","severity":1,"message":"235","line":1173,"column":24,"nodeType":"195","messageId":"236","endLine":1173,"endColumn":25},{"ruleId":"237","severity":1,"message":"238","line":1199,"column":49,"nodeType":"239","messageId":"240","endLine":1199,"endColumn":51},{"ruleId":"234","severity":1,"message":"235","line":1222,"column":21,"nodeType":"195","messageId":"236","endLine":1222,"endColumn":22},{"ruleId":"228","severity":1,"message":"242","line":1246,"column":29,"nodeType":"230","messageId":"231","endLine":1250,"endColumn":8},{"ruleId":"228","severity":1,"message":"243","line":1272,"column":29,"nodeType":"230","messageId":"231","endLine":1276,"endColumn":8},{"ruleId":"244","severity":1,"message":"245","line":1345,"column":11,"nodeType":"246","messageId":"240","endLine":1345,"endColumn":26},{"ruleId":"228","severity":1,"message":"247","line":1380,"column":27,"nodeType":"230","messageId":"231","endLine":1387,"endColumn":6},{"ruleId":"234","severity":1,"message":"235","line":1562,"column":30,"nodeType":"195","messageId":"236","endLine":1562,"endColumn":31},{"ruleId":"234","severity":1,"message":"235","line":1565,"column":30,"nodeType":"195","messageId":"236","endLine":1565,"endColumn":31},{"ruleId":"234","severity":1,"message":"235","line":1582,"column":30,"nodeType":"195","messageId":"236","endLine":1582,"endColumn":31},{"ruleId":"234","severity":1,"message":"235","line":1585,"column":30,"nodeType":"195","messageId":"236","endLine":1585,"endColumn":31},{"ruleId":"234","severity":1,"message":"235","line":1588,"column":30,"nodeType":"195","messageId":"236","endLine":1588,"endColumn":31},{"ruleId":"234","severity":1,"message":"248","line":1595,"column":31,"nodeType":"195","messageId":"236","endLine":1595,"endColumn":32},{"ruleId":"234","severity":1,"message":"249","line":1597,"column":33,"nodeType":"195","messageId":"236","endLine":1597,"endColumn":34},{"ruleId":"237","severity":1,"message":"238","line":1683,"column":21,"nodeType":"239","messageId":"240","endLine":1683,"endColumn":23},{"ruleId":"237","severity":1,"message":"238","line":1684,"column":21,"nodeType":"239","messageId":"240","endLine":1684,"endColumn":23},{"ruleId":"237","severity":1,"message":"238","line":1685,"column":21,"nodeType":"239","messageId":"240","endLine":1685,"endColumn":23},{"ruleId":"237","severity":1,"message":"238","line":1704,"column":29,"nodeType":"239","messageId":"240","endLine":1704,"endColumn":31},{"ruleId":"193","severity":1,"message":"250","line":1709,"column":19,"nodeType":"195","messageId":"196","endLine":1709,"endColumn":35},{"ruleId":"234","severity":1,"message":"235","line":1710,"column":23,"nodeType":"195","messageId":"236","endLine":1710,"endColumn":24},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'signup_ok' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Terminology' is defined but never used.","'Posts' is defined but never used.","'SearchPosts' is defined but never used.","'Header' is defined but never used.","'Chat' is defined but never used.","'axios' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'v4' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'imageListRef'. Either include it or remove the dependency array.","ArrayExpression",["253"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'Menu' is defined but never used.","'MessengerIcon' is defined but never used.","'ProfileIcon' is defined but never used.","'width' is assigned a value but never used.",["251"],["252"],"'Friends' is defined but never used.","'fas' is defined but never used.","'lectures' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'courseDayAndTime'.","ArrowFunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'lectureOutlines'.","Function declared in a loop contains unsafe references to variable(s) 'courseInstructorsNames'.","no-redeclare","'i' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'courses' is assigned a value but never used.","Function declared in a loop contains unsafe references to variable(s) 'checkedLectures', 'i'.","Function declared in a loop contains unsafe references to variable(s) 'checkedCourses', 'i'.","no-dupe-keys","Duplicate key 'course_progress'.","ObjectExpression","Function declared in a loop contains unsafe references to variable(s) 'i', 'course_pages'.","'j' is already defined.","'z' is already defined.","'totalPagesInDays' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},"Update the dependencies array to be: [imageListRef]",{"range":"256","text":"257"},[521,523],"[imageListRef]"]