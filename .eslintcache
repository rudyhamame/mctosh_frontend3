[{"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\index.js":"1","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\AppRouter.js":"2","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\Login\\Login.jsx":"3","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\App.js":"4","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\Posts.jsx":"5","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Greeting\\Greeting.jsx":"6","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Header.jsx":"7","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Terminology\\Terminology.jsx":"8","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\InputPost\\SearchPosts\\SearchPosts.jsx":"9","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\MountPosts\\MountPosts.jsx":"10","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Footer\\Footer.jsx":"11","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\InputPost\\InputPost.jsx":"12","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Nav.jsx":"13","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\SearchUsers\\SearchUsers.jsx":"14","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Menu\\Menu.jsx":"15","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Notifications\\Notifications.jsx":"16","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Dim\\Dim.jsx":"17","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\MessengerIcon\\MessengerIcon.jsx":"18","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Profile\\ProfileIcon.jsx":"19","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Logout\\Logout.jsx":"20","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Refresh\\Refresh.jsx":"21","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\SubApps\\Chat\\Chat.js":"22","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\Friends.jsx":"23","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\DropHorizontally.jsx":"24","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\FriendsList\\FriendsList.jsx":"25","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\AddFriend\\AddFriend.jsx":"26","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\SubApps\\StudyPlannner\\StudyPlanner.js":"27","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\SubApps\\StudyPlannner\\components\\SchoolPlanner\\SchoolPlanner.jsx":"28","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\firebase.js":"29"},{"size":506,"mtime":1689231643000,"results":"30","hashOfConfig":"31"},{"size":649,"mtime":1689231643000,"results":"32","hashOfConfig":"31"},{"size":13342,"mtime":1690082334823,"results":"33","hashOfConfig":"31"},{"size":70472,"mtime":1690082379260,"results":"34","hashOfConfig":"31"},{"size":830,"mtime":1689231643000,"results":"35","hashOfConfig":"31"},{"size":5057,"mtime":1689231643000,"results":"36","hashOfConfig":"31"},{"size":866,"mtime":1689231643000,"results":"37","hashOfConfig":"31"},{"size":7534,"mtime":1689231643000,"results":"38","hashOfConfig":"31"},{"size":7532,"mtime":1689231643000,"results":"39","hashOfConfig":"31"},{"size":472,"mtime":1689231643000,"results":"40","hashOfConfig":"31"},{"size":184,"mtime":1689231643000,"results":"41","hashOfConfig":"31"},{"size":5044,"mtime":1689231643000,"results":"42","hashOfConfig":"31"},{"size":812,"mtime":1689231643000,"results":"43","hashOfConfig":"31"},{"size":931,"mtime":1689231643000,"results":"44","hashOfConfig":"31"},{"size":1901,"mtime":1689231643000,"results":"45","hashOfConfig":"31"},{"size":1753,"mtime":1689231643000,"results":"46","hashOfConfig":"31"},{"size":1571,"mtime":1689231643000,"results":"47","hashOfConfig":"31"},{"size":283,"mtime":1689231643000,"results":"48","hashOfConfig":"31"},{"size":574,"mtime":1689231643000,"results":"49","hashOfConfig":"31"},{"size":1584,"mtime":1689231643000,"results":"50","hashOfConfig":"31"},{"size":318,"mtime":1689231643000,"results":"51","hashOfConfig":"31"},{"size":6577,"mtime":1689231643000,"results":"52","hashOfConfig":"31"},{"size":5371,"mtime":1689231643000,"results":"53","hashOfConfig":"31"},{"size":2212,"mtime":1689231643000,"results":"54","hashOfConfig":"31"},{"size":625,"mtime":1689231643000,"results":"55","hashOfConfig":"31"},{"size":663,"mtime":1689231643000,"results":"56","hashOfConfig":"31"},{"size":2053,"mtime":1679269862576,"results":"57","hashOfConfig":"31"},{"size":99943,"mtime":1691185730063,"results":"58","hashOfConfig":"31"},{"size":526,"mtime":1689231643000,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"ffl9pf",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\index.js",[],["125","126"],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\AppRouter.js",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\Login\\Login.jsx",["127","128"],"import React, { useState } from \"react\";\nimport AppRouter from \"../AppRouter\";\nimport \"../Login/login.css\";\nimport ReactDOM from \"react-dom\";\nimport { Redirect, BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst Login = () => {\n  //.........................STATE............................//\n  const [is_loading, setIs_loading] = useState(null);\n  const [signup_ok, setSignup_ok] = useState(null);\n  const [login_ok, setLogin_ok] = useState(null);\n  const [authReport, setAuthReport] = useState(null);\n\n  React.useEffect(() => {\n    if (login_ok && authReport) {\n      login_listener();\n      sessionStorage.setItem(\"state\", JSON.stringify(authReport));\n    }\n  });\n  //.........................DECLARATION......................//\n\n  //.........................formControl & formControl (functions)..........................//\n  //........Server answer..........\n    const serverReply = (answer) => {\n      document.getElementById(\"server_answer_message\").textContent = answer;\n  \n      document.getElementById(\"server_answer\").style.width = \"fit-content\";\n      setTimeout(() => {\n        document.getElementById(\"server_answer\").style.width = \"0\";\n        document.getElementById(\"server_answer_message\").textContent = \"\";\n      }, 8000);\n    };\n  \n  const formControl = (text) => {\n    let Login_firstname_input = document.getElementById(\n      \"Login_firstname_input\"\n    );\n    let Login_lastname_input = document.getElementById(\"Login_lastname_input\");\n    // let Login_email_input = document.getElementById(\"Login_email_input\");\n    // let Login_dob_input = document.getElementById(\"Login_dob_input\");\n    let Login_signup_button = document.getElementById(\"Login_signup_button\");\n    let Login_login_button = document.getElementById(\"Login_login_button\");\n    let Login_loginShow_text = document.getElementById(\"Login_loginShow_text\");\n    let Login_signupShow_text = document.getElementById(\n      \"Login_signupShow_text\"\n    );\n    switch (text) {\n      case \"signup\":\n        setLogin_ok(null);\n        Login_firstname_input.style.display = \"initial\";\n        Login_lastname_input.style.display = \"initial\";\n        // Login_email_input.style.display = \"initial\";\n        // Login_dob_input.style.display = \"initial\";\n        Login_signup_button.style.display = \"initial\";\n        Login_login_button.style.display = \"none\";\n        Login_loginShow_text.style.display = \"initial\";\n        Login_signupShow_text.style.display = \"none\";\n        break;\n\n      case \"login\":\n        setSignup_ok(null);\n        Login_signup_button.style.display = \"none\";\n        Login_signupShow_text.style.display = \"initial\";\n        Login_login_button.style.display = \"initial\";\n        // Login_email_input.style.display = \"none\";\n        // Login_dob_input.style.display = \"none\";\n        Login_loginShow_text.style.display = \"none\";\n        Login_firstname_input.style.display = \"none\";\n        Login_lastname_input.style.display = \"none\";\n        break;\n    }\n  };\n\n  ////////////////////////////////////////////CHECK AND GET CREDENTIALS//////////////////////////////////////\n  const login = (event) => {\n    let login;\n    // event.preventDefault();\n    let Login_username_input = document.getElementById(\"Login_username_input\");\n    let Login_password_input = document.getElementById(\"Login_password_input\");\n    if (Login_password_input.value && Login_username_input.value) {\n      setIs_loading(true);\n      let url = \"https://backendstep.onrender.com/api/user/login/\";\n      let req = new Request(url, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          username: Login_username_input.value,\n          password: Login_password_input.value,\n        }),\n      });\n      fetch(req)\n        .then((response) => {\n          if (response.status === 201) {\n            login = true;\n            return response.json(response);\n          }\n          if (response.status === 401) {\n            serverReply(\"UNSUCCESSFUL LOG IN. WRONG USERNAME AND/OR PASSWORD\")\n            setLogin_ok(false)\n            setIs_loading(false);\n            return response.json(response);\n          }\n        })\n        .then((userdata) => {\n          if (userdata && login === true) {\n            setAuthReport({\n              my_id: userdata.user._id,\n              username: userdata.user.info.username,\n              firstname: userdata.user.info.firstname,\n              lastname: userdata.user.info.lastname,\n              // dob: userdata.user.info.dob,\n              token: userdata.token,\n              isConnected: true,\n              notes: userdata.user.notes,\n              friends: userdata.user.friends,\n              friend_requests: userdata.user.friend_requests,\n              notifications: userdata.user.notifications,\n              posts: userdata.user.posts,\n              courses:userdata.user.schoolPlanner.courses,\n              lectures:userdata.user.schoolPlanner.lectures\n            });\n            serverReply(\"YOU HAVE SUCCESSFULLY LOGGED IN!\")\n            setLogin_ok(true)\n          } else {\n            serverReply(\"UNSUCCESSFUL LOG IN. WRONG USERNAME AND/OR PASSWORD\")\n            setIs_loading(false);\n            setLogin_ok(false)\n          }\n        });\n    } else {\n      serverReply(\"UNSUCCESSFUL LOG IN. WRONG USERNAME AND/OR PASSWORD\")\n      setLogin_ok(false)\n      setIs_loading(false);\n    }\n  };\n  //..............................................................................................\n  /////////////////////////////////////////Login listener/////////////////////////////////////////\n  const login_listener = () => {\n    let app_page_width = parseInt(\n      window.getComputedStyle(document.querySelector(\"#root\")).width\n    );\n    if (authReport) {\n      document.getElementById(\"Login_loginFrom_form\").style.height = \"0\";\n      document.getElementById(\"Login_loginFrom_form\").style.padding = \"0\";\n      if (app_page_width > 1000) {\n        document.getElementById(\"Login_loginLogo_text\").style.fontSize =\n          \"100pt\";\n        document.getElementById(\n          \"Login_loginLogo_container\"\n        ).style.marginBottom = \"150px\";\n        document.getElementById(\"Login_subLoginLogo_text\").style.fontSize =\n          \"50pt\";\n      }\n      if (1000 > app_page_width > 700) {\n        document.getElementById(\"Login_loginLogo_text\").style.fontSize = \"90pt\";\n        document.getElementById(\n          \"Login_loginLogo_container\"\n        ).style.marginBottom = \"140px\";\n        document.getElementById(\"Login_subLoginLogo_text\").style.fontSize =\n          \"40pt\";\n      }\n      if (app_page_width < 700) {\n        document.getElementById(\"Login_loginLogo_text\").style.fontSize = \"70pt\";\n        document.getElementById(\n          \"Login_loginLogo_container\"\n        ).style.marginBottom = \"130px\";\n        document.getElementById(\"Login_subLoginLogo_text\").style.fontSize =\n          \"30pt\";\n      }\n\n      setTimeout(() => {\n        setIs_loading(false);\n        ReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n      }, 5000);\n    }\n  };\n  //.............................................................................................................\n  ////////////////////////////////////////////SIGN UP AS USER AND PROFILE//////////////////////////////////////\n  const signup = (event) => {\n\n    event.preventDefault();\n    setIs_loading(true);\n    let Login_username_input = document.getElementById(\"Login_username_input\");\n    let Login_password_input = document.getElementById(\"Login_password_input\");\n    let Login_firstname_input = document.getElementById(\n      \"Login_firstname_input\"\n    );\n    let Login_lastname_input = document.getElementById(\"Login_lastname_input\");\n    // let Login_email_input = document.getElementById(\"Login_email_input\");\n    // let Login_dob_input = document.getElementById(\"Login_dob_input\");\n    //................................user....................................................\n    if (\n      Login_username_input.value &&\n      Login_password_input.value &&\n      Login_firstname_input.value &&\n      Login_lastname_input.value \n      // Login_email_input.value\n      // Login_dob_input.value\n    ) {\n      const url = \"https://backendstep.onrender.com/api/user/signup\";\n      const options = {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          username: Login_username_input.value,\n          password: Login_password_input.value,\n          firstname: Login_firstname_input.value,\n          lastname: Login_lastname_input.value,\n          // email: Login_email_input.value,\n          // dob: Login_dob_input.value,\n        }),\n      };\n      let req = new Request(url, options);\n      fetch(req)\n        .then((response) => {\n          if (response.status === 201) {\n            setIs_loading(false);\n            serverReply(\"YOU HAVE SUCCESSFULLY SIGNED UP!\")\n            setSignup_ok(true)\n            return response.json()\n            // document.getElementById(\"Login_loginFrom_form\").reset();\n          } else {\n            setIs_loading(false);\n            setSignup_ok(false)\n            serverReply(\"UNSUCCESSFUL SIGN UP. PLEASE FILL OUT THE FORM WITH VALID INFORMATION\")\n          }\n        })\n        .catch((err) => {\n          console.log(\"error:\", err.message);\n        });\n    } else {\n      setIs_loading(false);\n      setSignup_ok(false)\n      serverReply(\"UNSUCCESSFUL SIGN UP. PLEASE FILL OUT THE FORM WITH VALID INFORMATION\")\n    }\n  };\n  ////////////////////////////////////////////Create PROFILE//////////////////////////////////////\n\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        <article id=\"Login_article\" className=\"fc\">\n          <main id=\"Login_main\">\n            <section id=\"Login_column1_container\">\n            </section>\n            <section className=\"fc\" id=\"Login_column2_container\">\n            <section id=\"Login_loginLogo_container\">\n              <h1 id=\"Login_loginLogo_text\">MCTOSH</h1>\n              <h4 id=\"Login_subLoginLogo_text\">Virtual Medicine</h4>\n            </section>\n            <section id=\"Login_loginForm_container\">\n              <section id=\"Login_loginFrom_form\" className=\"fc\">\n                <input\n                  id=\"Login_firstname_input\"\n                  type=\"text\"\n                  style={{ display: \"none\" }}\n                  placeholder=\"first name\"\n                />\n                <input\n                  id=\"Login_lastname_input\"\n                  type=\"text\"\n                  style={{ display: \"none\" }}\n                  placeholder=\"last name\"\n                />\n                <input\n                  id=\"Login_username_input\"\n                  type=\"text\"\n                  placeholder=\"username\"\n                  onKeyPress={(event) => {\n                    if (event.which === 13) {\n                      login();\n                    }\n                  }}\n                />\n                <input\n                  id=\"Login_password_input\"\n                  type=\"password\"\n                  placeholder=\"password\"\n                  onKeyPress={(event) => {\n                    if (event.which === 13) {\n                      login();\n                    }\n                  }}\n                />\n                {/* <input\n                  id=\"Login_email_input\"\n                  type=\"email\"\n                  placeholder=\"email address\"\n                  style={{ display: \"none\" }}\n                /> */}\n                {/* <input\n                  id=\"Login_dob_input\"\n                  type=\"date\"\n                  style={{ display: \"none\" }}\n                /> */}\n                <button id=\"Login_login_button\" onClick={login}>\n                  Log in\n                </button>\n\n                <button\n                  id=\"Login_signup_button\"\n                  onClick={signup}\n                  style={{ display: \"none\" }}\n                >\n                  Sign up\n                </button>\n                <h4\n                  style={{ display: \"none\" }}\n                  id=\"Login_loginShow_text\"\n                  onClick={() => formControl(\"login\")}\n                >\n                  Log in?\n                </h4>\n                <h4\n                  id=\"Login_signupShow_text\"\n                  onClick={() => formControl(\"signup\")}\n                >\n                  Sign up?\n                </h4>\n              </section>\n            </section>\n            </section>\n            <section id=\"Login_column3_container\">\n            </section>\n          </main>\n          <footer id=\"Login_footer\">\n            <section id=\"Login_copyright_container\">\n              <h4 id=\"Login_copyright_text\">©2020 Rudy Hamame</h4>\n            </section>\n          </footer>\n          {is_loading === true && (\n            <div id=\"Login_loaderImg_div\" className=\"loaderImg_div fc\">\n              <img src=\"/img/loader.gif\" alt=\"\" width=\"100px\" />\n            </div>\n          )}\n        </article>\n        <div\n          id=\"server_answer\"\n          onClick={() => {\n            document.getElementById(\"server_answer\").style.width = \"0\";\n          }}\n        >\n          <p id=\"server_answer_message\"></p>\n        </div>\n      </Route>\n      <Redirect to=\"/\" />\n    </Router>\n  );\n};\n\nexport default Login;\n","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\App.js",["129","130","131","132","133","134","135","136","137","138","139","140"],"//...........import..................\nimport React from \"react\";\n\n//........import CSS...........\nimport \"./App.css\";\nimport \"./Footer/footer.css\";\nimport \"./Header/header.css\";\nimport \"./Parts/Friends/AddFriend/add_friend.css\";\nimport \"./Main/Posts/posts.css\";\nimport \"./Main/main.css\";\nimport \"./Parts/Friends/friends.css\";\nimport \"./Header/SearchUsers/search_users.css\";\nimport \"./Main/Posts/InputPost/SearchPosts/search_posts.css\";\nimport \"./Header/Logo/logo.css\";\nimport \"./Header/Nav/Notifications/notifications.css\";\nimport \"./Header/Nav/nav.css\";\nimport \"./Main/Posts/InputPost/inputPosts.css\";\nimport \"./Main/Posts/MountPosts/mount_posts.css\";\nimport \"./Header/Nav/Menu/menu.css\";\nimport \"./Parts/Friends/FriendsList/friendslist.css\";\nimport \"./SubApps/Chat/chat.css\";\nimport \"./Main/Terminology/terminology.css\";\nimport \"./Main/Greeting/greeting.css\";\nimport { Route } from \"react-router-dom\";\nimport Terminology from \"./Main/Terminology/Terminology\";\nimport Posts from \"./Main/Posts/Posts\";\nimport Greeting from \"./Main/Greeting/Greeting\";\nimport SearchPosts from \"./Main/Posts/InputPost/SearchPosts/SearchPosts\";\nimport Header from \"./Header/Header\";\nimport Chat from \"./SubApps/Chat/Chat\";\n// import Study from \"./SubApps/StudyPlannner/components/Study/Study\";\nimport SchoolPlanner from \"./SubApps/StudyPlannner/components/SchoolPlanner/SchoolPlanner\";\nimport axios from \"axios\";\n//...........component..................\nclass App extends React.Component {\n  //..........states...........\n  constructor(props) {\n    super(props);\n    this.state = {\n      my_id: JSON.parse(sessionStorage.getItem(\"state\")).my_id,\n      username: JSON.parse(sessionStorage.getItem(\"state\")).username,\n      firstname: JSON.parse(sessionStorage.getItem(\"state\")).firstname,\n      lastname: JSON.parse(sessionStorage.getItem(\"state\")).lastname,\n      dob: JSON.parse(sessionStorage.getItem(\"state\")).dob,\n      token: JSON.parse(sessionStorage.getItem(\"state\")).token,\n      isConnected: true,\n      isOnline: false,\n      friends: JSON.parse(sessionStorage.getItem(\"state\")).friends,\n      chat: [],\n      terminology: [],\n      posts: JSON.parse(sessionStorage.getItem(\"state\")).posts,\n      lectures: JSON.parse(sessionStorage.getItem(\"state\")).lectures,\n      app_is_loading: false,\n      friend_target: null,\n      server_answer: null,\n      friendID_selected: null,\n      searching_on: false,\n      friendsPosts_retrieved: false,\n      retrievingFriendsPosts_DONE: false,\n      retrievingTerminology_DONE: false,\n      retrievingStudySessions_DONE: false,\n      notifications: [],\n      timer: {\n        hours: 0,\n        mins: 0,\n        secs: 0,\n      },\n      study_session: null,\n      profile: false,\n      friendAddedSuccessfully: null,\n      posts_updated: false,\n      posts_deleted: false,\n      image: null,\n    };\n  }\n  ////////////////////////////////////////Variables//////////////\n  // posts = [];\n  // lectures = [];\n  memory = {\n    courses: [],\n  };\n  /////////////////////////////////////////////////////Lifecycle//////////////////////////\n  componentDidMount() {\n    console.log(this.state.my_id);\n    this.setState({\n      my_id: JSON.parse(sessionStorage.getItem(\"state\")).my_id,\n      username: JSON.parse(sessionStorage.getItem(\"state\")).username,\n      firstname: JSON.parse(sessionStorage.getItem(\"state\")).firstname,\n      lastname: JSON.parse(sessionStorage.getItem(\"state\")).lastname,\n      dob: JSON.parse(sessionStorage.getItem(\"state\")).dob,\n      token: JSON.parse(sessionStorage.getItem(\"state\")).token,\n    });\n    this.updateUserInfo();\n  }\n\n  componentDidUpdate() {\n    this.buildNotifications();\n  }\n  componentWillUnmount() {\n    // if (this.props.path === \"/study\") {\n    //   let input = window.confirm(\n    //     \"Do you want this study session to be counted?\"\n    //   );\n    //   if (input) this.updateBeforeLeave();\n    // }\n    // if (this.props.path === \"/\") {\n    //   this.availableToChat(false);\n    // }\n  }\n\n  //......MAKE YOURSELF AVAILABLE TO CHAT......\n  availableToChat = (isConnected) => {\n    let url =\n      \"https://backendstep.onrender.com/api/user/isOnline/\" + this.state.my_id;\n    let options = {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        isConnected: isConnected,\n      }),\n    };\n\n    let req = new Request(url, options);\n    fetch(req)\n      .then((response) => {\n        if (response.status === 201 && this.state.isConnected === false) {\n          sessionStorage.removeItem(\"Header_timer_h1\");\n          sessionStorage.removeItem(\"state\");\n          window.location.reload();\n          return response.json();\n        }\n      })\n      .catch((err) => {\n        console.log(\"error:\", err.message);\n      });\n  };\n\n  //......END OF MAKE YOURSELF AVAILABLE TO CHAT......\n\n  //............................................Retrieving Area..........................................................................\n  posts_alreadyBuilt = [];\n  posts_comments = [];\n  BuildingPosts = () => {\n    console.log(this.state.posts_alreadyBuilt);\n    let ul = document.getElementById(\"MountPosts_content_container\");\n    // if (this.state.posts.length > 0) {\n    //   this.state.posts.sort((a, b) => {\n    //     return new Date(b.date) - new Date(a.date);\n    //   });\n    // }\n    for (var i = 0; i < this.state.posts.length; i++) {\n      console.log(this.state.posts);\n      if (\n        this.state.posts[i]._id !== this.state.posts_alreadyBuilt[i] ||\n        (this.state.posts[i]._id === this.state.posts_alreadyBuilt[i] &&\n          this.state.posts[i].comments.length !==\n            this.state.posts_comments[i]) ||\n        this.state.posts_deleted\n      ) {\n        if (\n          this.state.posts[i]._id === this.state.posts_alreadyBuilt[i] &&\n          this.state.posts[i].comments.length !== this.state.posts_comments[i]\n        ) {\n          let commentlist_ul = document.getElementById(\n            \"commentlist_ul\" + this.state.posts[i]._id\n          );\n          if (this.state.posts[i].comments.length === 1) {\n            let commentlist_ul = document.createElement(\"ul\");\n            commentlist_ul.setAttribute(\n              \"id\",\n              \"commentlist_ul\" + this.state.posts[i]._id\n            );\n            commentlist_ul.setAttribute(\"class\", \"fc commentlist_ul\");\n            let comments_div = document.getElementById(\n              \"commentDiv\" + this.state.posts[i]._id\n            );\n            let li = document.createElement(\"li\");\n            li.setAttribute(\"class\", \"comment_li\");\n            li.textContent =\n              this.state.posts[i].comments[\n                this.state.posts[i].comments.length - 1\n              ];\n            commentlist_ul.prepend(li);\n            comments_div.appendChild(commentlist_ul);\n            this.state.posts_comments[i] = this.state.posts[i].comments.length;\n          } else {\n            let li = document.createElement(\"li\");\n            li.setAttribute(\"class\", \"comment_li\");\n            li.textContent =\n              this.state.posts[i].comments[\n                this.state.posts[i].comments.length - 1\n              ];\n            commentlist_ul.prepend(li);\n            this.state.posts_comments[i] = this.state.posts[i].comments.length;\n          }\n        } else {\n          this.setState({\n            app_is_loading: true,\n          });\n          let date_p = document.createElement(\"p\");\n          let category_p = document.createElement(\"p\");\n          let subject_p = document.createElement(\"p\");\n          let reference_p = document.createElement(\"p\");\n          let page_p = document.createElement(\"p\");\n          let li = document.createElement(\"li\");\n          let details_div = document.createElement(\"div\");\n          let note_options_div = document.createElement(\"div\");\n          //.............................comments.......................\n\n          //............date.................................\n          let date = this.state.posts[i].date;\n          let date_timezone = new Date(date);\n          let date_string = date_timezone.toDateString();\n          let time_string = date_timezone.toLocaleTimeString();\n          //.............................................\n          //...............................note..................................\n          let note_p = document.createElement(\"p\");\n          note_p.textContent = this.state.posts[i].note;\n          note_p.setAttribute(\"class\", \"note_p\");\n          note_options_div.setAttribute(\"class\", \"fr note_options_div\");\n          note_options_div.setAttribute(\"id\", \"note_options_div\" + i);\n          note_options_div.appendChild(note_p);\n          //.......................Options....................................\n          let options_div = document.createElement(\"div\");\n          //............................Poster name.......................\n          let postername_p = document.createElement(\"p\");\n          postername_p.setAttribute(\"class\", \"postername_p\");\n          details_div.appendChild(postername_p);\n          //..................................\n\n          if (this.state.posts[i].id === this.state.my_id) {\n            postername_p.textContent = \"Mine\";\n            let p_delete = document.createElement(\"p\");\n            let p_edit = document.createElement(\"p\");\n            p_delete.style.cursor = \"pointer\";\n            p_edit.style.cursor = \"pointer\";\n            p_delete.textContent = \"Delete\";\n            p_edit.textContent = \"Edit\";\n            options_div.appendChild(p_delete);\n            options_div.appendChild(p_edit);\n            p_delete.addEventListener(\"click\", () => {\n              this.deletePost(options_div.id);\n            });\n\n            p_edit.addEventListener(\"click\", () =>\n              this.editPost(options_div.id)\n            );\n            note_options_div.appendChild(options_div);\n            options_div.setAttribute(\n              \"class\",\n              \"fc MountPosts_postOptionsContainer\"\n            );\n            options_div.setAttribute(\"id\", this.state.posts[i]._id);\n          } else {\n            postername_p.textContent =\n              this.state.posts[i].firstname +\n              \" \" +\n              this.state.posts[i].lastname;\n          }\n          //........................................................................\n\n          //.....................................................................\n          li.className = \"fc\";\n\n          date_p.innerHTML =\n            \"<i class='far fa-clock'></i>\" +\n            \"  \" +\n            date_string +\n            \", \" +\n            time_string;\n          category_p.textContent = \"System: \" + this.state.posts[i].category;\n          subject_p.textContent = \"Discipline: \" + this.state.posts[i].subject;\n          reference_p.textContent =\n            \"Reference: \" + this.state.posts[i].reference;\n          page_p.textContent = \"Page #: \" + this.state.posts[i].page_num;\n          date_p.className = \"MountPosts_date\";\n          details_div.appendChild(date_p);\n          details_div.appendChild(category_p);\n          details_div.appendChild(subject_p);\n          details_div.setAttribute(\"class\", \"fr details_div\");\n          //...................comments...............\n          let comments_div = document.createElement(\"div\");\n          let comment_input = document.createElement(\"input\");\n          let commentlist_ul = document.createElement(\"ul\");\n          comments_div.appendChild(comment_input);\n          comments_div.setAttribute(\"class\", \"fc comments_div\");\n          comments_div.setAttribute(\n            \"id\",\n            \"commentDiv\" + this.state.posts[i]._id\n          );\n          comment_input.setAttribute(\n            \"id\",\n            \"comment_input\" + this.state.posts[i]._id\n          );\n          comment_input.setAttribute(\"class\", \"comment_input\");\n          commentlist_ul.setAttribute(\n            \"id\",\n            \"commentlist_ul\" + this.state.posts[i]._id\n          );\n          comment_input.setAttribute(\"placeholder\", \"Enter a comment\");\n          comment_input.addEventListener(\"keypress\", (event) => {\n            this.postComment(event, comments_div.id, comment_input.id);\n          });\n          this.state.posts[i].comments.forEach((comment) => {\n            let comment_li = document.createElement(\"li\");\n            comment_li.textContent = comment;\n            comment_li.setAttribute(\"class\", \"comment_li\");\n            commentlist_ul.setAttribute(\"class\", \"fc commentlist_ul\");\n            commentlist_ul.prepend(comment_li);\n            comments_div.appendChild(commentlist_ul);\n          });\n          //.....................................................\n\n          if (\n            !(\n              this.state.posts[i].reference === \"\" &&\n              this.state.posts[i].page_num !== null\n            )\n          ) {\n            if (this.state.posts[i].reference !== \"\")\n              details_div.appendChild(reference_p);\n            if (this.state.posts[i].page_num !== null)\n              details_div.appendChild(page_p);\n          }\n          li.setAttribute(\"id\", \"li\" + this.state.posts[i]._id);\n          li.appendChild(details_div);\n          li.appendChild(note_options_div);\n          li.appendChild(comments_div);\n          ul.appendChild(li);\n          this.state.posts_alreadyBuilt[i] = this.state.posts[i]._id;\n          this.state.posts_comments[i] = this.state.posts[i].comments.length;\n          this.setState({\n            app_is_loading: false,\n            //   posts_updated: true,\n          });\n        }\n      }\n\n      // if (this.state.posts.length < this.state.posts_alreadyBuilt.length) {\n      //   this.state.posts_alreadyBuilt = [];\n      //   ul.innerHTML = \"\";\n      // }\n    }\n  };\n  //////////////////////////// Profile///////////////////////////////////////////////\n  profilePosts = [];\n  BuildingPostsProfile = () => {\n    let ul = document.getElementById(\"MountPosts_content_container\");\n    for (var i = 0; i < this.state.posts.length; i++) {\n      if (this.state.posts[i].id === this.state.my_id) {\n        if (this.state.posts.length >= this.profilePosts.length) {\n          if (this.state.posts[i]._id !== this.profilePosts[i]) {\n            if (\n              this.state.posts[i]._id === this.profilePosts[i] &&\n              this.state.posts[i].comments.length !==\n                this.state.posts_comments[i]\n            ) {\n              let commentlist_ul = document.getElementById(\n                \"commentlist_ul\" + this.state.posts[i]._id\n              );\n              if (this.state.posts[i].comments.length === 1) {\n                let commentlist_ul = document.createElement(\"ul\");\n                commentlist_ul.setAttribute(\n                  \"id\",\n                  \"commentlist_ul\" + this.state.posts[i]._id\n                );\n                commentlist_ul.setAttribute(\"class\", \"fc commentlist_ul\");\n                let comments_div = document.getElementById(\n                  \"commentDiv\" + this.state.posts[i]._id\n                );\n                let li = document.createElement(\"li\");\n                li.setAttribute(\"class\", \"comment_li\");\n                li.textContent =\n                  this.state.posts[i].comments[\n                    this.state.posts[i].comments.length - 1\n                  ];\n                commentlist_ul.prepend(li);\n                comments_div.appendChild(commentlist_ul);\n                this.state.posts_comments[i] =\n                  this.state.posts[i].comments.length;\n              } else {\n                let li = document.createElement(\"li\");\n                li.setAttribute(\"class\", \"comment_li\");\n                li.textContent =\n                  this.state.posts[i].comments[\n                    this.state.posts[i].comments.length - 1\n                  ];\n                commentlist_ul.prepend(li);\n                this.state.posts_comments[i] =\n                  this.state.posts[i].comments.length;\n              }\n            } else {\n              this.setState({\n                app_is_loading: true,\n              });\n              let date_p = document.createElement(\"p\");\n              let category_p = document.createElement(\"p\");\n              let subject_p = document.createElement(\"p\");\n              let reference_p = document.createElement(\"p\");\n              let page_p = document.createElement(\"p\");\n              let li = document.createElement(\"li\");\n              let details_div = document.createElement(\"div\");\n              let note_options_div = document.createElement(\"div\");\n              //.............................comments.......................\n\n              //............date.................................\n              let date = this.state.posts[i].date;\n              let date_timezone = new Date(date);\n              let date_string = date_timezone.toDateString();\n              let time_string = date_timezone.toLocaleTimeString();\n              //.............................................\n              //...............................note..................................\n              let note_p = document.createElement(\"p\");\n              note_p.textContent = this.state.posts[i].note;\n              note_p.setAttribute(\"class\", \"note_p\");\n              note_options_div.setAttribute(\"class\", \"fr note_options_div\");\n              note_options_div.setAttribute(\"id\", \"note_options_div\" + i);\n              note_options_div.appendChild(note_p);\n              //.......................Options....................................\n              let options_div = document.createElement(\"div\");\n              options_div.setAttribute(\"class\", \"options_div\");\n              //............................Poster name.......................\n              let postername_p = document.createElement(\"p\");\n              postername_p.setAttribute(\"class\", \"postername_p\");\n              details_div.appendChild(postername_p);\n              //..................................\n\n              postername_p.textContent = \"Mine\";\n              let p_delete = document.createElement(\"p\");\n              let p_edit = document.createElement(\"p\");\n              p_delete.style.cursor = \"pointer\";\n              p_edit.style.cursor = \"pointer\";\n              p_delete.textContent = \"Delete\";\n              p_edit.textContent = \"Edit\";\n              options_div.appendChild(p_delete);\n              options_div.appendChild(p_edit);\n              p_delete.addEventListener(\"click\", () =>\n                this.deletePost(options_div.id)\n              );\n              p_edit.addEventListener(\"click\", () =>\n                this.editPost(options_div.id)\n              );\n              note_options_div.appendChild(options_div);\n              options_div.setAttribute(\n                \"class\",\n                \"fc MountPosts_postOptionsContainer\"\n              );\n              options_div.setAttribute(\"id\", this.state.posts[i]._id);\n\n              //........................................................................\n\n              //.....................................................................\n              li.className = \"fc\";\n\n              date_p.innerHTML =\n                \"<i class='far fa-clock'></i>\" +\n                \"  \" +\n                date_string +\n                \", \" +\n                time_string;\n              category_p.textContent =\n                \"Category: \" + this.state.posts[i].category;\n              subject_p.textContent = \"Subject: \" + this.state.posts[i].subject;\n              reference_p.textContent =\n                \"Reference: \" + this.state.posts[i].reference;\n              page_p.textContent = \"Page #: \" + this.state.posts[i].page_num;\n              date_p.className = \"MountPosts_date\";\n              details_div.appendChild(date_p);\n              details_div.appendChild(category_p);\n              details_div.appendChild(subject_p);\n              details_div.setAttribute(\"class\", \"fr details_div\");\n              //...................comments...............\n              let comments_div = document.createElement(\"div\");\n              let comment_input = document.createElement(\"input\");\n              let commentlist_ul = document.createElement(\"ul\");\n              comments_div.appendChild(comment_input);\n              comments_div.setAttribute(\"class\", \"fc comments_div\");\n              comments_div.setAttribute(\n                \"id\",\n                \"commentDiv\" + this.state.posts[i]._id\n              );\n              comment_input.setAttribute(\n                \"id\",\n                \"comment_input\" + this.state.posts[i]._id\n              );\n              comment_input.setAttribute(\"class\", \"comment_input\");\n              commentlist_ul.setAttribute(\n                \"id\",\n                \"commentlist_ul\" + this.state.posts[i]._id\n              );\n              comment_input.setAttribute(\"placeholder\", \"Enter a comment\");\n              comment_input.addEventListener(\"keypress\", (event) => {\n                this.postComment(event, comments_div.id, comment_input.id);\n              });\n              this.state.posts[i].comments.forEach((comment) => {\n                let comment_li = document.createElement(\"li\");\n                comment_li.textContent = comment;\n                comment_li.setAttribute(\"class\", \"comment_li\");\n                commentlist_ul.setAttribute(\"class\", \"fc commentlist_ul\");\n                commentlist_ul.prepend(comment_li);\n                comments_div.appendChild(commentlist_ul);\n              });\n              //.....................................................\n\n              if (\n                !(\n                  this.state.posts[i].reference === \"\" &&\n                  this.state.posts[i].page_num !== null\n                )\n              ) {\n                if (this.state.posts[i].reference !== \"\")\n                  details_div.appendChild(reference_p);\n                if (this.state.posts[i].page_num !== null)\n                  details_div.appendChild(page_p);\n              }\n              li.setAttribute(\"id\", \"li\" + this.state.posts[i]._id);\n              li.appendChild(details_div);\n              li.appendChild(note_options_div);\n              li.appendChild(comments_div);\n              ul.prepend(li);\n              this.profilePosts[i] = this.state.posts[i]._id;\n              // this.state.posts_comments[i] = this.state.posts[i].comments.length;\n              this.setState({\n                app_is_loading: false,\n              });\n            }\n          }\n        }\n        // if (this.state.posts.length < this.state.posts_alreadyBuilt.length) {\n        //   this.state.posts_alreadyBuilt = [];\n        //   ul.innerHTML = \"\";\n        // }\n      }\n    }\n    if (this.profilePosts.length === 0) {\n    }\n  };\n  ////////////////////////// RetrievingMyStudySessions////////////////////////////////\n  RetrievingMyStudySessions = () => {\n    let secs_sessionInworking = 0;\n    let mins_sessionInworking = 0;\n    let hours_sessionInworking = 0;\n    let total_hours = 0;\n    let total_mins = 0;\n    let total_secs = 0;\n    let secs_totalInworking = 0;\n    let mins_totalInworking = 0;\n\n    // document.getElementById(\"Posts_studySessions_area\").innerHTML = \"\";\n    // && ul to fix unknown problem\n    if (this.state.study_session) {\n      for (var i = 0; i < this.state.study_session.length; i++) {\n        let ul = document.getElementById(\"Greeting_studySessions_area\");\n        let p1 = document.createElement(\"p\");\n        let p2 = document.createElement(\"p\");\n        let li = document.createElement(\"li\");\n        let div = document.createElement(\"div\");\n\n        //............date.................................\n        let date = this.state.study_session[i].date;\n        let date_timezone = new Date(date);\n        let date_string = date_timezone.toDateString();\n\n        //.............................................\n        secs_sessionInworking = this.state.study_session[i].length.secs;\n        mins_sessionInworking = this.state.study_session[i].length.mins;\n        hours_sessionInworking = this.state.study_session[i].length.hours;\n        if (\n          secs_sessionInworking < 10 ||\n          mins_sessionInworking < 10 ||\n          hours_sessionInworking < 10\n        ) {\n          if (secs_sessionInworking < 10)\n            secs_sessionInworking = \"0\" + secs_sessionInworking;\n          if (mins_sessionInworking < 10)\n            mins_sessionInworking = \"0\" + mins_sessionInworking;\n          if (hours_sessionInworking < 10)\n            hours_sessionInworking = \"0\" + hours_sessionInworking;\n        }\n        li.className = \"fc\";\n        p1.textContent = \"On \" + date_string;\n        p2.textContent =\n          \"Duration: \" +\n          hours_sessionInworking +\n          \":\" +\n          mins_sessionInworking +\n          \":\" +\n          secs_sessionInworking;\n        div.appendChild(p1);\n        div.appendChild(p2);\n\n        li.appendChild(div);\n        ul.prepend(li);\n        total_hours = total_hours + this.state.study_session[i].length.hours;\n        total_mins = total_mins + this.state.study_session[i].length.mins;\n        total_secs = total_secs + this.state.study_session[i].length.secs;\n        secs_totalInworking = total_secs;\n        mins_totalInworking = total_mins;\n      }\n      for (i = 0; secs_totalInworking >= 60; i++) {\n        secs_totalInworking--;\n        if (secs_totalInworking % 60 === 0) {\n          total_mins++;\n          total_secs = total_secs - 60;\n        }\n      }\n      for (i = 0; mins_totalInworking >= 60; i++) {\n        mins_totalInworking--;\n        if (mins_totalInworking % 60 === 0) {\n          total_hours++;\n          total_mins = total_mins - 60;\n        }\n      }\n      if (total_secs < 10 || total_mins < 10 || total_hours < 10) {\n        if (total_secs < 10) total_secs = \"0\" + total_secs;\n        if (total_mins < 10) total_mins = \"0\" + total_mins;\n        if (total_hours < 10) total_hours = \"0\" + total_hours;\n      }\n      let li = document.getElementById(\"Greeting_totalDuration_li\");\n      let p = document.createElement(\"p\");\n      p.style.fontWeight = \"600\";\n      p.style.padding = \"10px\";\n\n      p.textContent =\n        \"Total duration: \" + total_hours + \":\" + total_mins + \":\" + total_secs;\n      li.appendChild(p);\n\n      this.setState({\n        retrievingStudySessions_DONE: true,\n      });\n    }\n  };\n\n  ///////////////////////////Retrieving terminology//////////////////////////\n  RetrievingTerminology = () => {\n    if (this.state.terminology) {\n      this.state.terminology.forEach((term) => {\n        let ul = document.getElementById(\"Terminology_content_container\");\n        let p1 = document.createElement(\"p\");\n        let p2 = document.createElement(\"p\");\n        let p3 = document.createElement(\"p\");\n        let p4 = document.createElement(\"p\");\n        let p5 = document.createElement(\"p\");\n        let p6 = document.createElement(\"p\");\n        let li = document.createElement(\"li\");\n        p1.textContent = term.term;\n        p1.style.fontSize = \"16pt\";\n        p1.style.textAlign = \"center\";\n        p1.style.backgroundColor = \"var(--white)\";\n        p1.style.color = \"var(--black)\";\n        p2.textContent = term.meaning;\n        p2.style.fontSize = \"14pt\";\n        p3.textContent = term.category;\n        p3.style.fontSize = \"10pt\";\n        p3.style.textAlign = \"right\";\n        p4.textContent = term.subject;\n        p4.style.fontSize = \"10pt\";\n        p4.style.textAlign = \"right\";\n        p5.textContent = \"Delete\";\n        p5.style.backgroundColor = \"var(--red)\";\n        p5.style.width = \"fit-content\";\n        p5.style.padding = \"0 5px\";\n        p5.style.cursor = \"pointer\";\n        p5.addEventListener(\"click\", () => {\n          this.deleteTerminology(term._id);\n        });\n        p6.textContent = \"Edit\";\n        p6.style.backgroundColor = \"var(--red)\";\n        p6.style.width = \"fit-content\";\n        p6.style.padding = \"0 5px\";\n        p6.style.marginTop = \"5px\";\n\n        p6.style.cursor = \"pointer\";\n        p6.addEventListener(\"click\", () => {\n          this.editTerminology(term._id);\n        });\n        li.appendChild(p1);\n        li.appendChild(p2);\n        li.appendChild(p3);\n        li.appendChild(p4);\n        li.appendChild(p5);\n        li.appendChild(p6);\n        li.setAttribute(\"id\", \"li_term\" + term._id);\n        ul.prepend(li);\n      });\n      this.setState({\n        retrievingTerminology_DONE: true,\n      });\n    }\n  };\n  ////////////////////////////Delete terminology////////////////////////////\n  deleteTerminology = (term_id) => {\n    let url =\n      \"https://backendstep.onrender.com/api/user/deleteTerminology/\" +\n      term_id +\n      \"/\" +\n      this.state.my_id;\n    let options = {\n      method: \"DELETE\",\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Bearer \" + this.state.token,\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    let req = new Request(url, options);\n    fetch(req).then((response) => {\n      if (response.status === 201) {\n        document.getElementById(\"li_term\" + term_id).remove();\n        this.serverReply(\"term deleted\");\n      } else {\n        this.serverReply(\"delete failed\");\n      }\n    });\n  };\n  ////////////////////////////Edit terminology////////////////////////////\n  termIsEditing = false;\n  termIdSelected;\n  editEvenCounter = -1;\n  editTerminology = (term_id) => {\n    this.editEvenCounter++;\n    if (this.editEvenCounter % 2 === 0) {\n      this.termIdSelected = term_id;\n      this.termIsEditing = true;\n      document.getElementById(\"Terminology_term\").value =\n        document.getElementById(\"li_term\" + term_id).children[0].textContent;\n      document.getElementById(\"Terminology_meaning\").value =\n        document.getElementById(\"li_term\" + term_id).children[1].textContent;\n      document.getElementById(\"Terminology_category\").value =\n        document.getElementById(\"li_term\" + term_id).children[2].textContent;\n      document.getElementById(\"Terminology_subject\").value =\n        document.getElementById(\"li_term\" + term_id).children[3].textContent;\n      //.........................\n      document.getElementById(\"Terminology_inputs_container\").style.display =\n        \"flex\";\n      document.getElementById(\"Terminology_control_icon_close\").style.display =\n        \"inline\";\n      document.getElementById(\"Terminology_control_icon_open\").style.display =\n        \"none\";\n      document.getElementById(\"li_term\" + term_id).children[5].textContent =\n        \"Cancel?\";\n      document.getElementById(\n        \"li_term\" + term_id\n      ).children[5].style.backgroundColor = \"var(--black)\";\n      document.getElementById(\"Terminology_post_button\").textContent = \"Edit\";\n      //.......\n    } else {\n      this.termIsEditing = false;\n      document.getElementById(\"Terminology_inputs_container\").style.display =\n        \"none\";\n      document.getElementById(\"Terminology_control_icon_close\").style.display =\n        \"none\";\n      document.getElementById(\"Terminology_control_icon_open\").style.display =\n        \"inline\";\n      //...........\n      document.getElementById(\n        \"li_term\" + term_id\n      ).children[5].style.backgroundColor = \"var(--red)\";\n      document.getElementById(\"li_term\" + term_id).children[5].textContent =\n        \"Edit\";\n      document.getElementById(\"Terminology_post_button\").textContent = \"Post\";\n      //.......\n      document.getElementById(\"Terminology_term\").value = \"\";\n      document.getElementById(\"Terminology_meaning\").value = \"\";\n      document.getElementById(\"Terminology_category\").value = \"\";\n      document.getElementById(\"Terminology_subject\").value = \"\";\n    }\n  };\n\n  //................................................................................................\n  ////////////////////////////Posting a terminology////////////////////////\n  postingTerminology = (term, meaning, category, subject) => {\n    if (this.termIsEditing === false) {\n      this.setState({\n        app_is_loading: true,\n      });\n      let url =\n        \"https://backendstep.onrender.com/api/user/newTerminology/\" +\n        this.state.my_id;\n      let options = {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          Authorization: \"Bearer \" + this.state.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          term: term,\n          meaning: meaning,\n          category: category,\n          subject: subject,\n          date: new Date(),\n        }),\n      };\n      let req = new Request(url, options);\n      fetch(req)\n        .then((result) => {\n          if (result.status === 201) {\n            document.getElementById(\"Terminology_term\").value = \"\";\n            document.getElementById(\"Terminology_meaning\").value = \"\";\n            document.getElementById(\"Terminology_category\").value = \"\";\n            document.getElementById(\"Terminology_subject\").value = \"\";\n            this.serverReply(\"Posted successfully!\");\n          } else {\n            this.serverReply(\n              \"Posting failed. Please make sure you select a category and/or a subject for your note\"\n            );\n            this.setState({\n              app_is_loading: false,\n            });\n          }\n          return result.json();\n        })\n        .then((result) => {\n          if (result) {\n            let ul = document.getElementById(\"Terminology_content_container\");\n            let p1 = document.createElement(\"p\");\n            let p2 = document.createElement(\"p\");\n            let p3 = document.createElement(\"p\");\n            let p4 = document.createElement(\"p\");\n            let p5 = document.createElement(\"p\");\n            let p6 = document.createElement(\"p\");\n            let li = document.createElement(\"li\");\n\n            // //.............................................\n            // let date = result.date;\n            // let date_timezone = new Date(date);\n            // let date_string = date_timezone.toDateString();\n            // let time_string = date_timezone.toLocaleTimeString();\n            // p2.textContent =\n            //   \"Posted on: \" + date_string + \", \" + \"at: \" + time_string;\n            // //.............................................\n            p1.textContent = result.term;\n            p1.style.fontSize = \"16pt\";\n            p1.style.textAlign = \"center\";\n            p1.style.backgroundColor = \"var(--white)\";\n            p1.style.color = \"var(--black)\";\n            p2.textContent = result.meaning;\n            p2.style.fontSize = \"14pt\";\n            p3.textContent = result.category;\n            p3.style.fontSize = \"10pt\";\n            p3.style.textAlign = \"right\";\n            p4.textContent = result.subject;\n            p4.style.fontSize = \"10pt\";\n            p4.style.textAlign = \"right\";\n            p5.textContent = \"Delete\";\n            p5.style.backgroundColor = \"var(--red)\";\n            p5.style.width = \"fit-content\";\n            p5.style.padding = \"0 5px\";\n            p5.style.cursor = \"pointer\";\n            p5.addEventListener(\"click\", () => {\n              this.deleteTerminology(result._id);\n            });\n            p6.textContent = \"Edit\";\n            p6.style.backgroundColor = \"var(--red)\";\n            p6.style.width = \"fit-content\";\n            p6.style.padding = \"0 5px\";\n            p6.style.marginTop = \"5px\";\n            p6.style.cursor = \"pointer\";\n            p6.addEventListener(\"click\", () => {\n              this.editTerminology(result._id);\n            });\n            li.setAttribute(\"id\", \"li_term\" + result._id);\n            li.appendChild(p1);\n            li.appendChild(p2);\n            li.appendChild(p3);\n            li.appendChild(p4);\n            li.appendChild(p5);\n            li.appendChild(p6);\n            li.setAttribute(\"id\", \"li_term\" + result._id);\n\n            ul.prepend(li);\n            //...................................\n            this.setState({\n              app_is_loading: false,\n              retrievingTerminology_DONE: true,\n            });\n          }\n        });\n    } else {\n      let url =\n        \"https://backendstep.onrender.com/api/user/editTerminology/\" +\n        this.termIdSelected +\n        \"/\" +\n        this.state.my_id;\n      let options = {\n        method: \"PUT\",\n        mode: \"cors\",\n        headers: {\n          Authorization: \"Bearer \" + this.state.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          term: document.getElementById(\"Terminology_term\").value,\n          meaning: document.getElementById(\"Terminology_meaning\").value,\n          category: document.getElementById(\"Terminology_category\").value,\n          subject: document.getElementById(\"Terminology_subject\").value,\n          date: new Date(),\n        }),\n      };\n      let req = new Request(url, options);\n      fetch(req)\n        .then((response) => {\n          if (response.status === 201) {\n            this.enableEditPost = false;\n            document.getElementById(\"Terminology_post_button\").textContent =\n              \"Post\";\n\n            document.getElementById(\n              \"li_term\" + this.termIdSelected\n            ).children[0].textContent =\n              document.getElementById(\"Terminology_term\").value;\n            document.getElementById(\n              \"li_term\" + this.termIdSelected\n            ).children[1].textContent = document.getElementById(\n              \"Terminology_meaning\"\n            ).value;\n            document.getElementById(\n              \"li_term\" + this.termIdSelected\n            ).children[2].textContent = document.getElementById(\n              \"Terminology_category\"\n            ).value;\n            document.getElementById(\n              \"li_term\" + this.termIdSelected\n            ).children[3].textContent = document.getElementById(\n              \"Terminology_subject\"\n            ).value;\n            document.getElementById(\n              \"li_term\" + this.termIdSelected\n            ).children[5].textContent = \"Edit\";\n            document.getElementById(\n              \"li_term\" + this.termIdSelected\n            ).children[5].style.backgroundColor = \"var(--red)\";\n            this.serverReply(\"term modified\");\n          } else {\n            this.serverReply(\n              \"modifying failed. Please make sure you select a category and/or a subject for your note\"\n            );\n          }\n        })\n        .then(() => {\n          document.getElementById(\"Terminology_term\").value = \"\";\n          document.getElementById(\"Terminology_meaning\").value = \"\";\n          document.getElementById(\"Terminology_category\").value = \"\";\n          document.getElementById(\"Terminology_subject\").value = \"\";\n          this.termIsEditing = false;\n        });\n    }\n  };\n\n  ////////////////////////////////Edit Post///////////////////////////////////////////\n  enableEditPost = false;\n  targetIDEditPost;\n  editPostControlCounter = -1;\n  editPost = (post_id) => {\n    this.editPostControlCounter++;\n    if (this.editPostControlCounter % 2 === 0) {\n      this.targetIDEditPost = post_id;\n      this.state.posts.forEach((post) => {\n        if (post._id === post_id) {\n          document.getElementById(\"InputPost_textarea\").value = post.note;\n          document.getElementById(\"InputPost_category\").value = post.category;\n          document.getElementById(\"InputPost_subject\").value = post.subject;\n          document.getElementById(\"InputPost_resourse\").value = post.reference;\n          document.getElementById(\"InputPost_page\").value = post.page_num;\n          this.enableEditPost = true;\n          document.getElementById(\"InputPost_post_button\").innerHTML = \"Edit\";\n          document.getElementById(post_id).children[1].textContent = \"Cancel?\";\n          document.getElementById(post_id).children[1].style.backgroundColor =\n            \"var(--black)\";\n        }\n      });\n    } else {\n      document.getElementById(\"InputPost_textarea\").value = \"\";\n      document.getElementById(\"InputPost_category\").value = \"\";\n      document.getElementById(\"InputPost_subject\").value = \"\";\n      document.getElementById(\"InputPost_resourse\").value = \"\";\n      document.getElementById(\"InputPost_page\").value = \"\";\n      this.enableEditPost = false;\n      document.getElementById(\"InputPost_post_button\").innerHTML = \"Post\";\n      document.getElementById(post_id).children[1].style.backgroundColor =\n        \"var(--red)\";\n      document.getElementById(post_id).children[1].textContent = \"Edit\";\n    }\n  };\n  ////////////////////////Post Comment/////////////////////////////\n  postComment = (event, post_id, input_id) => {\n    if (event.which === 13) {\n      let url =\n        \"https://backendstep.onrender.com/api/posts/commentPost/\" +\n        post_id.slice(10, post_id.length) +\n        \"/\" +\n        document.getElementById(input_id).value;\n      let options = {\n        method: \"PUT\",\n        mode: \"cors\",\n        headers: {\n          Authorization: \"Bearer \" + this.state.token,\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      let req = new Request(url, options);\n      fetch(req).then((response) => {\n        if (response.status === 201) {\n          document.getElementById(input_id).value = \"\";\n          this.serverReply(\"post modified\");\n        } else {\n          this.serverReply(\"modify failed\");\n        }\n      });\n    }\n  };\n  //////////////////////////SEND MESSAGE TO FRIEND'S Chat////////////////////////////////\n  sendToThemMessage = (message) => {\n    let textarea = document.getElementById(\"Chat_textarea_input\");\n    textarea.style.height = \"70px\";\n    if (message && message.trim() !== \"\") {\n      let url =\n        \"https://backendstep.onrender.com/api/chat/sendMessage/\" +\n        this.state.friendID_selected +\n        \"/\" +\n        this.state.my_id;\n      let options = {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          Authorization: \"Bearer \" + this.state.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: document.getElementById(\"Chat_textarea_input\").value,\n        }),\n      };\n      let req = new Request(url, options);\n      fetch(req).then((result) => {\n        if (result.status === 201) {\n          document.getElementById(\"Chat_textarea_input\").value = \"\";\n        }\n      });\n    } else {\n      this.serverReply(\"You can't send an empty message\");\n    }\n  };\n\n  ////////////////////////ACCEPT FRIEND/////////////////////////////////////////////\n\n  acceptFriend = (friend) => {\n    let friend_trim = friend.slice(11, friend.length);\n    document.getElementById(friend_trim).style.backgroundColor = \"var(--black)\";\n    document.getElementById(\"server_answer_message\").textContent = \"Adding ...\";\n    document.getElementById(\"server_answer\").style.width = \"fit-content\";\n    let url =\n      \"https://backendstep.onrender.com/api/user/acceptFriend/\" +\n      this.state.my_id +\n      \"/\" +\n      friend_trim;\n    let options = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Bearer \" + this.state.token,\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    let req = new Request(url, options);\n    fetch(req).then((response) => {\n      if (response.status === 201) {\n        document.getElementById(\"server_answer_message\").textContent =\n          \"You're now friends!\";\n\n        let url =\n          \"https://backendstep.onrender.com/api/user/editUserInfo/\" +\n          this.state.my_id +\n          \"/\" +\n          friend_trim;\n        let options = {\n          method: \"PUT\",\n          mode: \"cors\",\n          headers: {\n            Authorization: \"Bearer \" + this.state.token,\n            \"Content-Type\": \"application/json\",\n          },\n        };\n        let req = new Request(url, options);\n        fetch(req).then((response) => {\n          if (response.ok) {\n            setTimeout(() => {\n              document.getElementById(\"server_answer\").style.width = \"0\";\n              document.getElementById(\"server_answer_message\").textContent = \"\";\n            }, 5000);\n            document.getElementById(friend_trim).parentElement.style.display =\n              \"none\";\n          }\n        });\n      }\n      if (response.status === 409) {\n        document.getElementById(\"server_answer_message\").textContent =\n          \"You're already friends!\";\n        setTimeout(() => {\n          document.getElementById(\"server_answer\").style.width = \"0\";\n          document.getElementById(\"server_answer_message\").textContent = \"\";\n        }, 5000);\n        document.getElementById(friend_trim).parentElement.style.display =\n          \"none\";\n      }\n    });\n  };\n  ////////////////////////Decline Request/////////////////////////////////////////////\n\n  makeNotificationsRead = (friend) => {\n    let friend_trim = friend.slice(12, friend.length);\n    alert(friend_trim);\n    let url =\n      \"https://backendstep.onrender.com/api/user/editUserInfo/\" +\n      this.state.my_id +\n      \"/\" +\n      friend_trim;\n\n    let options = {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Bearer \" + this.state.token,\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    let req = new Request(url, options);\n    fetch(req).then((response) => {\n      document.getElementById(friend_trim).style.backgroundColor =\n        \"var(--black)\";\n      if (response.status === 200) {\n        document.getElementById(friend_trim).parentElement.style.display =\n          \"none\";\n        document.getElementById(\"server_answer\").style.width = \"fit-content\";\n        document.getElementById(\"server_answer_message\").textContent = \"Done!\";\n        setTimeout(() => {\n          document.getElementById(\"server_answer\").style.width = \"0\";\n          document.getElementById(\"server_answer_message\").textContent = \"\";\n        }, 5000);\n      }\n    });\n  };\n\n  //////////////////////////////BUILD FRIENDS LIST////////////////\n  app_friends = [];\n\n  buildFriendsList = () => {\n    //...START FETCHING FRIENDS\n    let url =\n      \"https://backendstep.onrender.com/api/user/update/\" + this.state.my_id;\n    let req = new Request(url, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Bearer \" + this.state.token,\n      },\n    });\n    fetch(req)\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n      })\n      .then((jsonData) => {\n        //...END FETCHING FRIENDS\n        let ul = document.getElementById(\"FriendsList_friends_list\");\n\n        for (var i = 0; i < jsonData.friends.length; i++) {\n          this.setState({\n            friends: jsonData.friends,\n          });\n          //For every friend\n          if (this.app_friends[i] !== jsonData.friends[i]._id) {\n            //If a friend is new to the app add it to the friends list with respect to the online status and to the app memory\n            let p = document.createElement(\"p\");\n            let li = document.createElement(\"li\");\n            let icon = document.createElement(\"i\");\n\n            p.textContent =\n              jsonData.friends[i].info.firstname +\n              \" \" +\n              jsonData.friends[i].info.lastname;\n            p.setAttribute(\"id\", [i]);\n            li.appendChild(p);\n            li.setAttribute(\"id\", jsonData.friends[i]._id);\n            li.addEventListener(\"click\", () => {\n              this.get_current_friend_chat_id(li.id);\n\n              document.getElementById(\n                \"DropHorizontally_article\"\n              ).style.display = \"none\";\n            });\n            li.setAttribute(\"class\", \"fr\");\n            li.setAttribute(\"title\", jsonData.friends[i].info.firstname);\n            icon.setAttribute(\"id\", \"online_icon\" + jsonData.friends[i]._id);\n            icon.setAttribute(\"class\", \"fas fa-circle\");\n            li.appendChild(icon);\n            ul.appendChild(li);\n            if (jsonData.friends[i].status.isConnected) {\n              icon.style.color = \"#32cd32\";\n            } else {\n              icon.style.color = \"var(--black)\";\n            }\n            this.app_friends[i] = jsonData.friends[i]._id;\n          }\n          // if (this.app_friends[i] === jsonData.friends[i]._id) {\n          //   // if we already have this friend in the memory app just check their online status and change it\n          //   if (jsonData.friends[i].status.isConnected) {\n          //     document.getElementById(\n          //       \"online_icon\" + jsonData.friends[i]._id\n          //     ).style.color = \"#32cd32\";\n          //   } else {\n          //     document.getElementById(\n          //       \"online_icon\" + jsonData.friends[i]._id\n          //     ).style.color = \"var(--black)\";\n          //   }\n          // }\n        }\n      });\n  };\n\n  ////////////////////////////Select friend id to chat //////////////////////////////////////////////////\n  get_current_friend_chat_id = (friendID) => {\n    this.setState({\n      friendID_selected: friendID,\n    });\n    this.state.friends.forEach((friend) => {\n      if (friend._id === friendID) {\n        document.getElementById(\"Chat_title_text\").textContent =\n          friend.info.firstname;\n      }\n    });\n    document.getElementById(\"Chat_goback_icon\").style.display = \"inline\";\n    document.getElementById(\"Chat_article\").style.height = \"100%\";\n    document.getElementById(\"FriendsList_article\").style.height = \"0\";\n\n    this.RetrievingMySendingMessages(friendID);\n  };\n\n  ///DeleteFriendPost\n  deleteFriendPost = (post_id) => {\n    document.getElementById(\"li\" + post_id).remove();\n  };\n  ////////////////////////////Update State//////////DONE/////////////////////\n  updateUserInfo = () => {\n    let url =\n      \"https://backendstep.onrender.com/api/user/update/\" + this.state.my_id;\n    let req = new Request(url, {\n      method: \"GET\",\n      mode: \"cors\",\n    });\n    fetch(req)\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n      })\n      .then((jsonData) => {\n        this.setState({\n          friends: jsonData.friends,\n          posts: jsonData.posts,\n          chat: jsonData.chat,\n          notifications: jsonData.notifications,\n          terminology: jsonData.terminology,\n          study_session: jsonData.study_session,\n          isOnline: jsonData.isOnline,\n        });\n        for (var i = 0; i < jsonData.SchoolPlanner.courses.length; i++) {\n          this.memory.courses.push(jsonData.SchoolPlanner.courses[i]);\n          console.log(this.memory.courses[i]);\n        }\n      })\n      .catch((err) => {\n        if (err.message === \"Cannot read property 'credentials' of null\")\n          console.log(\"Error\", err.message);\n      });\n  };\n\n  ////////////////////////////////////BUILD NOTIFICATIONS////////////////////////\n  notificaitons_array = [];\n\n  buildNotifications = () => {\n    let ul = document.getElementById(\"Notifications_dropMenu_container\");\n    for (var i = 0; i < this.state.notifications.length; i++) {\n      if (\n        this.state.notifications[i].status !== \"read\" &&\n        this.notificaitons_array[i] !== this.state.notifications[i]._id\n      ) {\n        document.getElementById(\"i_bell_open\").style.color = \"yellow\";\n        let p = document.createElement(\"p\");\n        let li = document.createElement(\"li\");\n        let div = document.createElement(\"div\");\n        let decline_icon = document.createElement(\"i\");\n        let accept_icon = document.createElement(\"i\");\n\n        decline_icon.setAttribute(\"class\", \"fas fa-times\");\n        accept_icon.setAttribute(\"class\", \"fas fa-user-check\");\n        accept_icon.setAttribute(\n          \"id\",\n          \"accept_icon\" + this.state.notifications[i].id\n        );\n        decline_icon.setAttribute(\n          \"id\",\n          \"decline_icon\" + this.state.notifications[i].id\n        );\n        decline_icon.addEventListener(\"click\", () => {\n          this.makeNotificationsRead(decline_icon.id);\n        });\n        accept_icon.addEventListener(\"click\", () => {\n          this.acceptFriend(accept_icon.id);\n        });\n\n        p.textContent = this.state.notifications[i].message;\n        div.setAttribute(\"class\", \"fr\");\n        div.style.justifyContent = \"space-between\";\n        li.setAttribute(\"id\", this.state.notifications[i].id);\n        li.appendChild(p);\n        div.appendChild(li);\n        div.appendChild(decline_icon);\n        div.appendChild(accept_icon);\n        ul.appendChild(div);\n      }\n\n      this.notificaitons_array[i] = this.state.notifications[i]._id;\n    }\n  };\n  ///////////////////////////////////////Counter////////////////////////////////////////////////\n  counter = () => {\n    let secs;\n    let mins;\n    let hours;\n    document.getElementById(\"Posts_content_container\").style.height = \"100%\";\n    // document.getElementById(\"Footer_article\").style.display = \"none\";\n    // document.getElementById(\"SearchPosts_article\").style.display = \"flex\";\n    // document.getElementById(\"Header_timer_h1\").style.display = \"inline\";\n    if (JSON.parse(sessionStorage.getItem(\"Header_timer_h1\"))) {\n      secs = JSON.parse(sessionStorage.getItem(\"Header_timer_h1\")).secs;\n      mins = JSON.parse(sessionStorage.getItem(\"Header_timer_h1\")).mins;\n      hours = JSON.parse(sessionStorage.getItem(\"Header_timer_h1\")).hours;\n    } else {\n      secs = 0;\n      mins = 0;\n      hours = 0;\n    }\n    setInterval(() => {\n      secs++;\n      if (secs % 60 === 0 && secs !== 0) {\n        mins++;\n        secs = 0;\n      }\n      if (mins % 60 === 0 && mins !== 0) {\n        hours++;\n        mins = 0;\n      }\n\n      this.setState({\n        timer: {\n          hours: hours,\n          mins: mins,\n          secs: secs,\n        },\n      });\n    }, 1000);\n  };\n\n  ////////////////////////////////////////////////////UPDATE isConnect on databae////////////////////////////////\n\n  updateBeforeLeave = () => {\n    let url =\n      \"https://backendstep.onrender.com/api/user/updateBeforeLeave/\" +\n      this.state.my_id;\n    let options = {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        study_session: {\n          date: new Date(),\n          length: this.state.timer,\n        },\n      }),\n    };\n\n    let req = new Request(url, options);\n    fetch(req)\n      .then((response) => {\n        if (response.status === 201 && this.state.isConnected === false) {\n          sessionStorage.removeItem(\"Header_timer_h1\");\n          sessionStorage.removeItem(\"state\");\n          window.location.reload();\n          return response.json();\n        } else {\n          throw new Error(\"bad Http\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"error:\", err.message);\n      });\n  };\n\n  //........Server answer..........\n  serverReply = (answer) => {\n    document.getElementById(\"server_answer_message\").textContent = answer;\n\n    document.getElementById(\"server_answer\").style.width = \"fit-content\";\n    setTimeout(() => {\n      document.getElementById(\"server_answer\").style.width = \"0\";\n      document.getElementById(\"server_answer_message\").textContent = \"\";\n    }, 8000);\n  };\n\n  //.....loader function..........\n  loader = () => {\n    return (\n      <div\n        style={{\n          fontSize: \"20pt\",\n          display: \"flex\",\n          position: \"fixed\",\n          top: \"0\",\n          bottom: \"0\",\n\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          flexDirection: \"column\",\n          zIndex: \"100\",\n        }}\n      >\n        <img src=\"/img/loader.gif\" alt=\"\" width=\"70px\" />\n      </div>\n    );\n  };\n\n  /////////////////////////Log out//////////////////////\n  logOut = () => {\n    this.setState({\n      isConnected: false,\n    });\n    if (this.props.path === \"/study\") {\n      let input = window.confirm(\n        \"Do you want this study session to be counted?\"\n      );\n      if (input) {\n        this.updateBeforeLeave();\n      } else {\n        this.dbUpdate_user_connected(false);\n      }\n    }\n    if (this.props.path === \"/\") {\n      this.dbUpdate_user_connected(false);\n    }\n  };\n\n  ///////////////////////Searching in posts////////////////////\n  prepare_searchPosts = (entry1, entry2, entry3) => {\n    let keyword;\n    let subject;\n    let category;\n    if (!entry1) {\n      keyword = \"$\";\n    } else {\n      keyword = entry1;\n    }\n    if (!entry2) {\n      subject = \"$\";\n    } else {\n      subject = entry2;\n    }\n    if (!entry3) {\n      category = \"$\";\n    } else {\n      category = entry3;\n    }\n    this.searchPosts(keyword, subject, category);\n  };\n  searchPosts = (keyword, subject, category) => {\n    let ul = document.getElementById(\"MountPosts_content_container\");\n    let ul_term = document.getElementById(\"Terminology_content_container\");\n    let array = [];\n    let array_term = [];\n    ul.innerHTML = \"\";\n    ul_term.innerHTML = \"\";\n    //..................................\n    this.state.posts.forEach((post) => {\n      if (keyword !== \"$\" && subject === \"$\" && category === \"$\") {\n        if (\n          String(post.note).toLowerCase() === keyword.toLowerCase() ||\n          String(post.note).toLowerCase().includes(keyword.toLowerCase())\n        ) {\n          array.push(post);\n        }\n      }\n      if (keyword === \"$\" && subject !== \"$\" && category === \"$\") {\n        if (post.subject === subject) {\n          array.push(post);\n        }\n      }\n      if (keyword === \"$\" && subject === \"$\" && category !== \"$\") {\n        if (post.category === category) {\n          array.push(post);\n        }\n      }\n      if (keyword !== \"$\" && subject !== \"$\" && category === \"$\") {\n        if (\n          String(post.note).toLowerCase() === keyword.toLowerCase() ||\n          String(post.note)\n            .toLowerCase()\n            .includes(keyword.toLowerCase() && post.subject === subject)\n        ) {\n          array.push(post);\n        }\n      }\n      if (keyword !== \"$\" && subject === \"$\" && category !== \"$\") {\n        if (\n          String(post.note).toLowerCase() === keyword.toLowerCase() ||\n          String(post.note)\n            .toLowerCase()\n            .includes(keyword.toLowerCase() && post.category === category)\n        ) {\n          array.push(post);\n        }\n      }\n      if (keyword === \"$\" && subject !== \"$\" && category !== \"$\") {\n        if (post.subject === subject && post.category === category) {\n          array.push(post);\n        }\n      }\n      if (keyword !== \"$\" && subject !== \"$\" && category !== \"$\") {\n        if (\n          String(post.note).toLowerCase() === keyword.toLowerCase() ||\n          String(post.note)\n            .toLowerCase()\n            .includes(\n              keyword.toLowerCase() &&\n                post.subject === subject &&\n                post.category === category\n            )\n        ) {\n          array.push(post);\n        }\n      }\n    });\n    //..............................................\n    this.state.terminology.forEach((term) => {\n      if (keyword !== \"$\" && subject === \"$\" && category === \"$\") {\n        if (\n          String(term.term).toLowerCase() === keyword.toLowerCase() ||\n          String(term.term).toLowerCase().includes(keyword.toLowerCase())\n        ) {\n          array_term.push(term);\n        }\n      }\n      if (keyword === \"$\" && subject !== \"$\" && category === \"$\") {\n        if (term.subject === subject) {\n          array_term.push(term);\n        }\n      }\n      if (keyword === \"$\" && subject === \"$\" && category !== \"$\") {\n        if (term.category === category) {\n          array_term.push(term);\n        }\n      }\n      if (keyword !== \"$\" && subject !== \"$\" && category === \"$\") {\n        if (\n          String(term.note).toLowerCase() === keyword.toLowerCase() ||\n          String(term.note)\n            .toLowerCase()\n            .includes(keyword.toLowerCase() && term.subject === subject)\n        ) {\n          array_term.push(term);\n        }\n      }\n      if (keyword !== \"$\" && subject === \"$\" && category !== \"$\") {\n        if (\n          String(term.note).toLowerCase() === keyword.toLowerCase() ||\n          String(term.note)\n            .toLowerCase()\n            .includes(keyword.toLowerCase() && term.category === category)\n        ) {\n          array_term.push(term);\n        }\n      }\n      if (keyword === \"$\" && subject !== \"$\" && category !== \"$\") {\n        if (term.subject === subject && term.category === category) {\n          array_term.push(term);\n        }\n      }\n      if (keyword !== \"$\" && subject !== \"$\" && category !== \"$\") {\n        if (\n          String(term.note).toLowerCase() === keyword.toLowerCase() ||\n          String(term.note)\n            .toLowerCase()\n            .includes(\n              keyword.toLowerCase() &&\n                term.subject === subject &&\n                term.category === category\n            )\n        ) {\n          array_term.push(term);\n        }\n      }\n    });\n    //.......................................\n    this.searchTerminology(array_term);\n    //.............................................\n    let array_associate = [];\n    for (var i = 0; i < array.length; i++) {\n      if (array_associate[i] !== array[i]._id) {\n        let date_p = document.createElement(\"p\");\n        let category_p = document.createElement(\"p\");\n        let subject_p = document.createElement(\"p\");\n        let reference_p = document.createElement(\"p\");\n        let page_p = document.createElement(\"p\");\n        let li = document.createElement(\"li\");\n        let details_div = document.createElement(\"div\");\n        let note_options_div = document.createElement(\"div\");\n        //.............................comments.......................\n\n        //............date.................................\n        let date = array[i].date;\n        let date_timezone = new Date(date);\n        let date_string = date_timezone.toDateString();\n        let time_string = date_timezone.toLocaleTimeString();\n        //.............................................\n        //...............................note..................................\n        let note_p = document.createElement(\"p\");\n        note_p.textContent = array[i].note;\n        note_p.setAttribute(\"class\", \"note_p\");\n        note_options_div.setAttribute(\"class\", \"fr note_options_div\");\n        note_options_div.setAttribute(\"id\", \"note_options_div\" + i);\n        note_options_div.appendChild(note_p);\n        //.......................Options....................................\n        let options_div = document.createElement(\"div\");\n        options_div.setAttribute(\"class\", \"options_div\");\n        //............................Poster name.......................\n        let postername_p = document.createElement(\"p\");\n        postername_p.setAttribute(\"class\", \"postername_p\");\n        details_div.appendChild(postername_p);\n        //..................................\n        if (array[i].id === this.state.my_id) {\n          postername_p.textContent = \"Mine\";\n          let p_delete = document.createElement(\"p\");\n          let p_edit = document.createElement(\"p\");\n          p_delete.style.cursor = \"pointer\";\n          p_edit.style.cursor = \"pointer\";\n          p_delete.textContent = \"Delete\";\n          p_edit.textContent = \"Edit\";\n          options_div.appendChild(p_delete);\n          options_div.appendChild(p_edit);\n          p_delete.addEventListener(\"click\", () => {\n            this.setState({ posts_deleted: true });\n            this.deletePost(options_div.id);\n          });\n          p_edit.addEventListener(\"click\", () => this.editPost(options_div.id));\n          note_options_div.appendChild(options_div);\n          options_div.setAttribute(\n            \"class\",\n            \"fc MountPosts_postOptionsContainer\"\n          );\n          options_div.setAttribute(\"id\", array[i]._id);\n        } else {\n          postername_p.textContent =\n            array[i].firstname + \" \" + array[i].lastname;\n        }\n        //........................................................................\n\n        //.....................................................................\n        li.className = \"fc\";\n\n        date_p.innerHTML =\n          \"<i class='far fa-clock'></i>\" +\n          \"  \" +\n          date_string +\n          \", \" +\n          time_string;\n        category_p.textContent = \"Category: \" + array[i].category;\n        subject_p.textContent = \"Subject: \" + array[i].subject;\n        reference_p.textContent = \"Reference: \" + array[i].reference;\n        page_p.textContent = \"Page #: \" + array[i].page_num;\n        date_p.className = \"MountPosts_date\";\n        details_div.appendChild(date_p);\n        details_div.appendChild(category_p);\n        details_div.appendChild(subject_p);\n        details_div.setAttribute(\"class\", \"fr details_div\");\n        //...................comments...............\n        let comments_div = document.createElement(\"div\");\n        let comment_input = document.createElement(\"input\");\n        let commentlist_ul = document.createElement(\"ul\");\n        comments_div.appendChild(comment_input);\n        comments_div.setAttribute(\"class\", \"fc comments_div\");\n        comments_div.setAttribute(\"id\", \"commentDiv\" + array[i]._id);\n        comment_input.setAttribute(\"id\", \"comment_input\" + array[i]._id);\n        comment_input.setAttribute(\"class\", \"comment_input\");\n        commentlist_ul.setAttribute(\"id\", \"commentlist_ul\" + array[i]._id);\n        comment_input.setAttribute(\"placeholder\", \"Enter a comment\");\n        comment_input.addEventListener(\"keypress\", (event) => {\n          this.postComment(event, comments_div.id, comment_input.id);\n        });\n        array[i].comments.forEach((comment) => {\n          let comment_li = document.createElement(\"li\");\n          comment_li.textContent = comment;\n          comment_li.setAttribute(\"class\", \"comment_li\");\n          commentlist_ul.setAttribute(\"class\", \"fc commentlist_ul\");\n          commentlist_ul.prepend(comment_li);\n          comments_div.appendChild(commentlist_ul);\n        });\n        //.....................................................\n\n        if (!(array[i].reference === \"\" && array[i].page_num !== null)) {\n          if (array[i].reference !== \"\") details_div.appendChild(reference_p);\n          if (array[i].page_num !== null) details_div.appendChild(page_p);\n        }\n        li.setAttribute(\"id\", \"li\" + array[i]._id);\n        li.appendChild(details_div);\n        li.appendChild(note_options_div);\n        li.appendChild(comments_div);\n        ul.appendChild(li);\n        this.setState({\n          app_is_loading: false,\n        });\n      }\n      array_associate[i] = array[i]._id;\n    }\n  };\n  searchTerminology = (array) => {\n    if (array) {\n      array.forEach((term) => {\n        let ul = document.getElementById(\"Terminology_content_container\");\n        let p1 = document.createElement(\"p\");\n        let p2 = document.createElement(\"p\");\n        let p3 = document.createElement(\"p\");\n        let p4 = document.createElement(\"p\");\n        let p5 = document.createElement(\"p\");\n        let p6 = document.createElement(\"p\");\n        let li = document.createElement(\"li\");\n        p1.textContent = term.term;\n        p1.style.fontSize = \"16pt\";\n        p1.style.textAlign = \"center\";\n        p1.style.backgroundColor = \"var(--white)\";\n        p1.style.color = \"var(--black)\";\n        p2.textContent = term.meaning;\n        p2.style.fontSize = \"14pt\";\n        p3.textContent = term.category;\n        p3.style.fontSize = \"10pt\";\n        p3.style.textAlign = \"right\";\n        p4.textContent = term.subject;\n        p4.style.fontSize = \"10pt\";\n        p4.style.textAlign = \"right\";\n        p5.textContent = \"Delete\";\n        p5.style.backgroundColor = \"var(--red)\";\n        p5.style.width = \"fit-content\";\n        p5.style.padding = \"0 5px\";\n        p5.style.cursor = \"pointer\";\n        p5.addEventListener(\"click\", () => {\n          this.deleteTerminology(term._id);\n        });\n        p6.textContent = \"Edit\";\n        p6.style.backgroundColor = \"var(--red)\";\n        p6.style.width = \"fit-content\";\n        p6.style.padding = \"0 5px\";\n        p6.style.marginTop = \"5px\";\n\n        p6.style.cursor = \"pointer\";\n        p6.addEventListener(\"click\", () => {\n          this.editTerminology(term._id);\n        });\n        li.appendChild(p1);\n        li.appendChild(p2);\n        li.appendChild(p3);\n        li.appendChild(p4);\n        li.appendChild(p5);\n        li.appendChild(p6);\n        li.setAttribute(\"id\", \"li_term\" + term._id);\n        ul.prepend(li);\n      });\n      this.setState({\n        retrievingTerminology_DONE: true,\n      });\n    }\n  };\n  show_profile = (boolean) => {\n    this.setState({\n      profile: boolean,\n    });\n  };\n  //.....Reander Login HTML..........\n  render() {\n    return (\n      <React.Fragment>\n        <Route exact path=\"/\">\n          <article id=\"app_page\" className=\"fc\">\n            <main id=\"Main_article\" className=\"fr\">\n              <Greeting state={this.state} />\n            </main>\n          </article>\n        </Route>\n        <Route path=\"/study\">\n          <article id=\"app_page\" className=\"fc\">\n            <main id=\"Main_article\" className=\"fr\">\n              {/* <Study\n                state={this.state}\n                logOut={this.logOut}\n                acceptFriend={this.acceptFriend}\n                type={this.type}\n                show_profile={this.show_profile}\n                serverReply={this.serverReply}\n              />{\" \"} */}\n            </main>\n          </article>\n        </Route>\n        <Route path=\"/studyplanner\">\n          <SchoolPlanner\n            state={this.state}\n            logOut={this.logOut}\n            acceptFriend={this.acceptFriend}\n            type={this.type}\n            show_profile={this.show_profile}\n            memory={this.memory}\n            serverReply={this.serverReply}\n          />\n        </Route>\n        <div\n          id=\"server_answer\"\n          onClick={() => {\n            document.getElementById(\"server_answer\").style.width = \"0\";\n          }}\n        >\n          <p id=\"server_answer_message\"></p>\n        </div>\n        {this.state.app_is_loading && (\n          <div\n            style={{\n              fontSize: \"20pt\",\n              display: \"flex\",\n              position: \"fixed\",\n              top: \"0\",\n              bottom: \"0\",\n              right: \"0\",\n              left: \"0\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              flexDirection: \"column\",\n              zIndex: \"100\",\n            }}\n          >\n            <img\n              src=\"/img/loader.gif\"\n              alt=\"\"\n              width=\"70px\"\n              style={{\n                margin: \"auto\",\n              }}\n            />\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\Posts.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Greeting\\Greeting.jsx",["141","142","143"],"import { Link } from \"react-router-dom\";\nimport Nav from \"../../Header/Nav/Nav\";\nimport React, {useState, useEffect} from 'react'\nimport {storage} from \"../../../firebase\"\nimport {ref, uploadBytes, listAll, getDownloadURL} from \"firebase/storage\"\nimport {v4} from \"uuid\"\n\nconst Greeting=(props)=>{\n  useEffect(()=>{\n    listAll(imageListRef).then((response)=>{\n      response.items.forEach((item)=>{\n        getDownloadURL(item).then((url)=>{\n          setImageList((prev)=>[...prev, url])\n        })\n      })\n    })\n  },[])\n  const [imageUpload, setImageUpload]=useState(null)\n  const[imageList, setImageList]=useState([])\n\n  const imageListRef = ref(storage,\"images/\")\n\n  const handleChange=(e)=>{\n      setImageUpload(e.target.files[0])\n      uploadImage()\n  \n  }\n  const uploadImage=()=>{\n    if(imageUpload===null) return;\n    const imageRef= ref(storage, \"images/\"+props.state.my_id+\"_pp\")\n    uploadBytes(imageRef, imageUpload).then((snapshot)=>{\n      getDownloadURL(snapshot.ref).then((url)=>{\n        setImageList((prev)=>[...prev, url])\n      })\n      alert(\"Image uploaded\")\n    })\n  }\n\n    return (\n      <article id=\"Greeting_studysessions_article\" className=\"fc\">\n      <section id=\"Greeting_preStart\" className=\"fc slide-top\">\n        <div className=\"fc\" style={{ alignItems: \"center\" }}>\n          <h1>Hello {props.state.firstname},</h1>\n          <h2>Let's start a new study session!</h2>\n          {/* <button id=\"Greeting_preStart_button\" className=\"fr\">\n            <Link to=\"/study\">\n              <i class=\"fas fa-stopwatch\"></i> Start Timer\n            </Link>\n          </button> */}\n          <button id=\"Greeting_preStart_button1\" className=\"fr\">\n          <Link to=\"/study\">\n              <i class=\"fas fa-stopwatch\"></i> Study tool\n            </Link>\n          </button>\n          <button id=\"Greeting_preStart_button2\" className=\"fr\">\n          <Link to=\"/studyplanner\">\n              <i class=\"fas fa-stopwatch\"></i> Study organizer\n            </Link>\n          </button>\n       \n        </div>\n\n        <div id=\"Greeting_preStart_reportDiv\">\n          <h3 style={{ textAlign: \"center\" }}>Previous Sessions</h3>\n          <ul id=\"Greeting_studySessions_area\" className=\"fc\">\n            {props.state.study_session &&\n              props.state.study_session.length === 0 && (\n                <div>There are no previous study sessions to show</div>\n              )}\n          </ul>\n          <li id=\"Greeting_totalDuration_li\"></li>\n        </div>\n        \n      </section>\n      <Nav path=\"/\" />\n      <div id=\"Greeting_userMenu_div\" className=\"fc\">\n        <button id=\"Greeting_userMenu_button\" onClick={()=>{\n            let Greeting_userMenu_content_div= document.querySelector(\"#Greeting_userMenu_content_div\");\n            let Greeting_userMenu_content_div_CS=window.getComputedStyle(Greeting_userMenu_content_div)\n            if( Greeting_userMenu_content_div_CS.getPropertyValue(\"display\")===\"none\"){\n            document.getElementById(\"Greeting_userMenu_content_div\").style.display=\"flex\"\n          }else{\n            document.getElementById(\"Greeting_userMenu_content_div\").style.display=\"none\"\n          }\n        }}>\n        <i class=\"fi fi-rr-user\" id=\"Greeting_userMenu_i\"></i>\n        </button>\n        <div id=\"Greeting_userMenu_content_div\" className=\"fc\">\n          <div id=\"Greeting_userMenu_personalInfo_div\">\n          <label class=\"Greeting_userMenu_title_label\">Personal information</label>\n          <div id=\"Greeting_userMenu_personalInfo_content_div\" className=\"fc\">\n            <div className=\"fr Greeting_userMenu_contentDivs\">\n            <label>First name:</label>\n            <p>{props.state.firstname}</p>\n            </div>\n            <div className=\"fr Greeting_userMenu_contentDivs\">\n            <label>Last name:</label>\n            <p>{props.state.lastname}</p>\n            </div>\n            <div className=\"fr Greeting_userMenu_contentDivs\">\n            <label>Username:</label>\n            <p>{props.state.username}</p>\n            </div>\n            <div className=\"fr Greeting_userMenu_contentDivs\">\n            <label>Password:</label>\n            <p style={{color:\"var(--red)\",cursor:\"pointer\"}}>Change password</p>\n            </div>\n            <div className=\"fr Greeting_userMenu_contentDivs\">\n            <label>Profile picture</label>\n            <section className=\"fc\"  id=\"profile_pic_section\">\n              <div className=\"custom-file-upload_profilePic_div fc\">   \n                {imageList.map((url)=>{\n                    return <img src={url} className=\"custom-file-upload_profilePic\"/>\n                  })}\n                  </div>\n              <label class=\"custom-file-upload\">\n              <i class=\"fi fi-sr-camera\" id=\"profile_pic_i\"></i>\n              <input type=\"file\" onChange={handleChange}/>\n              </label>\n              <button onClick={uploadImage} id=\"profile_pic_button\">Upload</button>\n            </section>\n            </div>\n          </div>\n          </div>\n        </div>\n        </div>\n    </article>\n  );\n}\nexport default Greeting","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Header.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Terminology\\Terminology.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\InputPost\\SearchPosts\\SearchPosts.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\MountPosts\\MountPosts.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Footer\\Footer.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Main\\Posts\\InputPost\\InputPost.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Nav.jsx",["144","145","146","147","148"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Dim from \"./Dim/Dim\";\nimport Logout from \"./Logout/Logout\";\nimport Menu from \"./Menu/Menu\";\nimport MessengerIcon from \"./MessengerIcon/MessengerIcon\";\nimport Notifications from \"./Notifications/Notifications\";\nimport ProfileIcon from \"./Profile/ProfileIcon\";\nimport Refresh from \"./Refresh/Refresh\";\nconst Nav = (props) => {\n  let app_page = document.getElementById(\"root\");\n  let width = window.getComputedStyle(app_page).width;\n      return (\n        <nav id=\"Nav_article\" className=\"fr\">\n          <Logout logOut={props.logOut} />\n          <Notifications\n            state={props.state}\n            acceptFriend={props.acceptFriend}\n          />\n          <Dim />\n          <Refresh />\n        </nav>\n      )\n};\n\nexport default Nav;\n","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\SearchUsers\\SearchUsers.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Menu\\Menu.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Notifications\\Notifications.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Dim\\Dim.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\MessengerIcon\\MessengerIcon.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Profile\\ProfileIcon.jsx",["149"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ProfileIcon = (props) => {\n  return (\n    <div>\n      {props.profile !== \"true\" && (\n        <i\n          class=\"fas fa-user-alt\"\n          onClick={() => {\n            props.show_profile(true);\n          }}\n          title=\"Profile\"\n        ></i>\n      )}\n      {props.profile === \"true\" && (\n        <i\n          class=\"fas fa-chevron-circle-left\"\n          onClick={() => {\n            window.location.reload();\n          }}\n        ></i>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileIcon;\n","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Logout\\Logout.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Header\\Nav\\Refresh\\Refresh.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\SubApps\\Chat\\Chat.js",["150"],"import React from \"react\";\nimport Friends from \"../../Parts/Friends/Friends\";\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  //.........VARIABLES.........\n  textarea = document.getElementById(\"Chat_textarea_input\");\n  //...........................................Preperation..................................................\n  preparingChat = () => {\n    let url =\n      \"https://backendstep.onrender.com/api/chat/prepareChat/\" +\n      this.state.my_id;\n    let options = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        Authorization: \"Bearer \" + this.state.token,\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    let req = new Request(url, options);\n    fetch(req);\n  };\n  //.....BUILD CHAT FOR A SPECIFIC FRIEND\n  RetrievingMySendingMessages = (friend_id) => {\n    var messages = [];\n    let ul = document.getElementById(\"Chat_messages\");\n    ul.innerHTML = \"\";\n    for (var i = 0; i < this.state.chat.length; i++) {\n      if (\n        messages[i] !== this.state.chat[i].date &&\n        friend_id === this.state.chat[i]._id\n      ) {\n        document\n          .getElementById(\"Chat_messages\")\n          .scrollBy(0, document.getElementById(\"Chat_messages\").scrollHeight);\n\n        if (this.state.chat[i].from === \"me\") {\n          let p = document.createElement(\"p\");\n          let li = document.createElement(\"li\");\n          let div = document.createElement(\"div\");\n          p.textContent = this.state.chat[i].message;\n          li.setAttribute(\"class\", \"sentMessagesLI\");\n          li.appendChild(p);\n          div.setAttribute(\"class\", \"sentMessagesDIV fc\");\n          div.appendChild(li);\n          ul.appendChild(div);\n        }\n        if (this.state.chat[i].from === \"them\") {\n          let p = document.createElement(\"p\");\n          let li = document.createElement(\"li\");\n          let div = document.createElement(\"div\");\n          p.textContent = this.state.chat[i].message;\n          li.setAttribute(\"class\", \"receivedMessagesLI\");\n          li.appendChild(p);\n          div.setAttribute(\"class\", \"receivedMessagesDIV fc\");\n          div.appendChild(li);\n          ul.appendChild(div);\n        }\n      }\n      messages[i] = this.state.chat[i].date;\n    }\n  };\n  //..........END OF BUILD CHAT FOR A SPECIFIC FRIEND\n  //..........SEND A MESSAGE TO A SPECIFIC FRIEND\n  sendToThemMessage = (message) => {\n    this.textarea.style.height = \"70px\";\n    if (message && message.trim() !== \"\") {\n      let url =\n        \"https://backendstep.onrender.com/api/chat/sendMessage/\" +\n        this.state.friendID_selected +\n        \"/\" +\n        this.state.my_id;\n      let options = {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          Authorization: \"Bearer \" + this.state.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: document.getElementById(\"Chat_textarea_input\").value,\n        }),\n      };\n      let req = new Request(url, options);\n      fetch(req).then((result) => {\n        if (result.status === 201) {\n          document.getElementById(\"Chat_textarea_input\").value = \"\";\n        }\n      });\n    } else {\n      this.serverReply(\"You can't send an empty message\");\n    }\n  };\n  //........END OF SEND A MESSAGE TO A SPECIFIC FRIEND......\n  auto_grow = (event) => {\n    this.textarea.style.height = this.textarea.scrollHeight + \"px\";\n    if (event.which === 8) {\n      this.textarea.style.height = this.textarea.scrollHeight + \"px\";\n    }\n  };\n\n  send_by_enter = (event) => {\n    if (event.which === 13) {\n      this.sendToThemMessage(this.textarea.value);\n    }\n  };\n\n  openNotesAside = () => {\n    let Friends_content_container = document.getElementById(\n      \"Friends_content_container\"\n    );\n    let searchPosts = document.getElementById(\"SearchPosts_article\");\n    let Friends_article = document.getElementById(\"Friends_article\");\n    let Friends_control_door = document.getElementById(\"Friends_control_door\");\n    let app_page = document.querySelector(\"#app_page\");\n    let app_page_css = window.getComputedStyle(app_page);\n    let Header_article = document.getElementById(\"Header_article\");\n    if (Friends_control_door.title === \"unclicked\") {\n      this.dbUpdate_user_connected(true);\n      if (parseInt(app_page_css.width) >= 1500) {\n        Friends_content_container.style.width = \"400px\";\n      }\n\n      if (parseInt(app_page_css.width) < 1200) {\n        searchPosts.style.display = \"none\";\n        Friends_article.style.height = \"100vh\";\n        Friends_content_container.style.height = \"100%\";\n        Header_article.style.display = \"none\";\n      }\n      Friends_control_door.title = \"clicked\";\n    } else {\n      // this.dbUpdate_user_connected(false);\n      if (parseInt(app_page_css.width) < 1200) {\n        Header_article.style.display = \"flex\";\n        searchPosts.style.display = \"flex\";\n        Friends_article.style.height = \"initial\";\n        Friends_content_container.style.height = \"0\";\n      } else {\n        Friends_content_container.style.width = \"0\";\n      }\n      Friends_control_door.title = \"unclicked\";\n    }\n  };\n  render() {\n    return (\n      <aside id=\"Chat_article\" className=\"fc\">\n        <section id=\"Chat_title_container\" className=\"fr\">\n          <i\n            class=\"fas fa-chevron-circle-left\"\n            id=\"Chat_goback_icon\"\n            onClick={() => {\n              document.getElementById(\"Chat_goback_icon\").style.display =\n                \"none\";\n              document.getElementById(\"Chat_article\").style.height = \"0\";\n              document.getElementById(\"FriendsList_article\").style.height =\n                \"100%\";\n              document.getElementById(\n                \"DropHorizontally_article\"\n              ).style.display = \"flex\";\n            }}\n          ></i>\n          <h1 id=\"Chat_title_text\">\n            {/* {props.state.friend_target === true && \"Typing...\"} */}\n          </h1>\n        </section>\n        <ul id=\"Chat_messages\"></ul>\n        <section id=\"Chat_form\" className=\"fr\">\n          <textarea\n            id=\"Chat_textarea_input\"\n            onKeyDown={(event) => {\n              this.auto_grow(event);\n              this.send_by_enter(event);\n            }}\n          ></textarea>\n          <button id=\"Chat_submit_button\">\n            <i\n              class=\"fc far fa-paper-plane\"\n              onClick={() => {\n                this.sendToThemMessage(this.textarea.value);\n              }}\n            ></i>\n          </button>\n        </section>\n      </aside>\n    );\n  }\n}\n\nexport default Chat;\n","C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\Friends.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\DropHorizontally.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\FriendsList\\FriendsList.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\Parts\\Friends\\AddFriend\\AddFriend.jsx",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\SubApps\\StudyPlannner\\StudyPlanner.js",[],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\App\\SubApps\\StudyPlannner\\components\\SchoolPlanner\\SchoolPlanner.jsx",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184"],"C:\\Users\\Rodi\\Documents\\mctosh\\step1-frontend2\\src\\firebase.js",[],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":10,"column":10,"nodeType":"191","messageId":"192","endLine":10,"endColumn":19},{"ruleId":"193","severity":1,"message":"194","line":47,"column":5,"nodeType":"195","messageId":"196","endLine":71,"endColumn":6},{"ruleId":"189","severity":1,"message":"197","line":25,"column":8,"nodeType":"191","messageId":"192","endLine":25,"endColumn":19},{"ruleId":"189","severity":1,"message":"198","line":26,"column":8,"nodeType":"191","messageId":"192","endLine":26,"endColumn":13},{"ruleId":"189","severity":1,"message":"199","line":28,"column":8,"nodeType":"191","messageId":"192","endLine":28,"endColumn":19},{"ruleId":"189","severity":1,"message":"200","line":29,"column":8,"nodeType":"191","messageId":"192","endLine":29,"endColumn":14},{"ruleId":"189","severity":1,"message":"201","line":30,"column":8,"nodeType":"191","messageId":"192","endLine":30,"endColumn":12},{"ruleId":"189","severity":1,"message":"202","line":33,"column":8,"nodeType":"191","messageId":"192","endLine":33,"endColumn":13},{"ruleId":"203","severity":1,"message":"204","line":188,"column":13,"nodeType":"205","endLine":188,"endColumn":38},{"ruleId":"203","severity":1,"message":"204","line":197,"column":13,"nodeType":"205","endLine":197,"endColumn":38},{"ruleId":"203","severity":1,"message":"204","line":333,"column":11,"nodeType":"205","endLine":333,"endColumn":40},{"ruleId":"203","severity":1,"message":"204","line":334,"column":11,"nodeType":"205","endLine":334,"endColumn":36},{"ruleId":"203","severity":1,"message":"204","line":382,"column":17,"nodeType":"205","endLine":382,"endColumn":42},{"ruleId":"203","severity":1,"message":"204","line":392,"column":17,"nodeType":"205","endLine":392,"endColumn":42},{"ruleId":"189","severity":1,"message":"206","line":6,"column":9,"nodeType":"191","messageId":"192","endLine":6,"endColumn":11},{"ruleId":"207","severity":1,"message":"208","line":17,"column":5,"nodeType":"209","endLine":17,"endColumn":7,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":113,"column":28,"nodeType":"213","endLine":113,"endColumn":86},{"ruleId":"189","severity":1,"message":"214","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"215","line":5,"column":8,"nodeType":"191","messageId":"192","endLine":5,"endColumn":12},{"ruleId":"189","severity":1,"message":"216","line":6,"column":8,"nodeType":"191","messageId":"192","endLine":6,"endColumn":21},{"ruleId":"189","severity":1,"message":"217","line":8,"column":8,"nodeType":"191","messageId":"192","endLine":8,"endColumn":19},{"ruleId":"189","severity":1,"message":"218","line":12,"column":7,"nodeType":"191","messageId":"192","endLine":12,"endColumn":12},{"ruleId":"189","severity":1,"message":"214","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"219","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":15},{"ruleId":"189","severity":1,"message":"220","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":13},{"ruleId":"189","severity":1,"message":"221","line":7,"column":5,"nodeType":"191","messageId":"192","endLine":7,"endColumn":13},{"ruleId":"222","severity":1,"message":"223","line":277,"column":43,"nodeType":"224","messageId":"225","endLine":280,"endColumn":8},{"ruleId":"222","severity":1,"message":"226","line":298,"column":41,"nodeType":"224","messageId":"225","endLine":301,"endColumn":6},{"ruleId":"222","severity":1,"message":"227","line":320,"column":43,"nodeType":"224","messageId":"225","endLine":323,"endColumn":8},{"ruleId":"228","severity":1,"message":"229","line":446,"column":26,"nodeType":"191","messageId":"230","endLine":446,"endColumn":27},{"ruleId":"231","severity":1,"message":"232","line":456,"column":75,"nodeType":"233","messageId":"234","endLine":456,"endColumn":77},{"ruleId":"228","severity":1,"message":"229","line":537,"column":32,"nodeType":"191","messageId":"230","endLine":537,"endColumn":33},{"ruleId":"228","severity":1,"message":"229","line":730,"column":18,"nodeType":"191","messageId":"230","endLine":730,"endColumn":19},{"ruleId":"231","severity":1,"message":"232","line":740,"column":67,"nodeType":"233","messageId":"234","endLine":740,"endColumn":69},{"ruleId":"228","severity":1,"message":"229","line":821,"column":24,"nodeType":"191","messageId":"230","endLine":821,"endColumn":25},{"ruleId":"231","severity":1,"message":"232","line":896,"column":33,"nodeType":"233","messageId":"234","endLine":896,"endColumn":35},{"ruleId":"189","severity":1,"message":"235","line":965,"column":9,"nodeType":"191","messageId":"192","endLine":965,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":1004,"column":19,"nodeType":"191","messageId":"230","endLine":1004,"endColumn":20},{"ruleId":"228","severity":1,"message":"229","line":1173,"column":24,"nodeType":"191","messageId":"230","endLine":1173,"endColumn":25},{"ruleId":"231","severity":1,"message":"232","line":1199,"column":49,"nodeType":"233","messageId":"234","endLine":1199,"endColumn":51},{"ruleId":"228","severity":1,"message":"229","line":1222,"column":21,"nodeType":"191","messageId":"230","endLine":1222,"endColumn":22},{"ruleId":"222","severity":1,"message":"236","line":1246,"column":29,"nodeType":"224","messageId":"225","endLine":1250,"endColumn":8},{"ruleId":"222","severity":1,"message":"237","line":1272,"column":29,"nodeType":"224","messageId":"225","endLine":1276,"endColumn":8},{"ruleId":"238","severity":1,"message":"239","line":1345,"column":11,"nodeType":"240","messageId":"234","endLine":1345,"endColumn":26},{"ruleId":"222","severity":1,"message":"241","line":1380,"column":27,"nodeType":"224","messageId":"225","endLine":1387,"endColumn":6},{"ruleId":"228","severity":1,"message":"229","line":1562,"column":30,"nodeType":"191","messageId":"230","endLine":1562,"endColumn":31},{"ruleId":"228","severity":1,"message":"229","line":1565,"column":30,"nodeType":"191","messageId":"230","endLine":1565,"endColumn":31},{"ruleId":"228","severity":1,"message":"229","line":1582,"column":30,"nodeType":"191","messageId":"230","endLine":1582,"endColumn":31},{"ruleId":"228","severity":1,"message":"229","line":1585,"column":30,"nodeType":"191","messageId":"230","endLine":1585,"endColumn":31},{"ruleId":"228","severity":1,"message":"229","line":1588,"column":30,"nodeType":"191","messageId":"230","endLine":1588,"endColumn":31},{"ruleId":"228","severity":1,"message":"242","line":1595,"column":31,"nodeType":"191","messageId":"230","endLine":1595,"endColumn":32},{"ruleId":"228","severity":1,"message":"243","line":1597,"column":33,"nodeType":"191","messageId":"230","endLine":1597,"endColumn":34},{"ruleId":"231","severity":1,"message":"232","line":1683,"column":21,"nodeType":"233","messageId":"234","endLine":1683,"endColumn":23},{"ruleId":"231","severity":1,"message":"232","line":1684,"column":21,"nodeType":"233","messageId":"234","endLine":1684,"endColumn":23},{"ruleId":"231","severity":1,"message":"232","line":1685,"column":21,"nodeType":"233","messageId":"234","endLine":1685,"endColumn":23},{"ruleId":"231","severity":1,"message":"232","line":1704,"column":29,"nodeType":"233","messageId":"234","endLine":1704,"endColumn":31},{"ruleId":"189","severity":1,"message":"244","line":1709,"column":19,"nodeType":"191","messageId":"192","endLine":1709,"endColumn":35},{"ruleId":"228","severity":1,"message":"229","line":1710,"column":23,"nodeType":"191","messageId":"230","endLine":1710,"endColumn":24},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],"no-unused-vars","'signup_ok' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Terminology' is defined but never used.","'Posts' is defined but never used.","'SearchPosts' is defined but never used.","'Header' is defined but never used.","'Chat' is defined but never used.","'axios' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'v4' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'imageListRef'. Either include it or remove the dependency array.","ArrayExpression",["247"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'Menu' is defined but never used.","'MessengerIcon' is defined but never used.","'ProfileIcon' is defined but never used.","'width' is assigned a value but never used.","'Friends' is defined but never used.","'fas' is defined but never used.","'lectures' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'courseDayAndTime'.","ArrowFunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'lectureOutlines'.","Function declared in a loop contains unsafe references to variable(s) 'courseInstructorsNames'.","no-redeclare","'i' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'courses' is assigned a value but never used.","Function declared in a loop contains unsafe references to variable(s) 'checkedLectures', 'i'.","Function declared in a loop contains unsafe references to variable(s) 'checkedCourses', 'i'.","no-dupe-keys","Duplicate key 'course_progress'.","ObjectExpression","Function declared in a loop contains unsafe references to variable(s) 'i', 'course_pages'.","'j' is already defined.","'z' is already defined.","'totalPagesInDays' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},"Update the dependencies array to be: [imageListRef]",{"range":"250","text":"251"},[521,523],"[imageListRef]"]